04-21-2013 08:48:16,297 PM  INFO Main2:28 - demo begins...
04-21-2013 08:48:19,095 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 08:48:19,425 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-21-2013 08:48:19,440 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-21-2013 08:48:19,440 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43f4ebd
04-21-2013 08:48:19,456 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6087e704
04-21-2013 08:48:19,472 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@746db33c
04-21-2013 08:48:19,487 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d469658
04-21-2013 08:48:19,503 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-21-2013 08:48:19,503 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-21-2013 08:48:19,503 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3823bdd1
04-21-2013 08:48:19,518 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@26c1186f
04-21-2013 08:48:19,518 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@26c1186f
04-21-2013 08:48:19,534 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26c1186f
04-21-2013 08:48:19,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-21-2013 08:48:19,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-21-2013 08:48:19,597 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db6235b
04-21-2013 08:48:19,597 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@962522b
04-21-2013 08:48:19,597 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@962522b
04-21-2013 08:48:19,612 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@962522b
04-21-2013 08:48:19,628 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@3af7345b
04-21-2013 08:48:19,628 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@3af7345b
04-21-2013 08:48:19,643 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3af7345b
04-21-2013 08:48:19,659 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3dbe8711
04-21-2013 08:48:19,659 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3dbe8711
04-21-2013 08:48:19,675 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3dbe8711
04-21-2013 08:48:19,690 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ea0105
04-21-2013 08:48:19,690 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ea0105
04-21-2013 08:48:19,706 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ea0105
04-21-2013 08:48:19,722 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b2dd538
04-21-2013 08:48:19,722 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b2dd538
04-21-2013 08:48:19,737 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4876db09
04-21-2013 08:48:19,737 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4876db09
04-21-2013 08:48:19,753 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@3a42f352
04-21-2013 08:48:19,753 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a42f352
04-21-2013 08:48:19,753 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@6bab600f
04-21-2013 08:48:19,768 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bab600f
04-21-2013 08:48:19,800 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@79b4748
04-21-2013 08:48:19,800 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@79b4748
04-21-2013 08:48:19,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e3ca754
04-21-2013 08:48:19,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e3ca754
04-21-2013 08:48:19,831 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1958015a
04-21-2013 08:48:19,831 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1958015a
04-21-2013 08:48:19,831 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1958015a
04-21-2013 08:48:19,847 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66fdfc58
04-21-2013 08:48:19,862 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@5fed27e4
04-21-2013 08:48:19,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5fed27e4
04-21-2013 08:48:19,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5fed27e4
04-21-2013 08:48:19,893 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62fa5ff3
04-21-2013 08:48:19,893 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5bf9e31e
04-21-2013 08:48:19,909 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5bf9e31e
04-21-2013 08:48:19,925 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@77fe4169
04-21-2013 08:48:19,925 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77fe4169
04-21-2013 08:48:19,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@58e5f46e
04-21-2013 08:48:19,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@58e5f46e
04-21-2013 08:48:19,956 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@36eb7331
04-21-2013 08:48:19,956 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@36eb7331
04-21-2013 08:48:19,972 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7857ae58
04-21-2013 08:48:19,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7857ae58
04-21-2013 08:48:19,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@674c5b37
04-21-2013 08:48:20,003 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@528a52b6
04-21-2013 08:48:20,003 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@30d647d8
04-21-2013 08:48:20,018 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@30d647d8
04-21-2013 08:48:20,018 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@30d647d8
04-21-2013 08:48:20,018 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3488b1e6
04-21-2013 08:48:20,034 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3488b1e6
04-21-2013 08:48:20,034 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3488b1e6
04-21-2013 08:48:20,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@2598c6f3
04-21-2013 08:48:20,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@257807a
04-21-2013 08:48:20,065 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@257807a
04-21-2013 08:48:20,065 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@257807a
04-21-2013 08:48:20,081 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ddfd90f
04-21-2013 08:48:20,081 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ddfd90f
04-21-2013 08:48:20,081 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ddfd90f
04-21-2013 08:48:20,097 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@18abe654
04-21-2013 08:48:20,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4c309f9f
04-21-2013 08:48:20,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c309f9f
04-21-2013 08:48:20,191 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34b0ede5
04-21-2013 08:48:20,223 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f758cd1
04-21-2013 08:48:20,223 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f758cd1
04-21-2013 08:48:20,238 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@466d1750
04-21-2013 08:48:20,238 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@465ff916
04-21-2013 08:48:20,269 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@5374a6e2
04-21-2013 08:48:20,269 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5374a6e2
04-21-2013 08:48:20,285 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689e8c34
04-21-2013 08:48:20,285 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@106df95
04-21-2013 08:48:20,285 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a40afb9
04-21-2013 08:48:20,285 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cd0d12e
04-21-2013 08:48:20,285 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31554233
04-21-2013 08:48:20,301 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@546d3b92
04-21-2013 08:48:20,301 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f62198b
04-21-2013 08:48:20,301 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@317b1d64
04-21-2013 08:48:20,441 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 08:48:20,488 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 08:48:20,504 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 08:48:20,519 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 08:48:20,598 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 08:48:20,613 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 08:48:20,613 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 08:48:20,613 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 08:48:20,645 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 08:48:20,645 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 08:48:20,660 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 08:48:20,676 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 08:48:20,676 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 08:48:20,676 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 08:48:20,691 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 08:48:20,691 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 08:48:20,707 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 08:48:20,707 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 08:48:20,723 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 08:48:20,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-21-2013 08:48:20,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-21-2013 08:48:20,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43f4ebd
04-21-2013 08:48:20,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6087e704
04-21-2013 08:48:20,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@746db33c
04-21-2013 08:48:20,754 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d469658
04-21-2013 08:48:20,754 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-21-2013 08:48:20,754 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-21-2013 08:48:20,754 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3823bdd1
04-21-2013 08:48:20,754 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@26c1186f
04-21-2013 08:48:20,769 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@26c1186f
04-21-2013 08:48:20,769 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26c1186f
04-21-2013 08:48:20,769 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-21-2013 08:48:20,769 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-21-2013 08:48:20,785 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db6235b
04-21-2013 08:48:20,785 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@962522b
04-21-2013 08:48:20,785 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@962522b
04-21-2013 08:48:20,785 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@962522b
04-21-2013 08:48:20,785 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@3af7345b
04-21-2013 08:48:20,785 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@3af7345b
04-21-2013 08:48:20,801 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3af7345b
04-21-2013 08:48:20,801 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3dbe8711
04-21-2013 08:48:20,801 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3dbe8711
04-21-2013 08:48:20,801 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3dbe8711
04-21-2013 08:48:20,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ea0105
04-21-2013 08:48:20,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ea0105
04-21-2013 08:48:20,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ea0105
04-21-2013 08:48:20,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b2dd538
04-21-2013 08:48:20,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b2dd538
04-21-2013 08:48:20,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4876db09
04-21-2013 08:48:20,832 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4876db09
04-21-2013 08:48:20,832 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@3a42f352
04-21-2013 08:48:20,832 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a42f352
04-21-2013 08:48:20,848 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@6bab600f
04-21-2013 08:48:20,848 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bab600f
04-21-2013 08:48:20,848 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@79b4748
04-21-2013 08:48:20,848 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@79b4748
04-21-2013 08:48:20,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e3ca754
04-21-2013 08:48:20,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e3ca754
04-21-2013 08:48:20,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1958015a
04-21-2013 08:48:20,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1958015a
04-21-2013 08:48:20,879 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1958015a
04-21-2013 08:48:20,879 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66fdfc58
04-21-2013 08:48:20,879 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@5fed27e4
04-21-2013 08:48:20,895 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5fed27e4
04-21-2013 08:48:20,895 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5fed27e4
04-21-2013 08:48:20,895 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62fa5ff3
04-21-2013 08:48:20,910 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5bf9e31e
04-21-2013 08:48:20,910 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5bf9e31e
04-21-2013 08:48:20,926 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@77fe4169
04-21-2013 08:48:20,926 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77fe4169
04-21-2013 08:48:20,926 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@58e5f46e
04-21-2013 08:48:20,926 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@58e5f46e
04-21-2013 08:48:20,941 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@36eb7331
04-21-2013 08:48:20,941 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@36eb7331
04-21-2013 08:48:20,941 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7857ae58
04-21-2013 08:48:20,941 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7857ae58
04-21-2013 08:48:20,941 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@674c5b37
04-21-2013 08:48:20,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@528a52b6
04-21-2013 08:48:20,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@30d647d8
04-21-2013 08:48:20,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@30d647d8
04-21-2013 08:48:20,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@30d647d8
04-21-2013 08:48:20,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3488b1e6
04-21-2013 08:48:20,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3488b1e6
04-21-2013 08:48:20,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3488b1e6
04-21-2013 08:48:20,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@2598c6f3
04-21-2013 08:48:20,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@257807a
04-21-2013 08:48:20,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@257807a
04-21-2013 08:48:20,988 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@257807a
04-21-2013 08:48:20,988 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ddfd90f
04-21-2013 08:48:20,988 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ddfd90f
04-21-2013 08:48:21,004 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ddfd90f
04-21-2013 08:48:21,004 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@18abe654
04-21-2013 08:48:21,004 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4c309f9f
04-21-2013 08:48:21,004 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c309f9f
04-21-2013 08:48:21,004 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34b0ede5
04-21-2013 08:48:21,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f758cd1
04-21-2013 08:48:21,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f758cd1
04-21-2013 08:48:21,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@466d1750
04-21-2013 08:48:21,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@465ff916
04-21-2013 08:48:21,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@5374a6e2
04-21-2013 08:48:21,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5374a6e2
04-21-2013 08:48:21,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a8a1977
04-21-2013 08:48:21,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@508de972
04-21-2013 08:48:21,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14d964af
04-21-2013 08:48:21,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c6127da
04-21-2013 08:48:21,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e7f8062
04-21-2013 08:48:21,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64c5e2cf
04-21-2013 08:48:21,051 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7badb7b8
04-21-2013 08:48:21,051 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@49f8d077
04-21-2013 08:48:21,051 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 08:48:21,051 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 08:48:21,066 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 08:48:21,066 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 08:48:21,066 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 08:48:21,066 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 08:48:21,066 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 08:48:21,082 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 08:48:21,082 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 08:48:21,082 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 08:48:21,082 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 08:48:21,082 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 08:48:21,098 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 08:48:21,098 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 08:48:21,098 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 08:48:21,098 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: persistence-unit_demo
04-21-2013 08:48:21,880 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 08:48:21,927 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/git/Maven---JPA-2---Hibernate-4---Log4j/target/classes/
04-21-2013 08:48:21,927 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 08:48:22,099 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 08:48:22,178 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 08:48:22,178 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 08:48:22,194 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 08:48:22,225 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 08:48:22,225 PM DEBUG Ejb3Configuration:202 - Creating Factory: persistence-unit_demo
04-21-2013 08:48:22,287 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 08:48:22,365 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 08:48:22,365 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 08:48:22,584 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 08:48:22,662 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 08:48:22,897 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 08:48:22,897 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 08:48:22,928 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 08:48:23,131 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 08:48:23,148 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 08:48:23,210 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 08:48:23,226 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 08:48:23,617 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:23,648 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 08:48:23,679 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 08:48:23,695 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 08:48:23,726 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 08:48:23,726 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:23,742 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:23,835 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:23,851 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:23,851 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 08:48:23,867 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 08:48:23,867 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 08:48:23,882 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 08:48:23,898 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 08:48:23,913 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:23,913 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 08:48:23,913 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 08:48:23,913 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 08:48:23,929 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 08:48:23,929 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 08:48:23,945 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 08:48:23,945 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 08:48:23,945 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 08:48:24,038 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:24,038 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 08:48:24,038 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 08:48:24,038 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 08:48:24,054 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 08:48:24,054 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:24,070 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 08:48:24,070 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 08:48:24,070 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 08:48:24,070 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 08:48:24,085 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 08:48:24,085 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 08:48:24,085 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 08:48:24,085 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 08:48:24,101 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 08:48:24,101 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 08:48:24,132 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 08:48:24,132 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 08:48:24,132 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 08:48:24,149 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 08:48:24,149 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 08:48:24,164 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 08:48:24,180 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 08:48:24,180 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 08:48:24,180 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 08:48:24,180 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 08:48:24,180 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 08:48:24,196 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 08:48:24,274 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 08:48:24,274 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 08:48:24,352 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://192.168.0.103:3306/danielme
04-21-2013 08:48:24,352 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=danielme, password=****, autocommit=false, release_mode=auto}
04-21-2013 08:48:24,352 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 08:48:24,524 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 08:48:25,024 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 08:48:25,227 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucdvmh39sya1b|69ed2bbd] registered.
04-21-2013 08:48:25,416 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucdvmh39sya1b|69ed2bbd] unregistered, in order to be reregistered after update.
04-21-2013 08:48:25,416 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucdvmh39sya1b|69ed2bbd] registered.
04-21-2013 08:48:25,869 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@be093a3 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@6e74e1e6 [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8ucdvmh39sya1b|514f2bd7, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@f6ca1a9f [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucdvmh39sya1b|796528a2, jdbcUrl -> jdbc:mysql://192.168.0.103:3306/danielme, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucdvmh39sya1b|69ed2bbd, numHelperThreads -> 3 ]
04-21-2013 08:48:25,978 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 08:48:25,978 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 08:48:25,978 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 08:48:25,994 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 08:48:25,994 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 08:48:25,994 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@67458657 config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 08:48:25,994 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 08:48:26,009 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 08:48:26,009 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@67458657 [managed: 0, unused: 0, excluded: 0]
04-21-2013 08:48:45,854 PM  WARN ThreadPoolAsynchronousRunner:608 - com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@4c5b55a9 -- APPARENT DEADLOCK!!! Creating emergency threads for unassigned pending tasks!
04-21-2013 08:48:45,854 PM  WARN ThreadPoolAsynchronousRunner:624 - com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@4c5b55a9 -- APPARENT DEADLOCK!!! Complete Status: 
	Managed Threads: 3
	Active Threads: 3
	Active Tasks: 
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@2a47cc3 (com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2)
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@7cfae78f (com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1)
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@3c789d63 (com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0)
	Pending Tasks: 
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@12a4ed99
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@9eae15f
Pool thread stack traces:
	Thread[com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2,5,main]
		java.net.PlainSocketImpl.socketConnect(Native Method)
		java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
		java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
		java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
		java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
		java.net.Socket.connect(Socket.java:529)
		java.net.Socket.connect(Socket.java:478)
		java.net.Socket.<init>(Socket.java:375)
		java.net.Socket.<init>(Socket.java:218)
		com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
		com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
		com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
		com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
		com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
		com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
		com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
		sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
		sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
		java.lang.reflect.Constructor.newInstance(Constructor.java:513)
		com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
		com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
		com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
		com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
		com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
		com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
		com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
		com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
		com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
		com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
	Thread[com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1,5,main]
		java.net.PlainSocketImpl.socketConnect(Native Method)
		java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
		java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
		java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
		java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
		java.net.Socket.connect(Socket.java:529)
		java.net.Socket.connect(Socket.java:478)
		java.net.Socket.<init>(Socket.java:375)
		java.net.Socket.<init>(Socket.java:218)
		com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
		com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
		com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
		com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
		com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
		com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
		com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
		sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
		sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
		java.lang.reflect.Constructor.newInstance(Constructor.java:513)
		com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
		com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
		com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
		com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
		com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
		com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
		com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
		com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
		com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
		com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
	Thread[com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0,5,main]
		java.net.PlainSocketImpl.socketConnect(Native Method)
		java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
		java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
		java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
		java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
		java.net.Socket.connect(Socket.java:529)
		java.net.Socket.connect(Socket.java:478)
		java.net.Socket.<init>(Socket.java:375)
		java.net.Socket.<init>(Socket.java:218)
		com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
		com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
		com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
		com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
		com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
		com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
		com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
		sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
		sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
		java.lang.reflect.Constructor.newInstance(Constructor.java:513)
		com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
		com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
		com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
		com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
		com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
		com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
		com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
		com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
		com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
		com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
		com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)


04-21-2013 08:48:45,871 PM DEBUG ThreadPoolAsynchronousRunner:436 - Apparently some threads have been replaced. Replacement thread processing enabled.
04-21-2013 08:48:47,574 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:48:47,574 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:48:47,574 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:06,904 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPerTaskAsynchronousRunner$TaskThread.run(ThreadPerTaskAsynchronousRunner.java:255)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:06,904 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPerTaskAsynchronousRunner$TaskThread.run(ThreadPerTaskAsynchronousRunner.java:255)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:09,593 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:09,609 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:09,625 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:28,923 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPerTaskAsynchronousRunner$TaskThread.run(ThreadPerTaskAsynchronousRunner.java:255)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:28,923 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPerTaskAsynchronousRunner$TaskThread.run(ThreadPerTaskAsynchronousRunner.java:255)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:31,644 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:31,644 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:31,644 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:350)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2393)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:813)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:218)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:257)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 20 more
04-21-2013 08:49:45,880 PM  WARN ThreadPoolAsynchronousRunner:416 - Task com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@2a47cc3 (in deadlocked PoolThread) failed to complete in maximum time 60000ms. Trying interrupt().
04-21-2013 08:49:45,880 PM  WARN ThreadPoolAsynchronousRunner:416 - Task com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@7cfae78f (in deadlocked PoolThread) failed to complete in maximum time 60000ms. Trying interrupt().
04-21-2013 08:49:45,880 PM  WARN ThreadPoolAsynchronousRunner:416 - Task com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@3c789d63 (in deadlocked PoolThread) failed to complete in maximum time 60000ms. Trying interrupt().
04-21-2013 08:49:45,880 PM DEBUG ThreadPoolAsynchronousRunner:454 - Apparently all replaced threads have either completed their tasks or been interrupted(). Replacement thread processing cancelled.
04-21-2013 09:24:49,433 PM  INFO Main2:28 - demo begins...
04-21-2013 09:24:56,950 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 09:24:57,171 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 09:24:57,186 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 09:24:57,186 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 09:24:57,202 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 09:24:57,217 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 09:24:57,217 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 09:24:57,233 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 09:24:57,233 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 09:24:57,233 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 09:24:57,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 09:24:57,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 09:24:57,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 09:24:57,264 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 09:24:57,264 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 09:24:57,296 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 09:24:57,296 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 09:24:57,311 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 09:24:57,311 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 09:24:57,327 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 09:24:57,327 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 09:24:57,327 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 09:24:57,342 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 09:24:57,342 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 09:24:57,358 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 09:24:57,358 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 09:24:57,358 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 09:24:57,374 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 09:24:57,389 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 09:24:57,389 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 09:24:57,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 09:24:57,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 09:24:57,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 09:24:57,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 09:24:57,421 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 09:24:57,421 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 09:24:57,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 09:24:57,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 09:24:57,452 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 09:24:57,452 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 09:24:57,467 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 09:24:57,467 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 09:24:57,483 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 09:24:57,483 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 09:24:57,499 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 09:24:57,514 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 09:24:57,514 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 09:24:57,514 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 09:24:57,530 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 09:24:57,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 09:24:57,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 09:24:57,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 09:24:57,561 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 09:24:57,561 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 09:24:57,577 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 09:24:57,577 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 09:24:57,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 09:24:57,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 09:24:57,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 09:24:57,608 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 09:24:57,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 09:24:57,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 09:24:57,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 09:24:57,639 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 09:24:57,639 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 09:24:57,639 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 09:24:57,655 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 09:24:57,655 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 09:24:57,671 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 09:24:57,671 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 09:24:57,671 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 09:24:57,671 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 09:24:57,686 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 09:24:57,686 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 09:24:57,733 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 09:24:57,733 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 09:24:57,749 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 09:24:57,780 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 09:24:57,780 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 09:24:57,780 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 09:24:57,796 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 09:24:57,811 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 09:24:57,827 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 09:24:57,827 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 09:24:57,827 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 09:24:57,827 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 09:24:57,842 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 09:24:57,842 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 09:24:57,842 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 09:24:57,842 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 09:24:57,842 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 09:24:57,983 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 09:24:58,031 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 09:24:58,047 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 09:24:58,062 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 09:24:58,156 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 09:24:58,172 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 09:24:58,172 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:24:58,172 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:24:58,187 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 09:24:58,187 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 09:24:58,203 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 09:24:58,203 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 09:24:58,218 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 09:24:58,218 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 09:24:58,234 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 09:24:58,234 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 09:24:58,234 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 09:24:58,250 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 09:24:58,250 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 09:24:58,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 09:24:58,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 09:24:58,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 09:24:58,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 09:24:58,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 09:24:58,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 09:24:58,297 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 09:24:58,297 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 09:24:58,297 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 09:24:58,297 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 09:24:58,312 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 09:24:58,312 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 09:24:58,312 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 09:24:58,312 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 09:24:58,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 09:24:58,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 09:24:58,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 09:24:58,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 09:24:58,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 09:24:58,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 09:24:58,343 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 09:24:58,343 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 09:24:58,343 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 09:24:58,359 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 09:24:58,359 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 09:24:58,359 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 09:24:58,359 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 09:24:58,359 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 09:24:58,359 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 09:24:58,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 09:24:58,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 09:24:58,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 09:24:58,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 09:24:58,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 09:24:58,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 09:24:58,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 09:24:58,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 09:24:58,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 09:24:58,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 09:24:58,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 09:24:58,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 09:24:58,406 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 09:24:58,406 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 09:24:58,406 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 09:24:58,406 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 09:24:58,406 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 09:24:58,406 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 09:24:58,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 09:24:58,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 09:24:58,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 09:24:58,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 09:24:58,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 09:24:58,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 09:24:58,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 09:24:58,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 09:24:58,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 09:24:58,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 09:24:58,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 09:24:58,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 09:24:58,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 09:24:58,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 09:24:58,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 09:24:58,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 09:24:58,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 09:24:58,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 09:24:58,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 09:24:58,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 09:24:58,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 09:24:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 09:24:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 09:24:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 09:24:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 09:24:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 09:24:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 09:24:58,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 09:24:58,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 09:24:58,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 09:24:58,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 09:24:58,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 09:24:58,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 09:24:58,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 09:24:58,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 09:24:58,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 09:24:58,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 09:24:58,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 09:24:58,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 09:24:58,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 09:24:58,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 09:24:58,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 09:24:58,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 09:24:58,547 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 09:24:58,547 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 09:24:58,547 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:24:58,547 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:24:58,562 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 09:24:58,562 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 09:24:58,562 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 09:24:58,562 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 09:24:58,562 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 09:24:58,562 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 09:24:58,578 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 09:24:58,578 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 09:24:58,578 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 09:24:58,578 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 09:24:58,578 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 09:24:58,593 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: persistence-unit_demo
04-21-2013 09:24:59,062 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 09:24:59,110 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 09:24:59,110 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 09:24:59,282 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 09:24:59,360 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 09:24:59,360 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 09:24:59,360 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 09:24:59,407 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 09:24:59,407 PM DEBUG Ejb3Configuration:202 - Creating Factory: persistence-unit_demo
04-21-2013 09:24:59,438 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 09:24:59,501 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 09:24:59,516 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 09:24:59,688 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 09:24:59,766 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 09:25:00,016 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 09:25:00,016 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 09:25:00,048 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 09:25:00,235 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 09:25:00,253 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 09:25:00,300 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 09:25:00,331 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 09:25:00,659 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:00,690 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 09:25:00,737 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 09:25:00,737 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 09:25:00,769 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:25:00,784 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:00,784 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:00,862 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:00,878 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:00,894 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 09:25:00,909 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:25:00,909 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:25:00,909 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 09:25:00,925 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 09:25:00,940 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:00,940 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 09:25:00,940 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 09:25:00,940 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 09:25:00,956 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 09:25:00,956 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 09:25:00,972 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 09:25:00,972 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 09:25:00,972 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 09:25:01,019 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:01,034 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 09:25:01,034 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 09:25:01,034 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 09:25:01,034 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 09:25:01,034 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:01,050 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 09:25:01,050 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 09:25:01,065 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 09:25:01,065 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 09:25:01,065 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 09:25:01,065 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 09:25:01,065 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 09:25:01,081 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 09:25:01,081 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 09:25:01,081 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 09:25:01,112 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 09:25:01,112 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 09:25:01,112 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 09:25:01,112 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 09:25:01,128 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 09:25:01,128 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 09:25:01,144 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 09:25:01,144 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 09:25:01,144 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 09:25:01,144 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 09:25:01,144 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 09:25:01,159 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 09:25:01,237 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 09:25:01,237 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 09:25:01,302 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 09:25:01,302 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 09:25:01,302 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 09:32:27,514 PM  INFO Main2:28 - demo begins...
04-21-2013 09:32:27,697 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 09:32:27,860 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6d62dbb6
04-21-2013 09:32:27,871 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6d62dbb6
04-21-2013 09:32:27,873 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6d62dbb6
04-21-2013 09:32:27,879 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@25595f51
04-21-2013 09:32:27,885 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2087c268
04-21-2013 09:32:27,888 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6910fe28
04-21-2013 09:32:27,896 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@7df17e77
04-21-2013 09:32:27,897 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@7df17e77
04-21-2013 09:32:27,898 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7df17e77
04-21-2013 09:32:27,904 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@1572e449
04-21-2013 09:32:27,905 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@1572e449
04-21-2013 09:32:27,907 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1572e449
04-21-2013 09:32:27,917 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@26ee7a14
04-21-2013 09:32:27,918 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@26ee7a14
04-21-2013 09:32:27,925 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@26ee7a14
04-21-2013 09:32:27,931 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@16ba8602
04-21-2013 09:32:27,933 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@16ba8602
04-21-2013 09:32:27,934 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@16ba8602
04-21-2013 09:32:27,942 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@36b8bef7
04-21-2013 09:32:27,944 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@36b8bef7
04-21-2013 09:32:27,945 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@36b8bef7
04-21-2013 09:32:27,954 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@20c1f10e
04-21-2013 09:32:27,956 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@20c1f10e
04-21-2013 09:32:27,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@20c1f10e
04-21-2013 09:32:27,965 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@210a6ae2
04-21-2013 09:32:27,966 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@210a6ae2
04-21-2013 09:32:27,967 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@210a6ae2
04-21-2013 09:32:27,978 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6fb000e7
04-21-2013 09:32:27,980 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6fb000e7
04-21-2013 09:32:28,001 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f77b3cd
04-21-2013 09:32:28,002 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f77b3cd
04-21-2013 09:32:28,016 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@50c4fe76
04-21-2013 09:32:28,019 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50c4fe76
04-21-2013 09:32:28,026 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@35549f94
04-21-2013 09:32:28,028 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35549f94
04-21-2013 09:32:28,051 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@851052d
04-21-2013 09:32:28,055 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@851052d
04-21-2013 09:32:28,081 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@19e3118a
04-21-2013 09:32:28,088 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19e3118a
04-21-2013 09:32:28,123 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2705d88a
04-21-2013 09:32:28,125 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2705d88a
04-21-2013 09:32:28,127 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2705d88a
04-21-2013 09:32:28,136 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@380e28b9
04-21-2013 09:32:28,143 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@2df6df4c
04-21-2013 09:32:28,145 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2df6df4c
04-21-2013 09:32:28,146 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2df6df4c
04-21-2013 09:32:28,150 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2393385d
04-21-2013 09:32:28,156 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5705b99f
04-21-2013 09:32:28,157 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5705b99f
04-21-2013 09:32:28,161 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2efb56b1
04-21-2013 09:32:28,163 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2efb56b1
04-21-2013 09:32:28,172 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d5253d5
04-21-2013 09:32:28,174 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d5253d5
04-21-2013 09:32:28,179 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@2a9df354
04-21-2013 09:32:28,180 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a9df354
04-21-2013 09:32:28,190 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39e87719
04-21-2013 09:32:28,191 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39e87719
04-21-2013 09:32:28,194 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5557c2bd
04-21-2013 09:32:28,198 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23d256fa
04-21-2013 09:32:28,202 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@3782da3d
04-21-2013 09:32:28,203 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3782da3d
04-21-2013 09:32:28,204 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@3782da3d
04-21-2013 09:32:28,207 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@418c56d
04-21-2013 09:32:28,208 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@418c56d
04-21-2013 09:32:28,209 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@418c56d
04-21-2013 09:32:28,212 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@21a80a69
04-21-2013 09:32:28,215 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@58ecb281
04-21-2013 09:32:28,216 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@58ecb281
04-21-2013 09:32:28,217 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@58ecb281
04-21-2013 09:32:28,221 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25fa1bb6
04-21-2013 09:32:28,222 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25fa1bb6
04-21-2013 09:32:28,223 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25fa1bb6
04-21-2013 09:32:28,227 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@676bd8ea
04-21-2013 09:32:28,248 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4e17e4ca
04-21-2013 09:32:28,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4e17e4ca
04-21-2013 09:32:28,254 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5975d6ab
04-21-2013 09:32:28,275 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@11bbf1ca
04-21-2013 09:32:28,276 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@11bbf1ca
04-21-2013 09:32:28,279 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e78fc6
04-21-2013 09:32:28,286 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@5464ea66
04-21-2013 09:32:28,299 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@2b20bf2c
04-21-2013 09:32:28,300 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b20bf2c
04-21-2013 09:32:28,303 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@199836ed
04-21-2013 09:32:28,304 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@583e0ebb
04-21-2013 09:32:28,305 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5239443f
04-21-2013 09:32:28,305 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dafae45
04-21-2013 09:32:28,306 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@68da4b71
04-21-2013 09:32:28,307 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@538f1d7e
04-21-2013 09:32:28,308 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@58d9660d
04-21-2013 09:32:28,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@28bb0d0d
04-21-2013 09:32:28,378 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 09:32:28,409 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 09:32:28,416 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 09:32:28,424 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 09:32:28,475 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 09:32:28,477 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 09:32:28,480 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:32:28,481 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:32:28,485 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 09:32:28,488 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 09:32:28,492 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 09:32:28,494 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 09:32:28,496 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 09:32:28,498 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 09:32:28,500 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 09:32:28,502 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 09:32:28,504 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 09:32:28,507 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 09:32:28,510 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 09:32:28,518 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6d62dbb6
04-21-2013 09:32:28,519 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6d62dbb6
04-21-2013 09:32:28,520 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6d62dbb6
04-21-2013 09:32:28,521 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@25595f51
04-21-2013 09:32:28,521 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2087c268
04-21-2013 09:32:28,522 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6910fe28
04-21-2013 09:32:28,523 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@7df17e77
04-21-2013 09:32:28,524 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@7df17e77
04-21-2013 09:32:28,524 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7df17e77
04-21-2013 09:32:28,525 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@1572e449
04-21-2013 09:32:28,526 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@1572e449
04-21-2013 09:32:28,527 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1572e449
04-21-2013 09:32:28,527 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@26ee7a14
04-21-2013 09:32:28,528 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@26ee7a14
04-21-2013 09:32:28,530 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@26ee7a14
04-21-2013 09:32:28,537 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@16ba8602
04-21-2013 09:32:28,539 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@16ba8602
04-21-2013 09:32:28,540 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@16ba8602
04-21-2013 09:32:28,540 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@36b8bef7
04-21-2013 09:32:28,541 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@36b8bef7
04-21-2013 09:32:28,542 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@36b8bef7
04-21-2013 09:32:28,543 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@20c1f10e
04-21-2013 09:32:28,544 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@20c1f10e
04-21-2013 09:32:28,545 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@20c1f10e
04-21-2013 09:32:28,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@210a6ae2
04-21-2013 09:32:28,547 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@210a6ae2
04-21-2013 09:32:28,548 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@210a6ae2
04-21-2013 09:32:28,548 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6fb000e7
04-21-2013 09:32:28,549 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6fb000e7
04-21-2013 09:32:28,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f77b3cd
04-21-2013 09:32:28,551 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f77b3cd
04-21-2013 09:32:28,552 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@50c4fe76
04-21-2013 09:32:28,552 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50c4fe76
04-21-2013 09:32:28,553 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@35549f94
04-21-2013 09:32:28,553 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35549f94
04-21-2013 09:32:28,554 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@851052d
04-21-2013 09:32:28,555 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@851052d
04-21-2013 09:32:28,555 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@19e3118a
04-21-2013 09:32:28,556 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19e3118a
04-21-2013 09:32:28,557 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2705d88a
04-21-2013 09:32:28,558 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2705d88a
04-21-2013 09:32:28,558 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2705d88a
04-21-2013 09:32:28,559 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@380e28b9
04-21-2013 09:32:28,560 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@2df6df4c
04-21-2013 09:32:28,561 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2df6df4c
04-21-2013 09:32:28,562 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2df6df4c
04-21-2013 09:32:28,563 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2393385d
04-21-2013 09:32:28,564 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5705b99f
04-21-2013 09:32:28,565 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5705b99f
04-21-2013 09:32:28,566 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2efb56b1
04-21-2013 09:32:28,567 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2efb56b1
04-21-2013 09:32:28,569 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d5253d5
04-21-2013 09:32:28,570 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d5253d5
04-21-2013 09:32:28,571 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@2a9df354
04-21-2013 09:32:28,572 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a9df354
04-21-2013 09:32:28,573 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39e87719
04-21-2013 09:32:28,573 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39e87719
04-21-2013 09:32:28,574 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5557c2bd
04-21-2013 09:32:28,575 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23d256fa
04-21-2013 09:32:28,575 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@3782da3d
04-21-2013 09:32:28,576 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3782da3d
04-21-2013 09:32:28,577 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@3782da3d
04-21-2013 09:32:28,577 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@418c56d
04-21-2013 09:32:28,578 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@418c56d
04-21-2013 09:32:28,578 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@418c56d
04-21-2013 09:32:28,579 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@21a80a69
04-21-2013 09:32:28,580 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@58ecb281
04-21-2013 09:32:28,580 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@58ecb281
04-21-2013 09:32:28,581 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@58ecb281
04-21-2013 09:32:28,582 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25fa1bb6
04-21-2013 09:32:28,582 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25fa1bb6
04-21-2013 09:32:28,583 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25fa1bb6
04-21-2013 09:32:28,584 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@676bd8ea
04-21-2013 09:32:28,584 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4e17e4ca
04-21-2013 09:32:28,585 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4e17e4ca
04-21-2013 09:32:28,586 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5975d6ab
04-21-2013 09:32:28,587 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@11bbf1ca
04-21-2013 09:32:28,588 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@11bbf1ca
04-21-2013 09:32:28,588 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e78fc6
04-21-2013 09:32:28,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@5464ea66
04-21-2013 09:32:28,590 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@2b20bf2c
04-21-2013 09:32:28,590 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b20bf2c
04-21-2013 09:32:28,591 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33d6f122
04-21-2013 09:32:28,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@647109c4
04-21-2013 09:32:28,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@39385660
04-21-2013 09:32:28,593 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21aed5f9
04-21-2013 09:32:28,594 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d61dfb5
04-21-2013 09:32:28,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@44a613f8
04-21-2013 09:32:28,596 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@736921fd
04-21-2013 09:32:28,596 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7b36a43c
04-21-2013 09:32:28,598 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 09:32:28,598 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 09:32:28,599 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:32:28,600 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:32:28,600 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 09:32:28,601 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 09:32:28,602 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 09:32:28,603 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 09:32:28,604 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 09:32:28,604 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 09:32:28,605 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 09:32:28,606 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 09:32:28,607 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 09:32:28,607 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 09:32:28,608 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 09:32:28,609 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: persistence-unit_demo
04-21-2013 09:32:28,868 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 09:32:28,893 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 09:32:28,897 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 09:32:28,996 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 09:32:29,035 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 09:32:29,038 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 09:32:29,041 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 09:32:29,057 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 09:32:29,058 PM DEBUG Ejb3Configuration:202 - Creating Factory: persistence-unit_demo
04-21-2013 09:32:29,077 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 09:32:29,106 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 09:32:29,107 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 09:32:29,198 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 09:32:29,228 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 09:32:29,360 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 09:32:29,361 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 09:32:29,373 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 09:32:29,470 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 09:32:29,478 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 09:32:29,509 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 09:32:29,524 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 09:32:29,660 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,671 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 09:32:29,681 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 09:32:29,686 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 09:32:29,701 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:32:29,702 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,707 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,741 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,743 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,746 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 09:32:29,751 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:32:29,752 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:32:29,755 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 09:32:29,764 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 09:32:29,766 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,768 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 09:32:29,769 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 09:32:29,770 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 09:32:29,778 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 09:32:29,780 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 09:32:29,780 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 09:32:29,782 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 09:32:29,783 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 09:32:29,797 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,798 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 09:32:29,799 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 09:32:29,800 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 09:32:29,801 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 09:32:29,802 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,811 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 09:32:29,813 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 09:32:29,814 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 09:32:29,815 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 09:32:29,816 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 09:32:29,818 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 09:32:29,819 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 09:32:29,820 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 09:32:29,821 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 09:32:29,823 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 09:32:29,841 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 09:32:29,842 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 09:32:29,843 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 09:32:29,844 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 09:32:29,848 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 09:32:29,852 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 09:32:29,857 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 09:32:29,858 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 09:32:29,859 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 09:32:29,860 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 09:32:29,860 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 09:32:29,861 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 09:32:29,896 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 09:32:29,897 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 09:32:29,934 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 09:32:29,936 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 09:32:29,937 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 09:34:45,834 PM  INFO Main2:28 - demo begins...
04-21-2013 09:34:47,843 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 09:34:48,125 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 09:34:48,138 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 09:34:48,141 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 09:34:48,151 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 09:34:48,164 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 09:34:48,170 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 09:34:48,190 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 09:34:48,193 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 09:34:48,196 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 09:34:48,206 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 09:34:48,209 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 09:34:48,211 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 09:34:48,227 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 09:34:48,230 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 09:34:48,266 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 09:34:48,279 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 09:34:48,283 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 09:34:48,286 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 09:34:48,300 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 09:34:48,305 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 09:34:48,308 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 09:34:48,324 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 09:34:48,327 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 09:34:48,330 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 09:34:48,342 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 09:34:48,345 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 09:34:48,348 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 09:34:48,371 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 09:34:48,374 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 09:34:48,389 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 09:34:48,393 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 09:34:48,404 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 09:34:48,408 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 09:34:48,420 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 09:34:48,425 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 09:34:48,447 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 09:34:48,450 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 09:34:48,464 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 09:34:48,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 09:34:48,486 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 09:34:48,490 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 09:34:48,494 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 09:34:48,506 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 09:34:48,521 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 09:34:48,526 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 09:34:48,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 09:34:48,541 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 09:34:48,555 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 09:34:48,559 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 09:34:48,570 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 09:34:48,574 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 09:34:48,587 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 09:34:48,590 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 09:34:48,602 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 09:34:48,605 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 09:34:48,620 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 09:34:48,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 09:34:48,631 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 09:34:48,641 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 09:34:48,655 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 09:34:48,659 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 09:34:48,662 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 09:34:48,673 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 09:34:48,676 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 09:34:48,680 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 09:34:48,693 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 09:34:48,703 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 09:34:48,706 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 09:34:48,710 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 09:34:48,720 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 09:34:48,723 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 09:34:48,726 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 09:34:48,734 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 09:34:48,774 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 09:34:48,777 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 09:34:48,782 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@309ff0a8
04-21-2013 09:34:48,813 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 09:34:48,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 09:34:48,823 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69b01afa
04-21-2013 09:34:48,833 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@198e261d
04-21-2013 09:34:48,854 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 09:34:48,858 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 09:34:48,865 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 09:34:48,868 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 09:34:48,871 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 09:34:48,874 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 09:34:48,877 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 09:34:48,880 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 09:34:48,882 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 09:34:48,885 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 09:34:49,024 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 09:34:49,076 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 09:34:49,090 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 09:34:49,103 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 09:34:49,195 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 09:34:49,201 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 09:34:49,210 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:34:49,213 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:34:49,224 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 09:34:49,230 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 09:34:49,243 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 09:34:49,249 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 09:34:49,255 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 09:34:49,261 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 09:34:49,269 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 09:34:49,277 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 09:34:49,283 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 09:34:49,290 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 09:34:49,296 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 09:34:49,321 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 09:34:49,324 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 09:34:49,326 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 09:34:49,329 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 09:34:49,332 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 09:34:49,334 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 09:34:49,337 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 09:34:49,340 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 09:34:49,342 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 09:34:49,345 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 09:34:49,349 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 09:34:49,354 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 09:34:49,358 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 09:34:49,361 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 09:34:49,364 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 09:34:49,367 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 09:34:49,370 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 09:34:49,372 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 09:34:49,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 09:34:49,378 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 09:34:49,381 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 09:34:49,384 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 09:34:49,387 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 09:34:49,389 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 09:34:49,393 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 09:34:49,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 09:34:49,398 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 09:34:49,401 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 09:34:49,404 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 09:34:49,408 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 09:34:49,411 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 09:34:49,415 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 09:34:49,418 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 09:34:49,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 09:34:49,425 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 09:34:49,428 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 09:34:49,431 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 09:34:49,434 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 09:34:49,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 09:34:49,439 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 09:34:49,441 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 09:34:49,444 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 09:34:49,447 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 09:34:49,450 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 09:34:49,452 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 09:34:49,455 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 09:34:49,457 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 09:34:49,460 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 09:34:49,463 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 09:34:49,466 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 09:34:49,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 09:34:49,471 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 09:34:49,473 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 09:34:49,476 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 09:34:49,479 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 09:34:49,482 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 09:34:49,485 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 09:34:49,487 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 09:34:49,490 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 09:34:49,492 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 09:34:49,495 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 09:34:49,498 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 09:34:49,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 09:34:49,503 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 09:34:49,505 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 09:34:49,508 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 09:34:49,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 09:34:49,516 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 09:34:49,518 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 09:34:49,521 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 09:34:49,523 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 09:34:49,526 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 09:34:49,529 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 09:34:49,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 09:34:49,534 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 09:34:49,536 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@309ff0a8
04-21-2013 09:34:49,539 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 09:34:49,542 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 09:34:49,544 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69b01afa
04-21-2013 09:34:49,547 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@198e261d
04-21-2013 09:34:49,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 09:34:49,553 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 09:34:49,555 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 09:34:49,558 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 09:34:49,560 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 09:34:49,563 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 09:34:49,566 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 09:34:49,569 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 09:34:49,572 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 09:34:49,575 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 09:34:49,579 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 09:34:49,582 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 09:34:49,586 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:34:49,589 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 09:34:49,591 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 09:34:49,594 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 09:34:49,597 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 09:34:49,600 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 09:34:49,603 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 09:34:49,606 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 09:34:49,608 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 09:34:49,611 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 09:34:49,614 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 09:34:49,617 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 09:34:49,620 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 09:34:49,622 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 09:34:50,130 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 09:34:50,186 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 09:34:50,193 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 09:34:50,389 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 09:34:50,469 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 09:34:50,475 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 09:34:50,483 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 09:34:50,516 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 09:34:50,519 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 09:34:50,561 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 09:34:50,618 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 09:34:50,620 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 09:34:50,798 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 09:34:50,878 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 09:34:51,105 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 09:34:51,107 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 09:34:51,132 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 09:34:51,311 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 09:34:51,327 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 09:34:51,400 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 09:34:51,439 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 09:34:51,830 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:51,855 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 09:34:51,878 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 09:34:51,889 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 09:34:51,920 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:34:51,923 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:51,942 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:52,174 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:52,184 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:52,201 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 09:34:52,220 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:34:52,228 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 09:34:52,235 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 09:34:52,269 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 09:34:52,275 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:52,282 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 09:34:52,286 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 09:34:52,290 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 09:34:52,307 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 09:34:52,312 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 09:34:52,314 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 09:34:52,320 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 09:34:52,325 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 09:34:52,392 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:52,397 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 09:34:52,401 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 09:34:52,405 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 09:34:52,409 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 09:34:52,415 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:52,437 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 09:34:52,441 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 09:34:52,445 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 09:34:52,449 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 09:34:52,453 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 09:34:52,459 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 09:34:52,462 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 09:34:52,464 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 09:34:52,467 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 09:34:52,472 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 09:34:52,512 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 09:34:52,514 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 09:34:52,517 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 09:34:52,520 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 09:34:52,531 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 09:34:52,544 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 09:34:52,563 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 09:34:52,567 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 09:34:52,569 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 09:34:52,571 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 09:34:52,573 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 09:34:52,577 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 09:34:52,682 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 09:34:52,688 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 09:34:52,765 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 09:34:52,771 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 09:34:52,776 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:12:26,279 PM  INFO Main2:28 - demo begins...
04-21-2013 10:12:27,076 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:12:27,425 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:12:27,441 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:12:27,444 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:12:27,477 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7b6643
04-21-2013 10:12:27,488 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@688c4a77
04-21-2013 10:12:27,494 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@b035079
04-21-2013 10:12:27,509 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:12:27,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:12:27,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:12:27,524 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:12:27,527 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:12:27,530 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:12:27,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:12:27,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:12:27,581 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:12:27,591 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:12:27,594 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:12:27,598 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:12:27,611 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:12:27,614 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:12:27,617 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:12:27,636 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:12:27,640 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:12:27,643 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:12:27,656 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:12:27,659 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:12:27,662 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:12:27,679 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:12:27,681 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:12:27,692 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:12:27,695 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:12:27,704 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@37722456
04-21-2013 10:12:27,706 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37722456
04-21-2013 10:12:27,715 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:12:27,718 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:12:27,737 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:12:27,740 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:12:27,753 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:12:27,756 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:12:27,773 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:12:27,778 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:12:27,781 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:12:27,797 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4929b0e1
04-21-2013 10:12:27,810 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:12:27,813 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:12:27,816 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:12:27,824 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53d439fe
04-21-2013 10:12:27,833 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:12:27,836 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:12:27,846 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:12:27,849 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:12:27,857 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:12:27,860 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:12:27,869 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:12:27,872 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:12:27,886 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:12:27,889 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:12:27,896 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45e67e6a
04-21-2013 10:12:27,905 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@42f1916f
04-21-2013 10:12:27,914 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:12:27,919 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:12:27,923 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:12:27,933 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 10:12:27,937 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 10:12:27,941 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 10:12:27,951 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1d96f4b5
04-21-2013 10:12:27,963 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 10:12:27,967 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 10:12:27,970 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 10:12:27,982 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 10:12:27,985 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 10:12:27,988 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 10:12:27,997 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@76caf6c1
04-21-2013 10:12:28,042 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 10:12:28,045 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 10:12:28,051 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3219762f
04-21-2013 10:12:28,082 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 10:12:28,085 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 10:12:28,090 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@508aeb74
04-21-2013 10:12:28,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@7f636e4e
04-21-2013 10:12:28,179 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 10:12:28,184 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 10:12:28,191 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68302e67
04-21-2013 10:12:28,194 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 10:12:28,197 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:12:28,200 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:12:28,203 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:12:28,205 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:12:28,208 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:12:28,211 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:12:28,425 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:12:28,537 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:12:28,566 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:12:28,578 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:12:28,705 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:12:28,710 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:12:28,718 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:12:28,721 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:12:28,733 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:12:28,738 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:12:28,751 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:12:28,757 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:12:28,762 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:12:28,768 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:12:28,774 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:12:28,780 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:12:28,785 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:12:28,792 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:12:28,798 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:12:28,817 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:12:28,820 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:12:28,822 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:12:28,825 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7b6643
04-21-2013 10:12:28,828 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@688c4a77
04-21-2013 10:12:28,830 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@b035079
04-21-2013 10:12:28,833 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:12:28,835 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:12:28,838 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:12:28,841 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:12:28,845 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:12:28,850 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:12:28,854 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:12:28,857 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:12:28,860 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:12:28,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:12:28,865 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:12:28,868 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:12:28,871 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:12:28,873 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:12:28,876 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:12:28,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:12:28,881 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:12:28,883 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:12:28,886 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:12:28,889 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:12:28,891 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:12:28,893 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:12:28,896 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:12:28,898 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:12:28,901 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:12:28,904 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@37722456
04-21-2013 10:12:28,906 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37722456
04-21-2013 10:12:28,909 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:12:28,912 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:12:28,916 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:12:28,921 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:12:28,925 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:12:28,929 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:12:28,932 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:12:28,936 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:12:28,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:12:28,943 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4929b0e1
04-21-2013 10:12:28,945 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:12:28,948 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:12:28,951 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:12:28,954 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53d439fe
04-21-2013 10:12:28,956 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:12:28,959 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:12:28,961 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:12:28,964 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:12:28,966 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:12:28,969 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:12:28,971 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:12:28,974 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:12:28,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:12:28,979 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:12:28,982 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45e67e6a
04-21-2013 10:12:28,984 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@42f1916f
04-21-2013 10:12:28,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:12:28,989 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:12:28,992 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:12:28,994 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 10:12:28,997 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 10:12:28,999 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 10:12:29,002 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1d96f4b5
04-21-2013 10:12:29,004 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 10:12:29,007 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 10:12:29,009 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 10:12:29,012 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 10:12:29,015 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 10:12:29,017 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 10:12:29,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@76caf6c1
04-21-2013 10:12:29,022 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 10:12:29,025 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 10:12:29,027 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3219762f
04-21-2013 10:12:29,030 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 10:12:29,032 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 10:12:29,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@508aeb74
04-21-2013 10:12:29,039 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@7f636e4e
04-21-2013 10:12:29,043 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 10:12:29,047 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 10:12:29,051 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45c3987
04-21-2013 10:12:29,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 10:12:29,061 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 10:12:29,066 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:12:29,070 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:12:29,073 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:12:29,076 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:12:29,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:12:29,082 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:12:29,085 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:12:29,088 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:12:29,091 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:12:29,094 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:12:29,096 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:12:29,099 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:12:29,102 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:12:29,104 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:12:29,107 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:12:29,110 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:12:29,112 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:12:29,115 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:12:29,118 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:12:29,121 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:12:29,123 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:12:29,549 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:12:29,598 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:12:29,605 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:12:29,767 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:12:29,843 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:12:29,848 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:12:29,856 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:12:29,922 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:12:29,924 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:12:29,989 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:12:30,065 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:12:30,068 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:12:30,314 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:12:30,397 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:12:30,665 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:12:30,667 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:12:30,692 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:12:30,943 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:12:30,960 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:12:31,027 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:12:31,059 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:12:31,424 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,449 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:12:31,474 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:12:31,484 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:12:31,569 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:12:31,573 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,584 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,665 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,673 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,682 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:12:31,695 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:12:31,698 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:12:31,702 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:12:31,733 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:12:31,739 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,745 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:12:31,747 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:12:31,750 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:12:31,764 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:12:31,767 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:12:31,769 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:12:31,772 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:12:31,775 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:12:31,819 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,823 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:12:31,826 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:12:31,828 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:12:31,831 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:12:31,834 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,848 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:12:31,852 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:12:31,856 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:12:31,859 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:12:31,861 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:12:31,866 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:12:31,868 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:12:31,871 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:12:31,873 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:12:31,878 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:12:31,983 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:12:31,985 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:12:31,986 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:12:31,989 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:12:32,014 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:12:32,021 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:12:32,031 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:12:32,034 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:12:32,036 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:12:32,038 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:12:32,040 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:12:32,042 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:12:32,175 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:12:32,178 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:12:32,233 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 10:12:32,236 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 10:12:32,239 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:22:22,188 PM  INFO Main2:28 - demo begins...
04-21-2013 10:22:22,950 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:22:23,163 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:22:23,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:22:23,179 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:22:23,187 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 10:22:23,197 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 10:22:23,203 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 10:22:23,217 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:22:23,219 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:22:23,222 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:22:23,231 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:22:23,233 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:22:23,236 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:22:23,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:22:23,252 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:22:23,274 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:22:23,286 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:22:23,291 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:22:23,295 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:22:23,308 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:22:23,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:22:23,313 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:22:23,327 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:22:23,330 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:22:23,332 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:22:23,343 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:22:23,346 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:22:23,349 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:22:23,363 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:22:23,366 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:22:23,377 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:22:23,380 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:22:23,392 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:22:23,395 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:22:23,410 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:22:23,414 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:22:23,433 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:22:23,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:22:23,450 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:22:23,455 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:22:23,472 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:22:23,475 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:22:23,478 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:22:23,492 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 10:22:23,506 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:22:23,511 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:22:23,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:22:23,522 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 10:22:23,532 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:22:23,535 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:22:23,543 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:22:23,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:22:23,555 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:22:23,558 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:22:23,567 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:22:23,570 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:22:23,586 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:22:23,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:22:23,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 10:22:23,603 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 10:22:23,613 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:22:23,615 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:22:23,618 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:22:23,627 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:22:23,629 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:22:23,632 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:22:23,640 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 10:22:23,649 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:22:23,652 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:22:23,654 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:22:23,663 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:22:23,667 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:22:23,670 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:22:23,680 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 10:22:23,719 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:22:23,722 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:22:23,728 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@309ff0a8
04-21-2013 10:22:23,759 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:22:23,761 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:22:23,767 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69b01afa
04-21-2013 10:22:23,778 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@198e261d
04-21-2013 10:22:23,800 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:22:23,803 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:22:23,809 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:22:23,812 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:22:23,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:22:23,817 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:22:23,820 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:22:23,824 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:22:23,827 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:22:23,829 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 10:22:23,969 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:22:24,013 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:22:24,028 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:22:24,040 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:22:24,130 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:22:24,136 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:22:24,146 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:22:24,149 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:22:24,160 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:22:24,165 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:22:24,180 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:22:24,186 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:22:24,193 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:22:24,199 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:22:24,204 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:22:24,210 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:22:24,215 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:22:24,221 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:22:24,228 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:22:24,245 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:22:24,248 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:22:24,250 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:22:24,254 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 10:22:24,257 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 10:22:24,259 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 10:22:24,262 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:22:24,265 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:22:24,268 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:22:24,272 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:22:24,275 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:22:24,278 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:22:24,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:22:24,286 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:22:24,291 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:22:24,296 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:22:24,301 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:22:24,305 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:22:24,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:22:24,314 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:22:24,319 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:22:24,322 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:22:24,325 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:22:24,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:22:24,331 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:22:24,333 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:22:24,336 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:22:24,339 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:22:24,341 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:22:24,344 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:22:24,346 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:22:24,349 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:22:24,352 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:22:24,355 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:22:24,357 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:22:24,360 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:22:24,362 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:22:24,364 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:22:24,367 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:22:24,370 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:22:24,372 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:22:24,375 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:22:24,377 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 10:22:24,380 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:22:24,382 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:22:24,385 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:22:24,388 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 10:22:24,392 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:22:24,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:22:24,399 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:22:24,404 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:22:24,407 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:22:24,410 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:22:24,413 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:22:24,416 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:22:24,418 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:22:24,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:22:24,424 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 10:22:24,427 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 10:22:24,430 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:22:24,432 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:22:24,435 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:22:24,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:22:24,440 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:22:24,443 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:22:24,445 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 10:22:24,448 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:22:24,451 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:22:24,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:22:24,456 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:22:24,459 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:22:24,461 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:22:24,464 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 10:22:24,466 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:22:24,469 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:22:24,471 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@309ff0a8
04-21-2013 10:22:24,474 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:22:24,476 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:22:24,479 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69b01afa
04-21-2013 10:22:24,482 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@198e261d
04-21-2013 10:22:24,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:22:24,487 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:22:24,490 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:22:24,492 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:22:24,496 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:22:24,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:22:24,504 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:22:24,509 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:22:24,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 10:22:24,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6032bd65
04-21-2013 10:22:24,521 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:22:24,524 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:22:24,526 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:22:24,529 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:22:24,532 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:22:24,534 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:22:24,537 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:22:24,540 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:22:24,543 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:22:24,546 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:22:24,549 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:22:24,551 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:22:24,554 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:22:24,557 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:22:24,560 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:22:24,564 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:22:25,032 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:22:25,093 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:22:25,102 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:22:25,307 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:22:25,397 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:22:25,404 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:22:25,413 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:22:25,450 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:22:25,452 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:22:25,505 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:22:25,584 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:22:25,587 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:22:25,819 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:22:25,911 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:22:26,175 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:22:26,177 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:22:26,202 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:22:26,379 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:22:26,399 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:22:26,451 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:22:26,477 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:22:26,796 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:26,824 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:22:26,852 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:22:26,861 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:22:26,890 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:22:26,893 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:26,907 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:26,981 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:26,988 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:26,996 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:22:27,009 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:22:27,012 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:22:27,016 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:22:27,044 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:22:27,050 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:27,054 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:22:27,057 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:22:27,061 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:22:27,079 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:22:27,082 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:22:27,084 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:22:27,087 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:22:27,090 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:22:27,138 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:27,142 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:22:27,146 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:22:27,150 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:22:27,156 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:22:27,160 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:27,178 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:22:27,182 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:22:27,186 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:22:27,188 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:22:27,190 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:22:27,196 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:22:27,198 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:22:27,200 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:22:27,203 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:22:27,208 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:22:27,236 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:22:27,237 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:22:27,239 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:22:27,241 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:22:27,249 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:22:27,254 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:22:27,265 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:22:27,268 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:22:27,271 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:22:27,273 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:22:27,275 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:22:27,278 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:22:27,370 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:22:27,375 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:22:27,434 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 10:22:27,438 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 10:22:27,441 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:22:28,252 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 10:22:28,842 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 10:22:29,045 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uch8l8q1mo47ke|7746df77] registered.
04-21-2013 10:22:29,219 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uch8l8q1mo47ke|7746df77] unregistered, in order to be reregistered after update.
04-21-2013 10:22:29,222 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uch8l8q1mo47ke|7746df77] registered.
04-21-2013 10:22:29,686 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@fec55dbf [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@c9eb43eb [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8uch8l8q1mo47ke|368d41f2, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@28aaec64 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8uch8l8q1mo47ke|f292738, jdbcUrl -> jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8uch8l8q1mo47ke|7746df77, numHelperThreads -> 3 ]
04-21-2013 10:22:29,851 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 10:22:29,854 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 10:22:29,856 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 10:22:29,858 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 10:22:29,860 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 10:22:29,864 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@1769c398 config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 10:22:29,868 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:29,868 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:29,868 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:29,870 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 10:22:29,881 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 10:22:29,883 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@1769c398 [managed: 0, unused: 0, excluded: 0]
04-21-2013 10:22:30,886 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:30,887 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:30,886 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:31,889 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:31,891 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:31,893 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:32,892 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:32,894 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:32,897 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:33,895 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:33,897 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:33,900 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:34,898 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:34,914 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:34,914 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:35,910 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:35,915 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:35,918 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:36,913 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:36,918 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:36,921 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:37,916 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:37,921 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:37,923 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:38,918 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:38,923 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:38,925 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:39,921 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:39,926 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:39,928 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:40,924 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:40,929 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:40,931 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:41,926 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:41,931 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:22:41,933 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:29:50,897 PM  INFO Main2:28 - demo begins...
04-21-2013 10:29:51,766 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:29:51,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:29:51,999 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:29:52,002 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:29:52,011 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 10:29:52,022 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 10:29:52,028 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 10:29:52,041 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:29:52,044 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:29:52,047 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:29:52,055 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:29:52,058 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:29:52,061 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:29:52,074 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:29:52,077 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:29:52,098 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:29:52,111 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:29:52,114 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:29:52,117 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:29:52,129 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:29:52,132 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:29:52,135 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:29:52,148 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:29:52,151 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:29:52,154 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:29:52,165 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:29:52,168 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:29:52,170 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:29:52,184 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:29:52,187 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:29:52,197 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:29:52,200 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:29:52,209 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:29:52,211 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:29:52,220 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:29:52,223 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:29:52,241 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:29:52,244 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:29:52,256 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:29:52,259 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:29:52,277 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:29:52,280 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:29:52,283 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:29:52,295 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 10:29:52,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:29:52,313 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:29:52,316 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:29:52,323 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 10:29:52,332 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:29:52,335 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:29:52,344 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:29:52,347 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:29:52,356 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:29:52,359 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:29:52,367 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:29:52,370 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:29:52,383 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:29:52,386 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:29:52,392 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 10:29:52,400 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 10:29:52,409 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:29:52,412 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:29:52,414 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:29:52,423 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:29:52,425 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:29:52,428 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:29:52,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 10:29:52,445 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:29:52,447 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:29:52,450 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:29:52,459 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:29:52,462 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:29:52,466 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:29:52,474 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 10:29:52,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:29:52,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:29:52,520 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 10:29:52,549 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:29:52,552 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:29:52,557 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 10:29:52,566 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 10:29:52,587 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:29:52,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:29:52,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 10:29:52,598 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:29:52,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:29:52,603 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:29:52,606 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:29:52,609 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:29:52,612 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:29:52,614 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:29:52,751 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:29:52,795 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:29:52,809 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:29:52,821 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:29:52,909 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:29:52,915 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:29:52,923 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:29:52,926 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:29:52,936 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:29:52,942 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:29:52,955 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:29:52,961 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:29:52,966 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:29:52,971 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:29:52,978 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:29:52,983 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:29:52,988 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:29:52,994 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:29:53,001 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:29:53,021 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:29:53,024 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:29:53,026 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:29:53,029 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 10:29:53,031 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 10:29:53,034 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 10:29:53,036 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:29:53,039 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:29:53,041 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:29:53,044 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:29:53,047 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:29:53,049 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:29:53,052 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:29:53,055 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:29:53,057 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:29:53,060 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:29:53,062 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:29:53,065 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:29:53,067 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:29:53,070 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:29:53,073 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:29:53,076 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:29:53,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:29:53,081 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:29:53,084 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:29:53,086 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:29:53,089 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:29:53,091 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:29:53,094 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:29:53,096 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:29:53,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:29:53,101 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:29:53,104 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:29:53,106 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:29:53,109 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:29:53,111 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:29:53,114 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:29:53,118 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:29:53,122 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:29:53,127 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:29:53,131 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:29:53,134 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:29:53,137 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 10:29:53,140 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:29:53,142 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:29:53,145 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:29:53,147 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 10:29:53,150 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:29:53,153 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:29:53,155 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:29:53,158 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:29:53,160 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:29:53,163 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:29:53,165 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:29:53,168 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:29:53,171 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:29:53,174 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:29:53,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 10:29:53,179 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 10:29:53,181 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:29:53,184 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:29:53,186 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:29:53,189 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:29:53,191 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:29:53,194 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:29:53,196 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 10:29:53,199 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:29:53,201 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:29:53,204 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:29:53,206 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:29:53,209 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:29:53,211 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:29:53,214 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 10:29:53,216 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:29:53,219 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:29:53,221 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 10:29:53,224 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:29:53,226 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:29:53,229 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 10:29:53,232 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 10:29:53,234 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:29:53,237 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:29:53,240 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 10:29:53,243 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 10:29:53,246 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:29:53,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:29:53,252 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:29:53,255 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:29:53,258 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:29:53,261 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:29:53,265 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:29:53,268 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:29:53,272 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:29:53,275 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:29:53,277 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:29:53,280 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:29:53,283 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:29:53,286 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:29:53,289 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:29:53,291 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:29:53,294 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:29:53,297 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:29:53,299 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:29:53,302 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:29:53,305 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:29:53,308 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:29:53,749 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:29:53,796 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:29:53,803 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:29:53,964 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:29:54,038 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:29:54,044 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:29:54,051 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:29:54,084 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:29:54,086 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:29:54,128 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:29:54,186 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:29:54,189 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:29:54,374 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:29:54,453 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:29:54,690 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:29:54,692 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:29:54,716 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:29:54,898 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:29:54,914 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:29:54,968 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:29:54,994 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:29:55,327 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,352 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:29:55,372 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:29:55,382 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:29:55,409 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:29:55,413 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,425 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,507 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,517 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,528 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:29:55,542 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:29:55,547 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:29:55,551 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:29:55,577 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:29:55,581 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,585 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:29:55,587 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:29:55,590 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:29:55,607 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:29:55,610 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:29:55,613 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:29:55,618 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:29:55,621 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:29:55,665 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,669 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:29:55,672 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:29:55,674 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:29:55,678 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:29:55,681 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,694 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:29:55,697 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:29:55,701 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:29:55,704 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:29:55,706 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:29:55,712 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:29:55,714 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:29:55,717 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:29:55,719 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:29:55,725 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:29:55,759 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:29:55,761 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:29:55,762 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:29:55,764 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:29:55,770 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:29:55,777 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:29:55,787 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:29:55,790 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:29:55,792 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:29:55,794 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:29:55,795 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:29:55,798 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:29:55,872 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:29:55,876 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:29:55,931 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01
04-21-2013 10:29:55,934 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 10:29:55,937 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:29:56,655 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 10:29:57,221 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 10:29:57,429 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchi78n1g7ep8i|1a21b97e] registered.
04-21-2013 10:29:57,608 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchi78n1g7ep8i|1a21b97e] unregistered, in order to be reregistered after update.
04-21-2013 10:29:57,611 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchi78n1g7ep8i|1a21b97e] registered.
04-21-2013 10:29:58,002 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@f2b298c5 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@8456039b [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8uchi78n1g7ep8i|4b33f6dd, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@3d5bfd2d [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8uchi78n1g7ep8i|22489c42, jdbcUrl -> jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8uchi78n1g7ep8i|1a21b97e, numHelperThreads -> 3 ]
04-21-2013 10:29:58,113 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 10:29:58,116 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 10:29:58,119 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 10:29:58,121 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 10:29:58,123 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 10:29:58,127 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@c0fe89a config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 10:29:58,131 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:29:58,131 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:29:58,131 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:29:58,134 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 10:29:58,148 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 10:29:58,150 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@c0fe89a [managed: 0, unused: 0, excluded: 0]
04-21-2013 10:29:59,154 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:29:59,154 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:29:59,154 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:00,157 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:00,160 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:00,161 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:01,160 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:01,165 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:01,166 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:02,162 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:02,167 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:30:02,168 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:16,729 PM  INFO Main2:28 - demo begins...
04-21-2013 10:35:18,106 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:35:18,329 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:35:18,342 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:35:18,345 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:35:18,355 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 10:35:18,365 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 10:35:18,371 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 10:35:18,384 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:35:18,387 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:35:18,389 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:35:18,398 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:35:18,402 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:35:18,407 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:35:18,421 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:35:18,424 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:35:18,445 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:35:18,454 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:35:18,457 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:35:18,459 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:35:18,471 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:35:18,473 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:35:18,476 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:35:18,489 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:35:18,493 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:35:18,495 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:35:18,507 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:35:18,510 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:35:18,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:35:18,527 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:35:18,530 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:35:18,539 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:35:18,542 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:35:18,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:35:18,552 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:35:18,560 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:35:18,563 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:35:18,577 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:35:18,580 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:35:18,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:35:18,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:35:18,611 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:35:18,613 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:35:18,616 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:35:18,628 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 10:35:18,639 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:35:18,644 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:35:18,647 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:35:18,654 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 10:35:18,662 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:35:18,665 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:35:18,674 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:35:18,676 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:35:18,684 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:35:18,687 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:35:18,696 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:35:18,699 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:35:18,713 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:35:18,718 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:35:18,724 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 10:35:18,732 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 10:35:18,741 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:35:18,744 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:35:18,746 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:35:18,755 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:35:18,757 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:35:18,760 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:35:18,771 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 10:35:18,781 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:35:18,784 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:35:18,787 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:35:18,795 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:35:18,798 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:35:18,801 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:35:18,809 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 10:35:18,846 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:35:18,848 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:35:18,854 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 10:35:18,887 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:35:18,890 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:35:18,896 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 10:35:18,905 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 10:35:18,926 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:35:18,928 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:35:18,934 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 10:35:18,937 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:35:18,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:35:18,942 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:35:18,945 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:35:18,949 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:35:18,952 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:35:18,955 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:35:19,090 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:35:19,136 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:35:19,151 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:35:19,163 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:35:19,252 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:35:19,258 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:35:19,267 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:35:19,272 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:35:19,283 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:35:19,289 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:35:19,302 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:35:19,309 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:35:19,315 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:35:19,321 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:35:19,327 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:35:19,332 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:35:19,338 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:35:19,345 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:35:19,351 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:35:19,369 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:35:19,372 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:35:19,374 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:35:19,377 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 10:35:19,380 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 10:35:19,382 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 10:35:19,385 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:35:19,388 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:35:19,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:35:19,393 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:35:19,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:35:19,398 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:35:19,401 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:35:19,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:35:19,408 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:35:19,412 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:35:19,416 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:35:19,420 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:35:19,423 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:35:19,427 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:35:19,430 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:35:19,432 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:35:19,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:35:19,439 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:35:19,442 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:35:19,444 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:35:19,447 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:35:19,449 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:35:19,452 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:35:19,455 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:35:19,457 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 10:35:19,460 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:35:19,462 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 10:35:19,465 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:35:19,467 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 10:35:19,470 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:35:19,473 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 10:35:19,476 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:35:19,478 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 10:35:19,481 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:35:19,483 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:35:19,486 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 10:35:19,489 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 10:35:19,491 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:35:19,494 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:35:19,496 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 10:35:19,499 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 10:35:19,502 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:35:19,505 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 10:35:19,508 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:35:19,511 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 10:35:19,514 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:35:19,518 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 10:35:19,523 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:35:19,527 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 10:35:19,530 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:35:19,532 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 10:35:19,535 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 10:35:19,538 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 10:35:19,540 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:35:19,543 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:35:19,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 10:35:19,548 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:35:19,551 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:35:19,554 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 10:35:19,556 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 10:35:19,559 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:35:19,562 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:35:19,564 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 10:35:19,567 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:35:19,569 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:35:19,572 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 10:35:19,574 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 10:35:19,577 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:35:19,579 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 10:35:19,582 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 10:35:19,584 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:35:19,587 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 10:35:19,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 10:35:19,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 10:35:19,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:35:19,597 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 10:35:19,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 10:35:19,603 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 10:35:19,605 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:35:19,608 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:35:19,612 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:35:19,617 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:35:19,621 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:35:19,626 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:35:19,630 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:35:19,633 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:35:19,636 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:35:19,639 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:35:19,642 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:35:19,645 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:35:19,647 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:35:19,650 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:35:19,653 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:35:19,656 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:35:19,659 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:35:19,662 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:35:19,665 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:35:19,668 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:35:19,671 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:35:19,674 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:35:20,137 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:35:20,187 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:35:20,196 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:35:20,377 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:35:20,456 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:35:20,462 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:35:20,469 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:35:20,505 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:35:20,507 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:35:20,549 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:35:20,610 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:35:20,613 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:35:20,805 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:35:20,887 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:35:21,123 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:35:21,125 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:35:21,149 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:35:21,344 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:35:21,361 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:35:21,410 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:35:21,436 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:35:21,766 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:21,791 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:35:21,811 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:35:21,820 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:35:21,849 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:35:21,852 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:21,863 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:21,938 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:21,947 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:21,957 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:35:21,967 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:35:21,970 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:35:21,975 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:35:21,998 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:35:22,002 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:22,006 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:35:22,009 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:35:22,011 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:35:22,025 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:35:22,028 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:35:22,030 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:35:22,033 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:35:22,036 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:35:22,082 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:22,086 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:35:22,088 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:35:22,090 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:35:22,094 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:35:22,097 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:22,110 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:35:22,113 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:35:22,117 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:35:22,119 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:35:22,121 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:35:22,127 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:35:22,129 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:35:22,131 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:35:22,133 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:35:22,138 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:35:22,172 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:35:22,174 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:35:22,176 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:35:22,178 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:35:22,184 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:35:22,190 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:35:22,200 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:35:22,203 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:35:22,206 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:35:22,207 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:35:22,209 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:35:22,211 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:35:22,286 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:35:22,340 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 10:35:22,343 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 10:35:22,345 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:35:23,067 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 10:35:23,602 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 10:35:23,800 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchp73fppm4os|67c354e6] registered.
04-21-2013 10:35:23,993 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchp73fppm4os|67c354e6] unregistered, in order to be reregistered after update.
04-21-2013 10:35:23,996 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchp73fppm4os|67c354e6] registered.
04-21-2013 10:35:24,437 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@80b10baa [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@6175c671 [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8uchp73fppm4os|67673a2, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@14877dc6 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8uchp73fppm4os|6d7ffbf, jdbcUrl -> jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8uchp73fppm4os|67c354e6, numHelperThreads -> 3 ]
04-21-2013 10:35:24,543 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 10:35:24,546 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 10:35:24,548 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 10:35:24,551 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 10:35:24,553 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 10:35:24,557 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@17eda64e config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 10:35:24,561 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:24,561 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:24,561 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:24,564 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 10:35:24,579 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 10:35:24,582 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@17eda64e [managed: 0, unused: 0, excluded: 0]
04-21-2013 10:35:25,584 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:25,585 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:25,584 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:26,588 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:26,590 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:26,591 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:27,592 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:27,594 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:27,597 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:28,594 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:28,596 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:35:28,616 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:05,404 PM  INFO Main2:28 - demo begins...
04-21-2013 10:38:06,160 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:38:06,383 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:38:06,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:38:06,400 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:38:06,408 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 10:38:06,420 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 10:38:06,426 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 10:38:06,439 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:38:06,442 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:38:06,445 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:38:06,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:38:06,456 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:38:06,459 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:38:06,472 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:38:06,475 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:38:06,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:38:06,509 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:38:06,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:38:06,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:38:06,527 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:38:06,529 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:38:06,532 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:38:06,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:38:06,549 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:38:06,551 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:38:06,563 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:38:06,566 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:38:06,569 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:38:06,584 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:38:06,587 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:38:06,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 10:38:06,603 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 10:38:06,613 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@38aa233f
04-21-2013 10:38:06,617 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@38aa233f
04-21-2013 10:38:06,625 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7ed75415
04-21-2013 10:38:06,628 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ed75415
04-21-2013 10:38:06,644 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 10:38:06,647 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 10:38:06,660 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 10:38:06,664 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 10:38:06,684 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 10:38:06,687 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 10:38:06,691 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 10:38:06,705 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc4f0f8
04-21-2013 10:38:06,719 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 10:38:06,723 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 10:38:06,728 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 10:38:06,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@66922804
04-21-2013 10:38:06,749 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 10:38:06,752 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 10:38:06,761 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 10:38:06,764 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 10:38:06,773 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 10:38:06,778 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 10:38:06,787 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 10:38:06,790 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 10:38:06,806 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 10:38:06,809 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 10:38:06,814 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4abf053f
04-21-2013 10:38:06,823 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@66a23610
04-21-2013 10:38:06,833 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 10:38:06,836 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 10:38:06,838 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 10:38:06,847 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 10:38:06,850 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 10:38:06,853 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 10:38:06,864 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1c7e2da
04-21-2013 10:38:06,874 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 10:38:06,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 10:38:06,882 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 10:38:06,892 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 10:38:06,895 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 10:38:06,899 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 10:38:06,908 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@67ce85c4
04-21-2013 10:38:06,947 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 10:38:06,951 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 10:38:06,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35ecfe07
04-21-2013 10:38:06,988 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 10:38:06,991 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 10:38:06,998 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fc8efd1
04-21-2013 10:38:07,008 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@730efd7c
04-21-2013 10:38:07,029 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 10:38:07,032 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 10:38:07,038 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:38:07,040 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:38:07,043 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:38:07,046 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:38:07,049 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:38:07,052 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 10:38:07,054 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-21-2013 10:38:07,057 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53f78b68
04-21-2013 10:38:07,193 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:38:07,238 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:38:07,252 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:38:07,265 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:38:07,358 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:38:07,364 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:38:07,374 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:38:07,377 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:38:07,388 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:38:07,394 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:38:07,407 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:38:07,412 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:38:07,418 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:38:07,423 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:38:07,429 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:38:07,434 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:38:07,440 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:38:07,446 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:38:07,452 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:38:07,471 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:38:07,474 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:38:07,477 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 10:38:07,480 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 10:38:07,483 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 10:38:07,486 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 10:38:07,488 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:38:07,491 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:38:07,493 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 10:38:07,496 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:38:07,499 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:38:07,502 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 10:38:07,506 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:38:07,510 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:38:07,513 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 10:38:07,516 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:38:07,521 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:38:07,526 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 10:38:07,530 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:38:07,534 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:38:07,538 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 10:38:07,543 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:38:07,547 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:38:07,551 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 10:38:07,555 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:38:07,558 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:38:07,560 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 10:38:07,563 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:38:07,565 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 10:38:07,568 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 10:38:07,570 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 10:38:07,573 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@38aa233f
04-21-2013 10:38:07,576 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@38aa233f
04-21-2013 10:38:07,578 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7ed75415
04-21-2013 10:38:07,581 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ed75415
04-21-2013 10:38:07,584 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 10:38:07,586 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 10:38:07,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 10:38:07,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 10:38:07,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 10:38:07,597 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 10:38:07,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 10:38:07,602 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc4f0f8
04-21-2013 10:38:07,605 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 10:38:07,608 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 10:38:07,610 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 10:38:07,613 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@66922804
04-21-2013 10:38:07,615 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 10:38:07,618 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 10:38:07,620 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 10:38:07,623 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 10:38:07,626 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 10:38:07,628 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 10:38:07,631 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 10:38:07,633 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 10:38:07,636 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 10:38:07,639 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 10:38:07,641 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4abf053f
04-21-2013 10:38:07,644 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@66a23610
04-21-2013 10:38:07,647 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 10:38:07,650 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 10:38:07,655 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 10:38:07,658 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 10:38:07,661 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 10:38:07,664 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 10:38:07,668 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1c7e2da
04-21-2013 10:38:07,672 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 10:38:07,675 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 10:38:07,677 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 10:38:07,680 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 10:38:07,683 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 10:38:07,686 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 10:38:07,689 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@67ce85c4
04-21-2013 10:38:07,691 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 10:38:07,694 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 10:38:07,697 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35ecfe07
04-21-2013 10:38:07,700 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 10:38:07,703 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 10:38:07,705 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fc8efd1
04-21-2013 10:38:07,708 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@730efd7c
04-21-2013 10:38:07,712 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 10:38:07,715 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 10:38:07,719 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:38:07,722 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:38:07,726 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:38:07,729 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:38:07,732 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:38:07,736 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 10:38:07,739 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6032bd65
04-21-2013 10:38:07,741 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2330633a
04-21-2013 10:38:07,746 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:38:07,749 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:38:07,751 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:38:07,754 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:38:07,757 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:38:07,761 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:38:07,765 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:38:07,769 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:38:07,772 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:38:07,775 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:38:07,778 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:38:07,781 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:38:07,784 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:38:07,788 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:38:07,792 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:38:07,795 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:38:08,371 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:38:08,433 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:38:08,443 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:38:08,655 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:38:08,752 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:38:08,760 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:38:08,768 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:38:08,807 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:38:08,809 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:38:08,857 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:38:08,923 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:38:08,926 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:38:09,134 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:38:09,213 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:38:09,455 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:38:09,458 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:38:09,483 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:38:09,677 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:38:09,694 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:38:09,745 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:38:09,771 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:38:10,100 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,125 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:38:10,148 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:38:10,158 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:38:10,186 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:38:10,189 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,200 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,278 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,288 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,298 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:38:10,313 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:38:10,316 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:38:10,322 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:38:10,344 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:38:10,348 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,352 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:38:10,355 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:38:10,358 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:38:10,371 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:38:10,374 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:38:10,377 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:38:10,379 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:38:10,383 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:38:10,428 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,432 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:38:10,435 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:38:10,437 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:38:10,440 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:38:10,444 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,457 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:38:10,460 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:38:10,464 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:38:10,466 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:38:10,469 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:38:10,474 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:38:10,477 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:38:10,479 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:38:10,481 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:38:10,485 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:38:10,517 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:38:10,519 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:38:10,522 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:38:10,525 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:38:10,531 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:38:10,537 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:38:10,548 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:38:10,552 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:38:10,554 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:38:10,556 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:38:10,557 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:38:10,560 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:38:10,643 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:38:10,705 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 10:38:10,709 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 10:38:10,712 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:38:11,420 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 10:38:11,935 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 10:38:12,144 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchsszk1vxtlnl|193f5841] registered.
04-21-2013 10:38:12,324 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchsszk1vxtlnl|193f5841] unregistered, in order to be reregistered after update.
04-21-2013 10:38:12,328 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8uchsszk1vxtlnl|193f5841] registered.
04-21-2013 10:38:12,677 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@7914635d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@7426324c [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8uchsszk1vxtlnl|6487cd5c, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@ab5bf26c [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8uchsszk1vxtlnl|1867ec28, jdbcUrl -> jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8uchsszk1vxtlnl|193f5841, numHelperThreads -> 3 ]
04-21-2013 10:38:12,766 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 10:38:12,768 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 10:38:12,771 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 10:38:12,773 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 10:38:12,775 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 10:38:12,779 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@30b5ac2c config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 10:38:12,782 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:12,782 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:12,782 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:12,784 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 10:38:12,796 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 10:38:12,798 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@30b5ac2c [managed: 0, unused: 0, excluded: 0]
04-21-2013 10:38:13,801 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:13,801 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:13,801 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:14,803 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:14,805 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:14,806 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:15,807 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:15,809 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:38:15,810 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:40:46,829 PM  INFO Main2:28 - demo begins...
04-21-2013 10:40:47,516 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:40:47,740 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 10:40:47,752 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 10:40:47,757 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 10:40:47,765 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26d66426
04-21-2013 10:40:47,776 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b035079
04-21-2013 10:40:47,782 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7eb1cc87
04-21-2013 10:40:47,796 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 10:40:47,798 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 10:40:47,802 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 10:40:47,814 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 10:40:47,817 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 10:40:47,821 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 10:40:47,839 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 10:40:47,843 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 10:40:47,871 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 10:40:47,880 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 10:40:47,883 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 10:40:47,886 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 10:40:47,898 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 10:40:47,900 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 10:40:47,903 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 10:40:47,917 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 10:40:47,920 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 10:40:47,923 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d860038
04-21-2013 10:40:47,934 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 10:40:47,937 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 10:40:47,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 10:40:47,954 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 10:40:47,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 10:40:47,969 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 10:40:47,974 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 10:40:47,983 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@1389c036
04-21-2013 10:40:47,986 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1389c036
04-21-2013 10:40:47,996 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1118fa47
04-21-2013 10:40:47,998 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1118fa47
04-21-2013 10:40:48,014 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@193936e1
04-21-2013 10:40:48,017 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@193936e1
04-21-2013 10:40:48,029 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 10:40:48,032 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 10:40:48,045 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 10:40:48,048 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 10:40:48,051 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 10:40:48,064 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f4d5bc9
04-21-2013 10:40:48,079 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 10:40:48,084 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 10:40:48,089 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 10:40:48,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19c5466b
04-21-2013 10:40:48,110 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 10:40:48,113 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 10:40:48,122 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 10:40:48,125 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 10:40:48,134 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 10:40:48,137 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 10:40:48,146 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 10:40:48,149 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 10:40:48,163 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 10:40:48,166 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 10:40:48,172 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6fe78c96
04-21-2013 10:40:48,180 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@556917ee
04-21-2013 10:40:48,191 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:40:48,194 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:40:48,197 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:40:48,208 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:40:48,212 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:40:48,215 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:40:48,223 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 10:40:48,232 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:40:48,235 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:40:48,238 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:40:48,247 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:40:48,250 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:40:48,253 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:40:48,262 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 10:40:48,306 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:40:48,308 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:40:48,314 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 10:40:48,344 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:40:48,347 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:40:48,352 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 10:40:48,361 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 10:40:48,386 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:40:48,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:40:48,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:40:48,399 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:40:48,402 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:40:48,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:40:48,407 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:40:48,410 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:40:48,413 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 10:40:48,415 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-21-2013 10:40:48,555 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:40:48,601 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:40:48,615 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:40:48,627 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:40:48,726 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:40:48,732 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:40:48,740 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:40:48,743 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:40:48,754 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:40:48,760 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:40:48,773 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:40:48,778 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:40:48,784 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:40:48,789 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:40:48,795 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:40:48,800 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:40:48,805 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:40:48,812 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:40:48,818 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:40:48,836 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 10:40:48,839 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 10:40:48,842 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 10:40:48,844 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26d66426
04-21-2013 10:40:48,847 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b035079
04-21-2013 10:40:48,849 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7eb1cc87
04-21-2013 10:40:48,852 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 10:40:48,854 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 10:40:48,857 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 10:40:48,859 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 10:40:48,862 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 10:40:48,864 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 10:40:48,867 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 10:40:48,870 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 10:40:48,872 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 10:40:48,875 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 10:40:48,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 10:40:48,880 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 10:40:48,883 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 10:40:48,885 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 10:40:48,888 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 10:40:48,890 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 10:40:48,893 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 10:40:48,896 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d860038
04-21-2013 10:40:48,898 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 10:40:48,901 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 10:40:48,903 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 10:40:48,906 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 10:40:48,909 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 10:40:48,911 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 10:40:48,914 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 10:40:48,916 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@1389c036
04-21-2013 10:40:48,919 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1389c036
04-21-2013 10:40:48,922 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1118fa47
04-21-2013 10:40:48,924 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1118fa47
04-21-2013 10:40:48,927 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@193936e1
04-21-2013 10:40:48,930 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@193936e1
04-21-2013 10:40:48,933 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 10:40:48,941 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 10:40:48,946 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 10:40:48,950 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 10:40:48,953 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 10:40:48,956 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f4d5bc9
04-21-2013 10:40:48,959 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 10:40:48,961 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 10:40:48,964 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 10:40:48,967 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19c5466b
04-21-2013 10:40:48,970 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 10:40:48,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 10:40:48,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 10:40:48,978 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 10:40:48,981 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 10:40:48,983 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 10:40:48,986 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 10:40:48,988 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 10:40:48,991 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 10:40:48,994 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 10:40:48,997 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6fe78c96
04-21-2013 10:40:49,000 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@556917ee
04-21-2013 10:40:49,002 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:40:49,005 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:40:49,007 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:40:49,010 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:40:49,012 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:40:49,015 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:40:49,017 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 10:40:49,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:40:49,022 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:40:49,025 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:40:49,027 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:40:49,030 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:40:49,032 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:40:49,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 10:40:49,038 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:40:49,041 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:40:49,044 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 10:40:49,047 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:40:49,049 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:40:49,052 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 10:40:49,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 10:40:49,059 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:40:49,062 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:40:49,064 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:40:49,067 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:40:49,070 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:40:49,074 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:40:49,076 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:40:49,079 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:40:49,082 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 10:40:49,084 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6032bd65
04-21-2013 10:40:49,089 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:40:49,091 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:40:49,094 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:40:49,097 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:40:49,100 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:40:49,102 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:40:49,105 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:40:49,108 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:40:49,111 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:40:49,113 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:40:49,116 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:40:49,119 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:40:49,121 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:40:49,124 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:40:49,127 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:40:49,130 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:40:49,664 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:40:49,732 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:40:49,740 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:40:49,944 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:40:50,049 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:40:50,058 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:40:50,071 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:40:50,116 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:40:50,120 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:40:50,174 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:40:50,256 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:40:50,261 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:40:50,467 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:40:50,549 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:40:50,797 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:40:50,799 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:40:50,825 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:40:51,015 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:40:51,035 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:40:51,088 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:40:51,114 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:40:51,452 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,477 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:40:51,501 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:40:51,512 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:40:51,545 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:40:51,548 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,561 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,647 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,654 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,667 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:40:51,678 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:40:51,682 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:40:51,688 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:40:51,714 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:40:51,718 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,723 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:40:51,725 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:40:51,728 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:40:51,748 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:40:51,752 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:40:51,754 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:40:51,757 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:40:51,761 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:40:51,809 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,814 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:40:51,816 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:40:51,818 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:40:51,821 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:40:51,824 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,838 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:40:51,841 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:40:51,845 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:40:51,847 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:40:51,850 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:40:51,855 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:40:51,857 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:40:51,860 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:40:51,862 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:40:51,867 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:40:51,898 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:40:51,900 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:40:51,901 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:40:51,904 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:40:51,910 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:40:51,919 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:40:51,931 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:40:51,934 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:40:51,936 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:40:51,937 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:40:51,939 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:40:51,941 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:40:52,006 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:40:52,009 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:42:42,777 PM  INFO Main2:28 - demo begins...
04-21-2013 10:42:43,493 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:42:43,712 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:42:43,726 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:42:43,729 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:42:43,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 10:42:43,749 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 10:42:43,755 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 10:42:43,770 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:42:43,772 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:42:43,775 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:42:43,784 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:42:43,787 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:42:43,789 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:42:43,804 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:42:43,807 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:42:43,831 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:42:43,840 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:42:43,843 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:42:43,845 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:42:43,858 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:42:43,860 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:42:43,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:42:43,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:42:43,881 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:42:43,884 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:42:43,896 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:42:43,898 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:42:43,901 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:42:43,917 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:42:43,920 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:42:43,931 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:42:43,935 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:42:43,943 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:42:43,946 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:42:43,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:42:43,960 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:42:43,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:42:43,979 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:42:43,993 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:42:44,000 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:42:44,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:42:44,023 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:42:44,026 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:42:44,038 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 10:42:44,052 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:42:44,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:42:44,059 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:42:44,066 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 10:42:44,075 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:42:44,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:42:44,087 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:42:44,090 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:42:44,102 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:42:44,105 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:42:44,116 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:42:44,118 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:42:44,134 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:42:44,137 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:42:44,144 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 10:42:44,156 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 10:42:44,167 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:42:44,170 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:42:44,173 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:42:44,184 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:42:44,187 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:42:44,189 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:42:44,197 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 10:42:44,209 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:42:44,214 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:42:44,217 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:42:44,228 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:42:44,232 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:42:44,234 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:42:44,242 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 10:42:44,282 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:42:44,285 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:42:44,293 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@309ff0a8
04-21-2013 10:42:44,324 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:42:44,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:42:44,336 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69b01afa
04-21-2013 10:42:44,348 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@198e261d
04-21-2013 10:42:44,369 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:42:44,372 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:42:44,378 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:42:44,381 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:42:44,386 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:42:44,390 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:42:44,393 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:42:44,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:42:44,399 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:42:44,402 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 10:42:44,545 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:42:44,594 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:42:44,608 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:42:44,623 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:42:44,718 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:42:44,724 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:42:44,733 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:42:44,736 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:42:44,747 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:42:44,753 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:42:44,765 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:42:44,771 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:42:44,777 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:42:44,783 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:42:44,789 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:42:44,795 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:42:44,801 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:42:44,808 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:42:44,815 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:42:44,835 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:42:44,838 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:42:44,841 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 10:42:44,844 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 10:42:44,846 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 10:42:44,850 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 10:42:44,855 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:42:44,858 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:42:44,860 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 10:42:44,864 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:42:44,868 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:42:44,872 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 10:42:44,876 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:42:44,879 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:42:44,881 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 10:42:44,884 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:42:44,887 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:42:44,889 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 10:42:44,892 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:42:44,895 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:42:44,899 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 10:42:44,903 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:42:44,906 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:42:44,909 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 10:42:44,911 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:42:44,914 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:42:44,916 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 10:42:44,919 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:42:44,922 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 10:42:44,925 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:42:44,928 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 10:42:44,931 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:42:44,934 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 10:42:44,937 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:42:44,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 10:42:44,943 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:42:44,947 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 10:42:44,950 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:42:44,954 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 10:42:44,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:42:44,960 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:42:44,962 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 10:42:44,965 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 10:42:44,968 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:42:44,971 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:42:44,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 10:42:44,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 10:42:44,978 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:42:44,981 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:42:44,983 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:42:44,986 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:42:44,989 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:42:44,991 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:42:44,994 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:42:44,998 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:42:45,000 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:42:45,003 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:42:45,006 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 10:42:45,008 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 10:42:45,011 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:42:45,013 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:42:45,016 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 10:42:45,018 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:42:45,021 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:42:45,023 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 10:42:45,026 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 10:42:45,028 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:42:45,031 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:42:45,033 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 10:42:45,036 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:42:45,039 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:42:45,041 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 10:42:45,044 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 10:42:45,048 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:42:45,052 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@700a4488
04-21-2013 10:42:45,055 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@309ff0a8
04-21-2013 10:42:45,057 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:42:45,060 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a6397eb
04-21-2013 10:42:45,063 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69b01afa
04-21-2013 10:42:45,066 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@198e261d
04-21-2013 10:42:45,070 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:42:45,073 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a738d08
04-21-2013 10:42:45,075 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:42:45,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:42:45,081 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:42:45,084 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:42:45,086 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 10:42:45,089 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6032bd65
04-21-2013 10:42:45,092 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2330633a
04-21-2013 10:42:45,095 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3dc286e2
04-21-2013 10:42:45,099 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:42:45,102 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:42:45,104 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:42:45,107 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:42:45,110 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:42:45,112 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:42:45,115 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:42:45,118 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:42:45,121 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:42:45,123 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:42:45,126 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:42:45,129 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:42:45,132 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:42:45,134 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:42:45,137 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:42:45,140 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:42:45,659 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:42:45,720 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:42:45,728 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:42:45,932 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:42:46,035 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:42:46,043 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:42:46,055 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:42:46,101 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:42:46,104 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:42:46,157 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:42:46,237 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:42:46,241 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:42:46,465 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:42:46,546 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:42:46,793 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:42:46,795 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:42:46,820 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:42:47,003 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:42:47,021 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:42:47,073 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:42:47,099 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:42:47,424 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,450 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:42:47,470 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:42:47,480 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:42:47,510 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:42:47,513 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,524 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,599 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,608 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,621 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:42:47,635 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:42:47,638 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:42:47,643 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:42:47,667 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:42:47,671 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,676 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:42:47,679 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:42:47,681 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:42:47,698 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:42:47,703 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:42:47,705 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:42:47,708 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:42:47,711 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:42:47,757 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,762 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:42:47,764 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:42:47,767 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:42:47,770 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:42:47,773 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,786 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:42:47,789 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:42:47,793 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:42:47,795 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:42:47,797 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:42:47,803 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:42:47,805 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:42:47,807 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:42:47,810 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:42:47,816 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:42:47,855 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:42:47,857 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:42:47,859 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:42:47,861 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:42:47,867 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:42:47,875 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:42:47,885 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:42:47,888 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:42:47,890 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:42:47,892 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:42:47,893 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:42:47,896 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:42:47,962 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:42:47,965 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:45:35,906 PM  INFO Main2:28 - demo begins...
04-21-2013 10:45:36,658 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:45:36,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:45:36,891 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:45:36,894 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:45:36,903 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7afaa550
04-21-2013 10:45:36,914 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b86f247
04-21-2013 10:45:36,919 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@722b9406
04-21-2013 10:45:36,933 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:45:36,936 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:45:36,939 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:45:36,947 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:45:36,950 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:45:36,953 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:45:36,966 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:45:36,969 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:45:36,992 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:45:37,003 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:45:37,006 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:45:37,009 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:45:37,021 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:45:37,023 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:45:37,026 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:45:37,040 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:45:37,043 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:45:37,046 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:45:37,057 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:45:37,059 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:45:37,062 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:45:37,077 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:45:37,080 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:45:37,089 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:45:37,093 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:45:37,104 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:45:37,109 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:45:37,119 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:45:37,122 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:45:37,138 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:45:37,141 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:45:37,154 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:45:37,157 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:45:37,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:45:37,179 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:45:37,182 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:45:37,193 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@627a4489
04-21-2013 10:45:37,203 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:45:37,206 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:45:37,209 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:45:37,219 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7aa89ce3
04-21-2013 10:45:37,232 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@66922804
04-21-2013 10:45:37,236 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66922804
04-21-2013 10:45:37,247 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@3caa4b
04-21-2013 10:45:37,251 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3caa4b
04-21-2013 10:45:37,266 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@105691e
04-21-2013 10:45:37,272 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@105691e
04-21-2013 10:45:37,282 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@7a2d189c
04-21-2013 10:45:37,287 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a2d189c
04-21-2013 10:45:37,304 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e1551b0
04-21-2013 10:45:37,307 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e1551b0
04-21-2013 10:45:37,314 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a969c29
04-21-2013 10:45:37,324 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4abf053f
04-21-2013 10:45:37,334 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@238b8914
04-21-2013 10:45:37,337 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@238b8914
04-21-2013 10:45:37,340 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@238b8914
04-21-2013 10:45:37,349 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b9cd75a
04-21-2013 10:45:37,352 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b9cd75a
04-21-2013 10:45:37,355 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b9cd75a
04-21-2013 10:45:37,364 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1d25d06e
04-21-2013 10:45:37,373 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@1c7e2da
04-21-2013 10:45:37,376 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1c7e2da
04-21-2013 10:45:37,379 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@1c7e2da
04-21-2013 10:45:37,388 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1f57ea4a
04-21-2013 10:45:37,392 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1f57ea4a
04-21-2013 10:45:37,395 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1f57ea4a
04-21-2013 10:45:37,404 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@53fcc0a2
04-21-2013 10:45:37,449 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@26a3960
04-21-2013 10:45:37,451 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26a3960
04-21-2013 10:45:37,458 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700a4488
04-21-2013 10:45:37,489 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@215983b7
04-21-2013 10:45:37,492 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@215983b7
04-21-2013 10:45:37,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a6397eb
04-21-2013 10:45:37,510 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@40f892a4
04-21-2013 10:45:37,535 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@46165b7e
04-21-2013 10:45:37,538 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@46165b7e
04-21-2013 10:45:37,544 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a738d08
04-21-2013 10:45:37,547 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68302e67
04-21-2013 10:45:37,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 10:45:37,554 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:45:37,557 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:45:37,559 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:45:37,562 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:45:37,565 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:45:37,710 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:45:37,756 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:45:37,771 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:45:37,783 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:45:37,873 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:45:37,879 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:45:37,887 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:45:37,890 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:45:37,901 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:45:37,906 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:45:37,919 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:45:37,925 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:45:37,931 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:45:37,936 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:45:37,942 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:45:37,947 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:45:37,953 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:45:37,959 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:45:37,966 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:45:37,984 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:45:37,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:45:37,990 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:45:37,993 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7afaa550
04-21-2013 10:45:37,996 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b86f247
04-21-2013 10:45:38,001 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@722b9406
04-21-2013 10:45:38,006 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:45:38,009 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:45:38,012 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:45:38,015 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:45:38,018 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:45:38,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:45:38,023 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:45:38,026 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:45:38,029 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:45:38,031 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:45:38,034 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:45:38,037 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:45:38,039 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:45:38,042 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:45:38,045 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:45:38,049 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:45:38,054 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:45:38,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:45:38,059 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:45:38,062 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:45:38,064 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:45:38,067 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:45:38,070 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:45:38,072 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:45:38,075 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:45:38,077 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:45:38,080 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:45:38,083 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:45:38,085 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:45:38,088 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:45:38,091 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:45:38,093 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:45:38,096 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:45:38,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:45:38,102 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:45:38,105 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:45:38,108 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@627a4489
04-21-2013 10:45:38,111 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:45:38,113 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:45:38,116 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:45:38,119 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7aa89ce3
04-21-2013 10:45:38,122 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@66922804
04-21-2013 10:45:38,124 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66922804
04-21-2013 10:45:38,127 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@3caa4b
04-21-2013 10:45:38,130 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3caa4b
04-21-2013 10:45:38,132 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@105691e
04-21-2013 10:45:38,135 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@105691e
04-21-2013 10:45:38,138 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@7a2d189c
04-21-2013 10:45:38,141 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a2d189c
04-21-2013 10:45:38,143 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e1551b0
04-21-2013 10:45:38,146 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e1551b0
04-21-2013 10:45:38,149 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a969c29
04-21-2013 10:45:38,153 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4abf053f
04-21-2013 10:45:38,158 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@238b8914
04-21-2013 10:45:38,162 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@238b8914
04-21-2013 10:45:38,167 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@238b8914
04-21-2013 10:45:38,171 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b9cd75a
04-21-2013 10:45:38,174 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b9cd75a
04-21-2013 10:45:38,177 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b9cd75a
04-21-2013 10:45:38,182 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1d25d06e
04-21-2013 10:45:38,185 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@1c7e2da
04-21-2013 10:45:38,189 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1c7e2da
04-21-2013 10:45:38,192 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@1c7e2da
04-21-2013 10:45:38,195 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1f57ea4a
04-21-2013 10:45:38,198 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1f57ea4a
04-21-2013 10:45:38,202 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1f57ea4a
04-21-2013 10:45:38,205 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@53fcc0a2
04-21-2013 10:45:38,208 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@26a3960
04-21-2013 10:45:38,211 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26a3960
04-21-2013 10:45:38,213 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700a4488
04-21-2013 10:45:38,216 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@215983b7
04-21-2013 10:45:38,219 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@215983b7
04-21-2013 10:45:38,222 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a6397eb
04-21-2013 10:45:38,225 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@40f892a4
04-21-2013 10:45:38,228 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@46165b7e
04-21-2013 10:45:38,230 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@46165b7e
04-21-2013 10:45:38,233 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 10:45:38,236 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:45:38,240 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:45:38,243 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:45:38,246 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:45:38,248 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:45:38,251 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:45:38,255 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 10:45:38,260 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:45:38,262 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:45:38,265 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:45:38,269 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:45:38,273 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:45:38,277 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:45:38,282 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:45:38,287 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:45:38,292 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:45:38,296 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:45:38,299 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:45:38,302 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:45:38,306 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:45:38,309 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:45:38,312 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:45:38,315 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:45:38,878 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:45:38,946 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:45:38,955 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:45:39,161 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.Contact
04-21-2013 10:45:39,248 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 10:45:39,255 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:45:39,287 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:45:39,292 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:45:39,299 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:45:39,335 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:45:39,338 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:45:39,379 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:45:39,456 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:45:39,460 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:45:39,650 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:45:39,737 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:45:39,979 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:45:39,981 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:45:40,008 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 10:45:40,174 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:45:40,192 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:45:40,244 PM DEBUG EntityBinder:394 - Import with entity name Contact
04-21-2013 10:45:40,270 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 10:45:40,503 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,528 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 10:45:40,548 PM DEBUG SimpleValueBinder:294 - building SimpleValue for partyId
04-21-2013 10:45:40,558 PM DEBUG PropertyBinder:259 - Building property partyId
04-21-2013 10:45:40,586 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,589 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 10:45:40,592 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address1
04-21-2013 10:45:40,594 PM DEBUG PropertyBinder:259 - Building property address1
04-21-2013 10:45:40,597 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,601 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 10:45:40,604 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address2
04-21-2013 10:45:40,606 PM DEBUG PropertyBinder:259 - Building property address2
04-21-2013 10:45:40,610 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,614 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 10:45:40,616 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address3
04-21-2013 10:45:40,619 PM DEBUG PropertyBinder:259 - Building property address3
04-21-2013 10:45:40,622 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,626 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 10:45:40,629 PM DEBUG SimpleValueBinder:294 - building SimpleValue for channel
04-21-2013 10:45:40,631 PM DEBUG PropertyBinder:259 - Building property channel
04-21-2013 10:45:40,634 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,638 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 10:45:40,640 PM DEBUG SimpleValueBinder:294 - building SimpleValue for countryCode
04-21-2013 10:45:40,643 PM DEBUG PropertyBinder:259 - Building property countryCode
04-21-2013 10:45:40,646 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,650 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property email with lazy=false
04-21-2013 10:45:40,652 PM DEBUG SimpleValueBinder:294 - building SimpleValue for email
04-21-2013 10:45:40,655 PM DEBUG PropertyBinder:259 - Building property email
04-21-2013 10:45:40,658 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,661 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 10:45:40,664 PM DEBUG SimpleValueBinder:294 - building SimpleValue for fax
04-21-2013 10:45:40,666 PM DEBUG PropertyBinder:259 - Building property fax
04-21-2013 10:45:40,669 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,673 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 10:45:40,675 PM DEBUG SimpleValueBinder:294 - building SimpleValue for firstname
04-21-2013 10:45:40,677 PM DEBUG PropertyBinder:259 - Building property firstname
04-21-2013 10:45:40,680 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,687 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 10:45:40,691 PM DEBUG SimpleValueBinder:294 - building SimpleValue for lastname
04-21-2013 10:45:40,694 PM DEBUG PropertyBinder:259 - Building property lastname
04-21-2013 10:45:40,697 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,701 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property login with lazy=false
04-21-2013 10:45:40,703 PM DEBUG SimpleValueBinder:294 - building SimpleValue for login
04-21-2013 10:45:40,706 PM DEBUG PropertyBinder:259 - Building property login
04-21-2013 10:45:40,709 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,714 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 10:45:40,717 PM DEBUG SimpleValueBinder:294 - building SimpleValue for mobile
04-21-2013 10:45:40,720 PM DEBUG PropertyBinder:259 - Building property mobile
04-21-2013 10:45:40,723 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,727 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 10:45:40,730 PM DEBUG SimpleValueBinder:294 - building SimpleValue for organisation
04-21-2013 10:45:40,732 PM DEBUG PropertyBinder:259 - Building property organisation
04-21-2013 10:45:40,735 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,739 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 10:45:40,742 PM DEBUG SimpleValueBinder:294 - building SimpleValue for partyType
04-21-2013 10:45:40,745 PM DEBUG PropertyBinder:259 - Building property partyType
04-21-2013 10:45:40,749 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,756 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 10:45:40,758 PM DEBUG SimpleValueBinder:294 - building SimpleValue for phone
04-21-2013 10:45:40,761 PM DEBUG PropertyBinder:259 - Building property phone
04-21-2013 10:45:40,764 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,769 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 10:45:40,772 PM DEBUG SimpleValueBinder:294 - building SimpleValue for postcode
04-21-2013 10:45:40,775 PM DEBUG PropertyBinder:259 - Building property postcode
04-21-2013 10:45:40,778 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,782 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property state with lazy=false
04-21-2013 10:45:40,786 PM DEBUG SimpleValueBinder:294 - building SimpleValue for state
04-21-2013 10:45:40,788 PM DEBUG PropertyBinder:259 - Building property state
04-21-2013 10:45:40,792 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,796 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property status with lazy=false
04-21-2013 10:45:40,798 PM DEBUG SimpleValueBinder:294 - building SimpleValue for status
04-21-2013 10:45:40,800 PM DEBUG PropertyBinder:259 - Building property status
04-21-2013 10:45:40,804 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,807 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 10:45:40,810 PM DEBUG SimpleValueBinder:294 - building SimpleValue for suburb
04-21-2013 10:45:40,812 PM DEBUG PropertyBinder:259 - Building property suburb
04-21-2013 10:45:40,815 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,819 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property type with lazy=false
04-21-2013 10:45:40,821 PM DEBUG SimpleValueBinder:294 - building SimpleValue for type
04-21-2013 10:45:40,823 PM DEBUG PropertyBinder:259 - Building property type
04-21-2013 10:45:40,837 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:45:40,840 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:45:40,842 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:45:40,849 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:45:40,852 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:45:40,975 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:40,980 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:45:40,983 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:45:40,987 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:45:40,997 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:45:41,001 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,031 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:45:41,037 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,041 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:45:41,044 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:45:41,047 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:45:41,050 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:45:41,053 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:45:41,055 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:45:41,059 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:45:41,062 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:45:41,148 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,154 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:45:41,158 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:45:41,161 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:45:41,164 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:45:41,168 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,182 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,249 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,257 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,265 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:45:41,271 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:45:41,274 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:45:41,279 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:45:41,296 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:45:41,299 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:45:41,303 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:45:41,306 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:45:41,308 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:45:41,314 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for partyId
04-21-2013 10:45:41,316 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address1
04-21-2013 10:45:41,318 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address2
04-21-2013 10:45:41,321 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address3
04-21-2013 10:45:41,323 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for channel
04-21-2013 10:45:41,325 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for countryCode
04-21-2013 10:45:41,327 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for email
04-21-2013 10:45:41,330 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for fax
04-21-2013 10:45:41,332 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for firstname
04-21-2013 10:45:41,335 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for lastname
04-21-2013 10:45:41,337 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for login
04-21-2013 10:45:41,339 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for mobile
04-21-2013 10:45:41,342 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for organisation
04-21-2013 10:45:41,344 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for partyType
04-21-2013 10:45:41,347 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for phone
04-21-2013 10:45:41,349 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for postcode
04-21-2013 10:45:41,351 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for state
04-21-2013 10:45:41,353 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for status
04-21-2013 10:45:41,355 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for suburb
04-21-2013 10:45:41,358 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for type
04-21-2013 10:45:41,360 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:45:41,363 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:45:41,365 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:45:41,367 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:45:41,374 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:45:41,406 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:45:41,408 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:45:41,410 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:45:41,412 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:45:41,418 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:45:41,424 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:45:41,435 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:45:41,438 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:45:41,440 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:45:41,441 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:45:41,443 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:45:41,445 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:45:41,520 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:45:41,525 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:47:56,183 PM  INFO Main2:28 - demo begins...
04-21-2013 10:47:57,080 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:47:57,295 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:47:57,307 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:47:57,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:47:57,319 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7afaa550
04-21-2013 10:47:57,329 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b86f247
04-21-2013 10:47:57,335 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@722b9406
04-21-2013 10:47:57,348 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:47:57,351 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:47:57,353 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:47:57,362 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:47:57,365 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:47:57,367 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:47:57,381 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:47:57,383 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:47:57,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:47:57,414 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:47:57,417 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:47:57,421 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:47:57,434 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:47:57,437 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:47:57,439 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:47:57,453 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:47:57,456 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:47:57,459 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:47:57,470 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:47:57,473 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:47:57,475 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:47:57,490 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:47:57,493 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:47:57,502 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:47:57,505 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:47:57,513 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:47:57,516 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:47:57,526 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:47:57,529 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:47:57,545 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:47:57,547 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:47:57,559 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:47:57,563 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:47:57,584 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:47:57,587 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:47:57,590 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:47:57,606 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@627a4489
04-21-2013 10:47:57,621 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:47:57,626 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:47:57,630 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:47:57,640 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 10:47:57,651 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:47:57,654 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:47:57,665 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:47:57,667 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:47:57,676 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:47:57,679 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:47:57,687 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:47:57,690 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:47:57,703 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:47:57,706 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:47:57,711 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 10:47:57,720 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@556917ee
04-21-2013 10:47:57,729 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:47:57,731 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:47:57,734 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:47:57,743 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:47:57,745 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:47:57,748 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:47:57,756 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 10:47:57,765 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:47:57,768 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:47:57,772 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:47:57,784 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:47:57,786 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:47:57,789 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:47:57,798 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 10:47:57,834 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:47:57,837 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:47:57,843 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 10:47:57,874 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:47:57,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:47:57,884 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 10:47:57,893 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 10:47:57,914 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:47:57,916 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:47:57,922 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:47:57,925 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:47:57,928 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:47:57,931 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:47:57,934 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:47:57,937 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:47:57,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 10:47:57,943 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-21-2013 10:47:58,093 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:47:58,137 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:47:58,150 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:47:58,162 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:47:58,250 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:47:58,255 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:47:58,264 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:47:58,266 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:47:58,277 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:47:58,283 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:47:58,298 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:47:58,304 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:47:58,309 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:47:58,315 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:47:58,320 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:47:58,326 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:47:58,331 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:47:58,338 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:47:58,344 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:47:58,363 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:47:58,366 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:47:58,369 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d8a8ce2
04-21-2013 10:47:58,372 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7afaa550
04-21-2013 10:47:58,374 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b86f247
04-21-2013 10:47:58,377 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@722b9406
04-21-2013 10:47:58,380 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:47:58,382 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:47:58,385 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@dfa6d18
04-21-2013 10:47:58,388 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:47:58,391 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:47:58,394 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e2b323e
04-21-2013 10:47:58,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:47:58,399 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:47:58,402 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@585976c2
04-21-2013 10:47:58,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:47:58,407 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:47:58,410 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20968fda
04-21-2013 10:47:58,413 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:47:58,418 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:47:58,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f9ec4ed
04-21-2013 10:47:58,425 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:47:58,428 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:47:58,430 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@337ec9f7
04-21-2013 10:47:58,433 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:47:58,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:47:58,438 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@540984b
04-21-2013 10:47:58,441 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:47:58,444 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8c3c315
04-21-2013 10:47:58,446 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:47:58,449 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d79953c
04-21-2013 10:47:58,452 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:47:58,454 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c3ac93e
04-21-2013 10:47:58,457 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:47:58,460 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38aa233f
04-21-2013 10:47:58,463 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:47:58,466 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eb3319f
04-21-2013 10:47:58,469 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:47:58,472 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c9e67a
04-21-2013 10:47:58,474 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:47:58,477 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:47:58,481 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b554d32
04-21-2013 10:47:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@627a4489
04-21-2013 10:47:58,486 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:47:58,489 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:47:58,491 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3aa83a13
04-21-2013 10:47:58,495 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 10:47:58,498 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:47:58,500 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 10:47:58,503 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:47:58,505 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 10:47:58,508 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:47:58,510 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 10:47:58,513 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:47:58,516 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 10:47:58,519 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:47:58,522 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 10:47:58,525 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 10:47:58,527 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@556917ee
04-21-2013 10:47:58,530 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:47:58,533 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:47:58,536 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 10:47:58,538 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:47:58,541 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:47:58,544 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:47:58,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 10:47:58,549 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:47:58,552 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:47:58,554 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:47:58,557 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:47:58,559 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:47:58,562 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:47:58,565 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 10:47:58,567 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:47:58,570 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:47:58,573 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 10:47:58,576 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:47:58,578 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:47:58,581 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 10:47:58,584 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 10:47:58,586 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:47:58,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:47:58,592 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:47:58,594 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:47:58,597 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:47:58,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:47:58,603 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:47:58,605 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:47:58,608 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 10:47:58,611 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6032bd65
04-21-2013 10:47:58,615 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:47:58,617 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:47:58,621 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:47:58,625 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:47:58,628 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:47:58,631 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:47:58,635 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:47:58,637 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:47:58,640 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:47:58,643 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:47:58,646 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:47:58,649 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:47:58,651 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:47:58,654 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:47:58,657 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:47:58,660 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:47:59,119 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:47:59,167 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:47:59,174 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:47:59,340 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.Contact
04-21-2013 10:47:59,407 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 10:47:59,412 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:47:59,437 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:47:59,440 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:47:59,449 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:47:59,507 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:47:59,510 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:47:59,552 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:47:59,611 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:47:59,615 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:47:59,804 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:47:59,886 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:48:00,133 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:48:00,136 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:48:00,161 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 10:48:00,341 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:48:00,358 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:48:00,409 PM DEBUG EntityBinder:394 - Import with entity name Contact
04-21-2013 10:48:00,435 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 10:48:00,649 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,673 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 10:48:00,693 PM DEBUG SimpleValueBinder:294 - building SimpleValue for partyId
04-21-2013 10:48:00,703 PM DEBUG PropertyBinder:259 - Building property partyId
04-21-2013 10:48:00,730 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,734 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 10:48:00,737 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address1
04-21-2013 10:48:00,739 PM DEBUG PropertyBinder:259 - Building property address1
04-21-2013 10:48:00,742 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,746 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 10:48:00,749 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address2
04-21-2013 10:48:00,751 PM DEBUG PropertyBinder:259 - Building property address2
04-21-2013 10:48:00,754 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,760 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 10:48:00,763 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address3
04-21-2013 10:48:00,765 PM DEBUG PropertyBinder:259 - Building property address3
04-21-2013 10:48:00,768 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,772 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 10:48:00,774 PM DEBUG SimpleValueBinder:294 - building SimpleValue for channel
04-21-2013 10:48:00,777 PM DEBUG PropertyBinder:259 - Building property channel
04-21-2013 10:48:00,780 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,783 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 10:48:00,786 PM DEBUG SimpleValueBinder:294 - building SimpleValue for countryCode
04-21-2013 10:48:00,788 PM DEBUG PropertyBinder:259 - Building property countryCode
04-21-2013 10:48:00,791 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,795 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property email with lazy=false
04-21-2013 10:48:00,798 PM DEBUG SimpleValueBinder:294 - building SimpleValue for email
04-21-2013 10:48:00,800 PM DEBUG PropertyBinder:259 - Building property email
04-21-2013 10:48:00,803 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,807 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 10:48:00,810 PM DEBUG SimpleValueBinder:294 - building SimpleValue for fax
04-21-2013 10:48:00,812 PM DEBUG PropertyBinder:259 - Building property fax
04-21-2013 10:48:00,815 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,818 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 10:48:00,821 PM DEBUG SimpleValueBinder:294 - building SimpleValue for firstname
04-21-2013 10:48:00,823 PM DEBUG PropertyBinder:259 - Building property firstname
04-21-2013 10:48:00,826 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,830 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 10:48:00,833 PM DEBUG SimpleValueBinder:294 - building SimpleValue for lastname
04-21-2013 10:48:00,835 PM DEBUG PropertyBinder:259 - Building property lastname
04-21-2013 10:48:00,838 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,842 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property login with lazy=false
04-21-2013 10:48:00,844 PM DEBUG SimpleValueBinder:294 - building SimpleValue for login
04-21-2013 10:48:00,846 PM DEBUG PropertyBinder:259 - Building property login
04-21-2013 10:48:00,849 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,853 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 10:48:00,856 PM DEBUG SimpleValueBinder:294 - building SimpleValue for mobile
04-21-2013 10:48:00,858 PM DEBUG PropertyBinder:259 - Building property mobile
04-21-2013 10:48:00,864 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,871 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 10:48:00,875 PM DEBUG SimpleValueBinder:294 - building SimpleValue for organisation
04-21-2013 10:48:00,879 PM DEBUG PropertyBinder:259 - Building property organisation
04-21-2013 10:48:00,884 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,888 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 10:48:00,890 PM DEBUG SimpleValueBinder:294 - building SimpleValue for partyType
04-21-2013 10:48:00,892 PM DEBUG PropertyBinder:259 - Building property partyType
04-21-2013 10:48:00,895 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,899 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 10:48:00,902 PM DEBUG SimpleValueBinder:294 - building SimpleValue for phone
04-21-2013 10:48:00,904 PM DEBUG PropertyBinder:259 - Building property phone
04-21-2013 10:48:00,907 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,911 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 10:48:00,913 PM DEBUG SimpleValueBinder:294 - building SimpleValue for postcode
04-21-2013 10:48:00,916 PM DEBUG PropertyBinder:259 - Building property postcode
04-21-2013 10:48:00,920 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,923 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property state with lazy=false
04-21-2013 10:48:00,925 PM DEBUG SimpleValueBinder:294 - building SimpleValue for state
04-21-2013 10:48:00,928 PM DEBUG PropertyBinder:259 - Building property state
04-21-2013 10:48:00,931 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,934 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property status with lazy=false
04-21-2013 10:48:00,937 PM DEBUG SimpleValueBinder:294 - building SimpleValue for status
04-21-2013 10:48:00,939 PM DEBUG PropertyBinder:259 - Building property status
04-21-2013 10:48:00,942 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,945 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 10:48:00,948 PM DEBUG SimpleValueBinder:294 - building SimpleValue for suburb
04-21-2013 10:48:00,950 PM DEBUG PropertyBinder:259 - Building property suburb
04-21-2013 10:48:00,953 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:00,957 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property type with lazy=false
04-21-2013 10:48:00,959 PM DEBUG SimpleValueBinder:294 - building SimpleValue for type
04-21-2013 10:48:00,962 PM DEBUG PropertyBinder:259 - Building property type
04-21-2013 10:48:00,974 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:48:00,977 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:48:00,980 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:48:00,985 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:48:00,990 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:48:01,112 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,116 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:48:01,119 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:48:01,121 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:48:01,129 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:48:01,132 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,162 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:48:01,167 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,171 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:48:01,173 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:48:01,176 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:48:01,179 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:48:01,182 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:48:01,184 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:48:01,187 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:48:01,190 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:48:01,282 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,288 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:48:01,293 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:48:01,296 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:48:01,300 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:48:01,304 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,317 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,382 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,388 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,396 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:48:01,402 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:48:01,405 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:48:01,409 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:48:01,425 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:48:01,428 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:48:01,432 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:48:01,434 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:48:01,437 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:48:01,442 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for partyId
04-21-2013 10:48:01,445 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address1
04-21-2013 10:48:01,447 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address2
04-21-2013 10:48:01,449 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address3
04-21-2013 10:48:01,451 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for channel
04-21-2013 10:48:01,454 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for countryCode
04-21-2013 10:48:01,456 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for email
04-21-2013 10:48:01,458 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for fax
04-21-2013 10:48:01,460 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for firstname
04-21-2013 10:48:01,462 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for lastname
04-21-2013 10:48:01,465 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for login
04-21-2013 10:48:01,467 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for mobile
04-21-2013 10:48:01,470 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for organisation
04-21-2013 10:48:01,472 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for partyType
04-21-2013 10:48:01,474 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for phone
04-21-2013 10:48:01,477 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for postcode
04-21-2013 10:48:01,479 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for state
04-21-2013 10:48:01,481 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for status
04-21-2013 10:48:01,483 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for suburb
04-21-2013 10:48:01,486 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for type
04-21-2013 10:48:01,489 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:48:01,493 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:48:01,495 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:48:01,499 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:48:01,505 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:48:01,534 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:48:01,536 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:48:01,539 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:48:01,541 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:48:01,547 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:48:01,554 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:48:01,564 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:48:01,567 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:48:01,569 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:48:01,571 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:48:01,573 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:48:01,575 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:48:01,648 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:48:01,652 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:51:41,915 PM  INFO Main2:28 - demo begins...
04-21-2013 10:51:42,624 PM DEBUG logging:142 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:51:42,858 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:51:42,871 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:51:42,874 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:51:42,882 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fe903d5
04-21-2013 10:51:42,893 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f64b09c
04-21-2013 10:51:42,899 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@526d0040
04-21-2013 10:51:42,913 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:51:42,915 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:51:42,918 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:51:42,927 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:51:42,930 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:51:42,932 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:51:42,946 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:51:42,948 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:51:42,972 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:51:42,981 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:51:42,983 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:51:42,986 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:51:42,998 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:51:43,000 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:51:43,003 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:51:43,019 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:51:43,024 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:51:43,028 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:51:43,045 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:51:43,048 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:51:43,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:51:43,066 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:51:43,068 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:51:43,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:51:43,081 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:51:43,089 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:51:43,092 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:51:43,101 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:51:43,104 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:51:43,123 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:51:43,126 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:51:43,139 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:51:43,142 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:51:43,157 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:51:43,160 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:51:43,164 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:51:43,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2814a18d
04-21-2013 10:51:43,189 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:51:43,192 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:51:43,195 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:51:43,204 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f855562
04-21-2013 10:51:43,215 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:51:43,218 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:51:43,227 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:51:43,230 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:51:43,239 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:51:43,242 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:51:43,251 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:51:43,253 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:51:43,268 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:51:43,271 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:51:43,278 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c391c3
04-21-2013 10:51:43,289 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6fe78c96
04-21-2013 10:51:43,298 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:51:43,301 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:51:43,304 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:51:43,314 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:51:43,317 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:51:43,320 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:51:43,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@59d0d45b
04-21-2013 10:51:43,337 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:51:43,340 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:51:43,343 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:51:43,352 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:51:43,355 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:51:43,357 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:51:43,365 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@3c1a1399
04-21-2013 10:51:43,406 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:51:43,409 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:51:43,415 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d911540
04-21-2013 10:51:43,446 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:51:43,449 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:51:43,454 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c7976c1
04-21-2013 10:51:43,463 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@1fc8efd1
04-21-2013 10:51:43,483 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:51:43,486 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:51:43,492 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7052c6b4
04-21-2013 10:51:43,496 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a738d08
04-21-2013 10:51:43,499 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68302e67
04-21-2013 10:51:43,502 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 10:51:43,505 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:51:43,508 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:51:43,510 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:51:43,513 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:51:43,652 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:51:43,696 PM  INFO Version:41 - HHH000412: Hibernate Core {4.1.7.Final}
04-21-2013 10:51:43,710 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:51:43,724 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:51:43,811 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:51:43,816 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:51:43,824 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:51:43,827 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:51:43,838 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:51:43,843 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:51:43,855 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:51:43,861 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:51:43,866 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:51:43,872 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:51:43,877 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:51:43,883 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:51:43,888 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:51:43,894 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:51:43,901 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:51:43,920 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:51:43,924 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:51:43,927 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:51:43,929 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fe903d5
04-21-2013 10:51:43,932 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f64b09c
04-21-2013 10:51:43,935 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@526d0040
04-21-2013 10:51:43,938 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:51:43,942 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:51:43,945 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:51:43,947 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:51:43,950 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:51:43,953 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:51:43,955 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:51:43,958 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:51:43,961 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:51:43,963 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:51:43,966 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:51:43,968 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:51:43,971 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:51:43,974 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:51:43,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:51:43,979 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:51:43,981 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:51:43,984 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:51:43,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:51:43,989 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:51:43,992 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:51:43,994 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:51:43,997 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:51:43,999 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:51:44,002 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:51:44,005 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:51:44,007 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:51:44,010 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:51:44,013 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:51:44,016 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:51:44,018 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:51:44,021 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:51:44,024 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:51:44,027 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:51:44,030 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:51:44,032 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:51:44,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2814a18d
04-21-2013 10:51:44,038 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:51:44,041 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:51:44,044 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:51:44,047 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f855562
04-21-2013 10:51:44,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:51:44,052 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:51:44,055 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:51:44,058 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:51:44,061 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:51:44,063 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:51:44,066 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:51:44,068 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:51:44,071 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:51:44,073 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:51:44,076 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c391c3
04-21-2013 10:51:44,079 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6fe78c96
04-21-2013 10:51:44,082 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:51:44,085 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:51:44,087 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:51:44,090 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:51:44,092 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:51:44,095 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:51:44,097 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@59d0d45b
04-21-2013 10:51:44,100 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:51:44,102 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:51:44,105 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:51:44,108 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:51:44,110 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:51:44,113 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:51:44,116 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@3c1a1399
04-21-2013 10:51:44,118 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:51:44,121 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:51:44,123 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d911540
04-21-2013 10:51:44,126 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:51:44,129 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:51:44,131 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c7976c1
04-21-2013 10:51:44,134 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@1fc8efd1
04-21-2013 10:51:44,137 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:51:44,139 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:51:44,142 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 10:51:44,145 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 10:51:44,150 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:51:44,152 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:51:44,155 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:51:44,158 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:51:44,160 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:51:44,163 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:51:44,167 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:51:44,170 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:51:44,172 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:51:44,175 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:51:44,178 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:51:44,181 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:51:44,183 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:51:44,186 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:51:44,188 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:51:44,191 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:51:44,194 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:51:44,197 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:51:44,199 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:51:44,202 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:51:44,205 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:51:44,208 PM DEBUG Ejb3Configuration:313 - Look up for persistence unit: demosystem
04-21-2013 10:51:44,649 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:51:44,698 PM DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:51:44,706 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.Main2
04-21-2013 10:51:44,875 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.Contact
04-21-2013 10:51:44,943 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 10:51:44,949 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:51:44,974 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:51:44,977 PM DEBUG AbstractJarVisitor:172 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:51:44,985 PM DEBUG AbstractJarVisitor:223 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:51:45,021 PM DEBUG Ejb3Configuration:842 - Detect class: true; detect hbm: true
04-21-2013 10:51:45,024 PM DEBUG Ejb3Configuration:202 - Creating Factory: demosystem
04-21-2013 10:51:45,064 PM  WARN Ejb3Configuration:1132 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:51:45,127 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:51:45,130 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:51:45,334 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:51:45,420 PM DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
04-21-2013 10:51:45,715 PM DEBUG Configuration:3401 - Processing hbm.xml files
04-21-2013 10:51:45,718 PM DEBUG Configuration:3431 - Process annotated classes
04-21-2013 10:51:45,759 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 10:51:45,969 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:51:45,986 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:51:46,041 PM DEBUG EntityBinder:394 - Import with entity name Contact
04-21-2013 10:51:46,069 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 10:51:46,300 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,326 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 10:51:46,347 PM DEBUG SimpleValueBinder:294 - building SimpleValue for partyId
04-21-2013 10:51:46,357 PM DEBUG PropertyBinder:259 - Building property partyId
04-21-2013 10:51:46,386 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,390 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 10:51:46,392 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address1
04-21-2013 10:51:46,395 PM DEBUG PropertyBinder:259 - Building property address1
04-21-2013 10:51:46,398 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,402 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 10:51:46,405 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address2
04-21-2013 10:51:46,408 PM DEBUG PropertyBinder:259 - Building property address2
04-21-2013 10:51:46,412 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,415 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 10:51:46,418 PM DEBUG SimpleValueBinder:294 - building SimpleValue for address3
04-21-2013 10:51:46,421 PM DEBUG PropertyBinder:259 - Building property address3
04-21-2013 10:51:46,424 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,428 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 10:51:46,430 PM DEBUG SimpleValueBinder:294 - building SimpleValue for channel
04-21-2013 10:51:46,433 PM DEBUG PropertyBinder:259 - Building property channel
04-21-2013 10:51:46,436 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,439 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 10:51:46,442 PM DEBUG SimpleValueBinder:294 - building SimpleValue for countryCode
04-21-2013 10:51:46,445 PM DEBUG PropertyBinder:259 - Building property countryCode
04-21-2013 10:51:46,448 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,451 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property email with lazy=false
04-21-2013 10:51:46,454 PM DEBUG SimpleValueBinder:294 - building SimpleValue for email
04-21-2013 10:51:46,456 PM DEBUG PropertyBinder:259 - Building property email
04-21-2013 10:51:46,460 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,463 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 10:51:46,466 PM DEBUG SimpleValueBinder:294 - building SimpleValue for fax
04-21-2013 10:51:46,468 PM DEBUG PropertyBinder:259 - Building property fax
04-21-2013 10:51:46,471 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,475 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 10:51:46,478 PM DEBUG SimpleValueBinder:294 - building SimpleValue for firstname
04-21-2013 10:51:46,481 PM DEBUG PropertyBinder:259 - Building property firstname
04-21-2013 10:51:46,487 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,492 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 10:51:46,495 PM DEBUG SimpleValueBinder:294 - building SimpleValue for lastname
04-21-2013 10:51:46,497 PM DEBUG PropertyBinder:259 - Building property lastname
04-21-2013 10:51:46,500 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,504 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property login with lazy=false
04-21-2013 10:51:46,506 PM DEBUG SimpleValueBinder:294 - building SimpleValue for login
04-21-2013 10:51:46,510 PM DEBUG PropertyBinder:259 - Building property login
04-21-2013 10:51:46,513 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,518 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 10:51:46,521 PM DEBUG SimpleValueBinder:294 - building SimpleValue for mobile
04-21-2013 10:51:46,524 PM DEBUG PropertyBinder:259 - Building property mobile
04-21-2013 10:51:46,528 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,532 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 10:51:46,535 PM DEBUG SimpleValueBinder:294 - building SimpleValue for organisation
04-21-2013 10:51:46,537 PM DEBUG PropertyBinder:259 - Building property organisation
04-21-2013 10:51:46,540 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,544 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 10:51:46,547 PM DEBUG SimpleValueBinder:294 - building SimpleValue for partyType
04-21-2013 10:51:46,550 PM DEBUG PropertyBinder:259 - Building property partyType
04-21-2013 10:51:46,553 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,556 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 10:51:46,559 PM DEBUG SimpleValueBinder:294 - building SimpleValue for phone
04-21-2013 10:51:46,563 PM DEBUG PropertyBinder:259 - Building property phone
04-21-2013 10:51:46,566 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,570 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 10:51:46,572 PM DEBUG SimpleValueBinder:294 - building SimpleValue for postcode
04-21-2013 10:51:46,575 PM DEBUG PropertyBinder:259 - Building property postcode
04-21-2013 10:51:46,578 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,582 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property state with lazy=false
04-21-2013 10:51:46,584 PM DEBUG SimpleValueBinder:294 - building SimpleValue for state
04-21-2013 10:51:46,587 PM DEBUG PropertyBinder:259 - Building property state
04-21-2013 10:51:46,591 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,594 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property status with lazy=false
04-21-2013 10:51:46,597 PM DEBUG SimpleValueBinder:294 - building SimpleValue for status
04-21-2013 10:51:46,599 PM DEBUG PropertyBinder:259 - Building property status
04-21-2013 10:51:46,602 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,606 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 10:51:46,609 PM DEBUG SimpleValueBinder:294 - building SimpleValue for suburb
04-21-2013 10:51:46,611 PM DEBUG PropertyBinder:259 - Building property suburb
04-21-2013 10:51:46,615 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,619 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property type with lazy=false
04-21-2013 10:51:46,623 PM DEBUG SimpleValueBinder:294 - building SimpleValue for type
04-21-2013 10:51:46,625 PM DEBUG PropertyBinder:259 - Building property type
04-21-2013 10:51:46,640 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:51:46,644 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:51:46,648 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:51:46,652 PM DEBUG EntityBinder:394 - Import with entity name EntityB
04-21-2013 10:51:46,656 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:51:46,793 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,797 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:51:46,799 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:51:46,802 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:51:46,809 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:51:46,813 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,843 PM DEBUG PropertyBinder:259 - Building property entityA
04-21-2013 10:51:46,849 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,854 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:51:46,857 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:51:46,860 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:51:46,863 PM DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:51:46,866 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:51:46,869 PM DEBUG AnnotationBinder:989 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:51:46,872 PM DEBUG EntityBinder:394 - Import with entity name EntityA
04-21-2013 10:51:46,875 PM DEBUG EntityBinder:564 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:51:46,973 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:46,980 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:51:46,985 PM DEBUG SimpleValueBinder:294 - building SimpleValue for id
04-21-2013 10:51:46,990 PM DEBUG PropertyBinder:259 - Building property id
04-21-2013 10:51:46,996 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:51:47,000 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:47,015 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:47,079 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:47,086 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:47,094 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:51:47,101 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:51:47,103 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:51:47,108 PM DEBUG CollectionBinder:400 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:51:47,124 PM DEBUG PropertyBinder:259 - Building property entities
04-21-2013 10:51:47,128 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:51:47,132 PM DEBUG PropertyBinder:178 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:51:47,134 PM DEBUG SimpleValueBinder:294 - building SimpleValue for name
04-21-2013 10:51:47,137 PM DEBUG PropertyBinder:259 - Building property name
04-21-2013 10:51:47,143 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for partyId
04-21-2013 10:51:47,145 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address1
04-21-2013 10:51:47,147 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address2
04-21-2013 10:51:47,150 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for address3
04-21-2013 10:51:47,152 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for channel
04-21-2013 10:51:47,154 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for countryCode
04-21-2013 10:51:47,156 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for email
04-21-2013 10:51:47,158 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for fax
04-21-2013 10:51:47,161 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for firstname
04-21-2013 10:51:47,163 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for lastname
04-21-2013 10:51:47,166 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for login
04-21-2013 10:51:47,168 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for mobile
04-21-2013 10:51:47,170 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for organisation
04-21-2013 10:51:47,172 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for partyType
04-21-2013 10:51:47,175 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for phone
04-21-2013 10:51:47,177 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for postcode
04-21-2013 10:51:47,179 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for state
04-21-2013 10:51:47,182 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for status
04-21-2013 10:51:47,185 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for suburb
04-21-2013 10:51:47,188 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for type
04-21-2013 10:51:47,190 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:51:47,193 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:51:47,195 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for id
04-21-2013 10:51:47,198 PM DEBUG SimpleValueBinder:332 - Setting SimpleValue typeName for name
04-21-2013 10:51:47,203 PM DEBUG Configuration:1409 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:51:47,232 PM DEBUG Configuration:1589 - Processing extends queue
04-21-2013 10:51:47,233 PM DEBUG Configuration:1643 - Processing extends queue
04-21-2013 10:51:47,235 PM DEBUG Configuration:1592 - Processing collection mappings
04-21-2013 10:51:47,238 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:51:47,247 PM DEBUG CollectionBinder:759 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:51:47,256 PM DEBUG CollectionBinder:788 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:51:47,268 PM DEBUG TableBinder:332 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:51:47,271 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:51:47,273 PM DEBUG Configuration:1602 - Processing native query and ResultSetMapping mappings
04-21-2013 10:51:47,275 PM DEBUG Configuration:1610 - Processing association property references
04-21-2013 10:51:47,278 PM DEBUG Configuration:1632 - Processing foreign key constraints
04-21-2013 10:51:47,281 PM DEBUG Configuration:1700 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:51:47,364 PM  WARN ConnectionProviderInitiator:178 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:51:47,370 PM  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:54:53,485 PM  INFO Main2:28 - demo begins...
04-21-2013 10:54:54,195 PM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:54:54,423 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:54:54,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:54:54,439 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:54:54,448 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fe903d5
04-21-2013 10:54:54,459 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f64b09c
04-21-2013 10:54:54,465 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@526d0040
04-21-2013 10:54:54,479 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:54:54,482 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:54:54,485 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:54:54,494 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:54:54,496 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:54:54,499 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:54:54,513 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:54:54,516 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:54:54,540 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:54:54,550 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:54:54,553 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:54:54,556 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:54:54,568 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:54:54,571 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:54:54,574 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:54:54,588 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:54:54,590 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:54:54,593 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:54:54,605 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:54:54,608 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:54:54,610 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:54:54,625 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:54:54,628 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:54:54,638 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:54:54,641 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:54:54,650 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:54:54,653 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:54:54,662 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:54:54,665 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:54:54,681 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:54:54,684 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:54:54,696 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:54:54,699 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:54:54,717 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:54:54,720 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:54:54,723 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:54:54,736 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2814a18d
04-21-2013 10:54:54,746 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:54:54,751 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:54:54,755 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:54:54,764 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f855562
04-21-2013 10:54:54,775 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:54:54,778 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:54:54,786 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:54:54,789 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:54:54,797 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:54:54,799 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:54:54,809 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:54:54,811 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:54:54,825 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:54:54,828 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:54:54,833 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c391c3
04-21-2013 10:54:54,841 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6fe78c96
04-21-2013 10:54:54,850 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:54:54,853 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:54:54,855 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:54:54,864 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:54:54,867 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:54:54,869 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:54:54,877 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@59d0d45b
04-21-2013 10:54:54,885 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:54:54,888 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:54:54,890 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:54:54,899 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:54:54,901 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:54:54,904 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:54:54,912 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@3c1a1399
04-21-2013 10:54:54,950 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:54:54,953 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:54:54,958 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d911540
04-21-2013 10:54:54,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:54:54,990 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:54:54,995 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c7976c1
04-21-2013 10:54:55,004 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@1fc8efd1
04-21-2013 10:54:55,025 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:54:55,028 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:54:55,033 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7052c6b4
04-21-2013 10:54:55,036 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a738d08
04-21-2013 10:54:55,039 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68302e67
04-21-2013 10:54:55,042 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 10:54:55,045 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 10:54:55,047 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:54:55,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:54:55,053 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:54:55,185 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:54:55,234 PM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-21-2013 10:54:55,249 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:54:55,262 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:54:55,346 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:54:55,352 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:54:55,360 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:54:55,363 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:54:55,373 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:54:55,379 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:54:55,391 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:54:55,397 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:54:55,403 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:54:55,408 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:54:55,414 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:54:55,419 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:54:55,425 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:54:55,431 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:54:55,437 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:54:55,457 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:54:55,460 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:54:55,462 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ed1b0b
04-21-2013 10:54:55,465 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fe903d5
04-21-2013 10:54:55,468 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f64b09c
04-21-2013 10:54:55,471 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@526d0040
04-21-2013 10:54:55,473 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:54:55,476 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:54:55,479 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34d507e9
04-21-2013 10:54:55,482 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:54:55,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:54:55,489 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6632060c
04-21-2013 10:54:55,493 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:54:55,496 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:54:55,499 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79038de7
04-21-2013 10:54:55,502 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:54:55,505 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:54:55,507 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477a1767
04-21-2013 10:54:55,510 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:54:55,513 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:54:55,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a5eb489
04-21-2013 10:54:55,518 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:54:55,521 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:54:55,523 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@663b1f38
04-21-2013 10:54:55,526 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:54:55,528 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:54:55,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e1a9d1b
04-21-2013 10:54:55,533 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:54:55,536 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a00185
04-21-2013 10:54:55,539 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:54:55,541 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@538d7ace
04-21-2013 10:54:55,544 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:54:55,546 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@76933bcb
04-21-2013 10:54:55,549 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:54:55,551 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1389c036
04-21-2013 10:54:55,554 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:54:55,556 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@561777b1
04-21-2013 10:54:55,559 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:54:55,563 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@249c2715
04-21-2013 10:54:55,566 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:54:55,569 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:54:55,571 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11e9c82e
04-21-2013 10:54:55,574 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2814a18d
04-21-2013 10:54:55,576 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:54:55,579 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:54:55,582 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fc4f0f8
04-21-2013 10:54:55,585 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f855562
04-21-2013 10:54:55,588 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:54:55,590 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19c5466b
04-21-2013 10:54:55,593 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:54:55,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fba0f36
04-21-2013 10:54:55,598 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:54:55,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47124746
04-21-2013 10:54:55,603 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:54:55,606 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a7e8c4d
04-21-2013 10:54:55,609 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:54:55,611 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58648016
04-21-2013 10:54:55,614 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c391c3
04-21-2013 10:54:55,616 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6fe78c96
04-21-2013 10:54:55,619 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:54:55,622 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:54:55,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@66a23610
04-21-2013 10:54:55,627 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:54:55,629 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:54:55,632 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62c2ee15
04-21-2013 10:54:55,634 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@59d0d45b
04-21-2013 10:54:55,637 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:54:55,640 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:54:55,642 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@651db6bb
04-21-2013 10:54:55,645 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:54:55,647 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:54:55,652 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72608760
04-21-2013 10:54:55,656 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@3c1a1399
04-21-2013 10:54:55,659 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:54:55,661 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62a2220f
04-21-2013 10:54:55,665 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d911540
04-21-2013 10:54:55,668 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:54:55,671 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d1e233
04-21-2013 10:54:55,674 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c7976c1
04-21-2013 10:54:55,676 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@1fc8efd1
04-21-2013 10:54:55,679 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:54:55,682 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41ab11b0
04-21-2013 10:54:55,684 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@14718242
04-21-2013 10:54:55,688 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@281ec58a
04-21-2013 10:54:55,691 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c3afb99
04-21-2013 10:54:55,693 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45c3987
04-21-2013 10:54:55,696 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 10:54:55,699 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 10:54:55,702 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:54:55,705 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:54:55,709 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:54:55,711 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:54:55,714 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:54:55,717 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:54:55,720 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:54:55,723 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:54:55,725 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:54:55,728 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:54:55,731 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:54:55,734 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:54:55,736 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:54:55,739 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:54:55,742 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:54:55,744 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:54:55,747 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:54:55,750 PM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-21-2013 10:54:56,185 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 10:54:56,233 PM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:54:56,240 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-21-2013 10:54:56,414 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-21-2013 10:54:56,484 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 10:54:56,490 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:54:56,515 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:54:56,518 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:54:56,526 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:54:56,562 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 10:54:56,564 PM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-21-2013 10:54:56,607 PM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:54:56,670 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:54:56,674 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:54:56,862 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:54:56,929 PM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-21-2013 10:54:57,170 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 10:54:57,172 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 10:54:57,197 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 10:54:57,361 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:54:57,377 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:54:57,425 PM DEBUG EntityBinder:354 - Import with entity name Contact
04-21-2013 10:54:57,450 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 10:54:57,673 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,698 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 10:54:57,715 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-21-2013 10:54:57,724 PM DEBUG PropertyBinder:256 - Building property partyId
04-21-2013 10:54:57,747 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,751 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 10:54:57,754 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-21-2013 10:54:57,756 PM DEBUG PropertyBinder:256 - Building property address1
04-21-2013 10:54:57,759 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,763 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 10:54:57,765 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-21-2013 10:54:57,768 PM DEBUG PropertyBinder:256 - Building property address2
04-21-2013 10:54:57,771 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,775 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 10:54:57,777 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-21-2013 10:54:57,781 PM DEBUG PropertyBinder:256 - Building property address3
04-21-2013 10:54:57,785 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,789 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 10:54:57,791 PM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-21-2013 10:54:57,794 PM DEBUG PropertyBinder:256 - Building property channel
04-21-2013 10:54:57,797 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,801 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 10:54:57,803 PM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-21-2013 10:54:57,806 PM DEBUG PropertyBinder:256 - Building property countryCode
04-21-2013 10:54:57,809 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,812 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-21-2013 10:54:57,815 PM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-21-2013 10:54:57,817 PM DEBUG PropertyBinder:256 - Building property email
04-21-2013 10:54:57,820 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,824 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 10:54:57,826 PM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-21-2013 10:54:57,829 PM DEBUG PropertyBinder:256 - Building property fax
04-21-2013 10:54:57,832 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,835 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 10:54:57,838 PM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-21-2013 10:54:57,840 PM DEBUG PropertyBinder:256 - Building property firstname
04-21-2013 10:54:57,844 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,847 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 10:54:57,849 PM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-21-2013 10:54:57,852 PM DEBUG PropertyBinder:256 - Building property lastname
04-21-2013 10:54:57,855 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,859 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-21-2013 10:54:57,861 PM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-21-2013 10:54:57,863 PM DEBUG PropertyBinder:256 - Building property login
04-21-2013 10:54:57,867 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,870 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 10:54:57,873 PM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-21-2013 10:54:57,875 PM DEBUG PropertyBinder:256 - Building property mobile
04-21-2013 10:54:57,879 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,884 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 10:54:57,887 PM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-21-2013 10:54:57,891 PM DEBUG PropertyBinder:256 - Building property organisation
04-21-2013 10:54:57,897 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,903 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 10:54:57,906 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-21-2013 10:54:57,909 PM DEBUG PropertyBinder:256 - Building property partyType
04-21-2013 10:54:57,912 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,916 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 10:54:57,918 PM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-21-2013 10:54:57,920 PM DEBUG PropertyBinder:256 - Building property phone
04-21-2013 10:54:57,924 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,927 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 10:54:57,930 PM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-21-2013 10:54:57,932 PM DEBUG PropertyBinder:256 - Building property postcode
04-21-2013 10:54:57,935 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,939 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-21-2013 10:54:57,941 PM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-21-2013 10:54:57,944 PM DEBUG PropertyBinder:256 - Building property state
04-21-2013 10:54:57,947 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,950 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-21-2013 10:54:57,953 PM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-21-2013 10:54:57,955 PM DEBUG PropertyBinder:256 - Building property status
04-21-2013 10:54:57,958 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,962 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 10:54:57,964 PM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-21-2013 10:54:57,967 PM DEBUG PropertyBinder:256 - Building property suburb
04-21-2013 10:54:57,970 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:57,973 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-21-2013 10:54:57,976 PM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-21-2013 10:54:57,978 PM DEBUG PropertyBinder:256 - Building property type
04-21-2013 10:54:57,990 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:54:57,993 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:54:57,995 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:54:57,999 PM DEBUG EntityBinder:354 - Import with entity name EntityB
04-21-2013 10:54:58,003 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:54:58,129 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,133 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:54:58,135 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 10:54:58,137 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 10:54:58,145 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:54:58,148 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,173 PM DEBUG PropertyBinder:256 - Building property entityA
04-21-2013 10:54:58,176 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,180 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:54:58,183 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 10:54:58,185 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 10:54:58,188 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:54:58,191 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:54:58,193 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:54:58,196 PM DEBUG EntityBinder:354 - Import with entity name EntityA
04-21-2013 10:54:58,198 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:54:58,270 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,274 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:54:58,276 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 10:54:58,279 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 10:54:58,283 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:54:58,287 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,302 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,385 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,395 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,407 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:54:58,417 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:54:58,421 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:54:58,428 PM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:54:58,448 PM DEBUG PropertyBinder:256 - Building property entities
04-21-2013 10:54:58,451 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:54:58,456 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:54:58,459 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 10:54:58,462 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 10:54:58,467 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-21-2013 10:54:58,470 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-21-2013 10:54:58,472 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-21-2013 10:54:58,475 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-21-2013 10:54:58,477 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-21-2013 10:54:58,480 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-21-2013 10:54:58,482 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-21-2013 10:54:58,485 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-21-2013 10:54:58,489 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-21-2013 10:54:58,493 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-21-2013 10:54:58,497 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-21-2013 10:54:58,501 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-21-2013 10:54:58,503 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-21-2013 10:54:58,506 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-21-2013 10:54:58,508 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-21-2013 10:54:58,510 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-21-2013 10:54:58,513 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-21-2013 10:54:58,515 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-21-2013 10:54:58,517 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-21-2013 10:54:58,519 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-21-2013 10:54:58,521 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 10:54:58,524 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 10:54:58,526 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 10:54:58,528 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 10:54:58,533 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:54:58,560 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 10:54:58,562 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 10:54:58,564 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 10:54:58,566 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:54:58,572 PM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:54:58,578 PM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:54:58,588 PM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:54:58,591 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:54:58,593 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 10:54:58,594 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 10:54:58,596 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 10:54:58,598 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:54:58,671 PM  WARN ConnectionProviderInitiator:176 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:54:58,674 PM  INFO ConnectionProviderInitiator:186 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:54:58,734 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01
04-21-2013 10:54:58,737 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 10:54:58,740 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:54:59,446 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 10:54:59,980 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 10:55:00,175 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucieese13pq2o2|d89d7eb] registered.
04-21-2013 10:55:00,357 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucieese13pq2o2|d89d7eb] unregistered, in order to be reregistered after update.
04-21-2013 10:55:00,361 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucieese13pq2o2|d89d7eb] registered.
04-21-2013 10:55:00,713 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@de980a8a [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@72fa338 [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8ucieese13pq2o2|796cefa8, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8f93c21f [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucieese13pq2o2|dec3c6d, jdbcUrl -> jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucieese13pq2o2|d89d7eb, numHelperThreads -> 3 ]
04-21-2013 10:55:00,813 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 10:55:00,815 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 10:55:00,818 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 10:55:00,820 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 10:55:00,822 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 10:55:00,826 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@79cb374f config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 10:55:00,830 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:00,829 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:00,829 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:00,832 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 10:55:00,843 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 10:55:00,845 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@79cb374f [managed: 0, unused: 0, excluded: 0]
04-21-2013 10:55:01,849 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:01,850 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:01,849 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:02,852 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:02,854 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:02,875 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:03,854 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:03,872 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:55:03,877 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:24,961 PM  INFO Main2:28 - demo begins...
04-21-2013 10:59:25,717 PM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 10:59:25,960 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:59:25,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:59:25,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:59:25,985 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7b6643
04-21-2013 10:59:25,999 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@688c4a77
04-21-2013 10:59:26,005 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@b035079
04-21-2013 10:59:26,022 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:59:26,025 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:59:26,028 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:59:26,037 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:59:26,040 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:59:26,043 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:59:26,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:59:26,059 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:59:26,088 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:59:26,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:59:26,102 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:59:26,105 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:59:26,118 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:59:26,120 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:59:26,124 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:59:26,137 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:59:26,140 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:59:26,143 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:59:26,154 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:59:26,157 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:59:26,159 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:59:26,182 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:59:26,185 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:59:26,196 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:59:26,198 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:59:26,208 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@37722456
04-21-2013 10:59:26,210 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37722456
04-21-2013 10:59:26,222 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:59:26,226 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:59:26,242 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:59:26,245 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:59:26,258 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:59:26,261 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:59:26,278 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:59:26,283 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:59:26,288 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:59:26,300 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4929b0e1
04-21-2013 10:59:26,309 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:59:26,313 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:59:26,318 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:59:26,329 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53d439fe
04-21-2013 10:59:26,340 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:59:26,343 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:59:26,351 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:59:26,354 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:59:26,369 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:59:26,372 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:59:26,382 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:59:26,385 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:59:26,400 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:59:26,403 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:59:26,408 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45e67e6a
04-21-2013 10:59:26,418 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@42f1916f
04-21-2013 10:59:26,428 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:59:26,431 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:59:26,433 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:59:26,443 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:59:26,446 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:59:26,448 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:59:26,456 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 10:59:26,465 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:59:26,469 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:59:26,471 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:59:26,483 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:59:26,486 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:59:26,489 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:59:26,498 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 10:59:26,538 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:59:26,541 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:59:26,547 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 10:59:26,576 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:59:26,579 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:59:26,585 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 10:59:26,596 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 10:59:26,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:59:26,627 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:59:26,633 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 10:59:26,636 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 10:59:26,639 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 10:59:26,641 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 10:59:26,645 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 10:59:26,647 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 10:59:26,650 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 10:59:26,653 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-21-2013 10:59:26,795 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 10:59:26,851 PM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-21-2013 10:59:26,868 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 10:59:26,881 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 10:59:26,968 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:59:26,975 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:59:26,984 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:59:26,987 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:59:26,998 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:59:27,006 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:59:27,027 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:59:27,033 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:59:27,039 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:59:27,044 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:59:27,050 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:59:27,056 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:59:27,061 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:59:27,069 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:59:27,077 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:59:27,096 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:59:27,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:59:27,101 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 10:59:27,104 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7b6643
04-21-2013 10:59:27,107 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@688c4a77
04-21-2013 10:59:27,110 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@b035079
04-21-2013 10:59:27,113 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:59:27,116 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:59:27,119 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 10:59:27,121 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:59:27,124 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:59:27,129 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 10:59:27,132 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:59:27,135 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:59:27,137 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 10:59:27,140 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:59:27,143 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:59:27,145 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 10:59:27,148 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:59:27,151 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:59:27,154 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 10:59:27,157 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:59:27,160 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:59:27,165 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 10:59:27,168 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:59:27,170 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:59:27,173 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 10:59:27,177 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:59:27,180 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 10:59:27,183 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:59:27,186 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 10:59:27,189 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@37722456
04-21-2013 10:59:27,192 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37722456
04-21-2013 10:59:27,197 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:59:27,199 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@29f01a29
04-21-2013 10:59:27,202 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:59:27,204 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ecd78
04-21-2013 10:59:27,207 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:59:27,210 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@583a5794
04-21-2013 10:59:27,214 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:59:27,217 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:59:27,219 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 10:59:27,222 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4929b0e1
04-21-2013 10:59:27,225 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:59:27,227 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:59:27,230 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 10:59:27,233 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53d439fe
04-21-2013 10:59:27,235 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:59:27,238 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 10:59:27,240 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:59:27,243 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 10:59:27,246 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:59:27,248 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 10:59:27,251 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:59:27,254 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 10:59:27,256 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:59:27,259 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 10:59:27,263 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45e67e6a
04-21-2013 10:59:27,267 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@42f1916f
04-21-2013 10:59:27,269 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:59:27,272 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:59:27,275 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 10:59:27,278 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:59:27,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:59:27,284 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 10:59:27,287 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 10:59:27,290 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:59:27,294 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:59:27,297 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 10:59:27,300 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:59:27,302 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:59:27,306 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 10:59:27,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 10:59:27,314 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:59:27,319 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 10:59:27,321 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 10:59:27,324 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:59:27,327 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 10:59:27,330 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 10:59:27,333 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 10:59:27,335 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:59:27,338 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 10:59:27,341 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 10:59:27,344 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 10:59:27,347 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 10:59:27,349 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 10:59:27,352 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 10:59:27,355 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 10:59:27,358 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 10:59:27,361 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 10:59:27,366 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 10:59:27,369 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 10:59:27,372 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:59:27,375 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 10:59:27,378 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 10:59:27,381 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 10:59:27,384 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 10:59:27,387 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 10:59:27,390 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 10:59:27,393 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 10:59:27,396 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 10:59:27,399 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 10:59:27,402 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 10:59:27,404 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 10:59:27,407 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 10:59:27,410 PM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-21-2013 10:59:27,917 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 10:59:27,975 PM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 10:59:27,982 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-21-2013 10:59:28,184 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-21-2013 10:59:28,262 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 10:59:28,271 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 10:59:28,304 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 10:59:28,307 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 10:59:28,315 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 10:59:28,353 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 10:59:28,355 PM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-21-2013 10:59:28,405 PM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 10:59:28,485 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 10:59:28,488 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 10:59:28,705 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 10:59:28,784 PM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-21-2013 10:59:29,043 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 10:59:29,045 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 10:59:29,072 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 10:59:29,288 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:59:29,307 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:59:29,364 PM DEBUG EntityBinder:354 - Import with entity name Contact
04-21-2013 10:59:29,399 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 10:59:29,643 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,674 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 10:59:29,693 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-21-2013 10:59:29,704 PM DEBUG PropertyBinder:256 - Building property partyId
04-21-2013 10:59:29,731 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,735 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 10:59:29,737 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-21-2013 10:59:29,740 PM DEBUG PropertyBinder:256 - Building property address1
04-21-2013 10:59:29,743 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,747 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 10:59:29,749 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-21-2013 10:59:29,753 PM DEBUG PropertyBinder:256 - Building property address2
04-21-2013 10:59:29,759 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,764 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 10:59:29,767 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-21-2013 10:59:29,770 PM DEBUG PropertyBinder:256 - Building property address3
04-21-2013 10:59:29,774 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,778 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 10:59:29,781 PM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-21-2013 10:59:29,784 PM DEBUG PropertyBinder:256 - Building property channel
04-21-2013 10:59:29,788 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,792 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 10:59:29,795 PM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-21-2013 10:59:29,798 PM DEBUG PropertyBinder:256 - Building property countryCode
04-21-2013 10:59:29,802 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,806 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-21-2013 10:59:29,809 PM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-21-2013 10:59:29,814 PM DEBUG PropertyBinder:256 - Building property email
04-21-2013 10:59:29,821 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,827 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 10:59:29,832 PM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-21-2013 10:59:29,836 PM DEBUG PropertyBinder:256 - Building property fax
04-21-2013 10:59:29,839 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,845 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 10:59:29,849 PM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-21-2013 10:59:29,852 PM DEBUG PropertyBinder:256 - Building property firstname
04-21-2013 10:59:29,856 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,862 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 10:59:29,867 PM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-21-2013 10:59:29,872 PM DEBUG PropertyBinder:256 - Building property lastname
04-21-2013 10:59:29,875 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,879 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-21-2013 10:59:29,884 PM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-21-2013 10:59:29,888 PM DEBUG PropertyBinder:256 - Building property login
04-21-2013 10:59:29,892 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,896 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 10:59:29,900 PM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-21-2013 10:59:29,904 PM DEBUG PropertyBinder:256 - Building property mobile
04-21-2013 10:59:29,910 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,917 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 10:59:29,920 PM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-21-2013 10:59:29,923 PM DEBUG PropertyBinder:256 - Building property organisation
04-21-2013 10:59:29,926 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,932 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 10:59:29,935 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-21-2013 10:59:29,938 PM DEBUG PropertyBinder:256 - Building property partyType
04-21-2013 10:59:29,941 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,944 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 10:59:29,947 PM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-21-2013 10:59:29,950 PM DEBUG PropertyBinder:256 - Building property phone
04-21-2013 10:59:29,953 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,958 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 10:59:29,960 PM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-21-2013 10:59:29,963 PM DEBUG PropertyBinder:256 - Building property postcode
04-21-2013 10:59:29,967 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,971 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-21-2013 10:59:29,973 PM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-21-2013 10:59:29,976 PM DEBUG PropertyBinder:256 - Building property state
04-21-2013 10:59:29,979 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,983 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-21-2013 10:59:29,985 PM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-21-2013 10:59:29,988 PM DEBUG PropertyBinder:256 - Building property status
04-21-2013 10:59:29,991 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:29,995 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 10:59:29,997 PM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-21-2013 10:59:30,000 PM DEBUG PropertyBinder:256 - Building property suburb
04-21-2013 10:59:30,003 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,006 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-21-2013 10:59:30,009 PM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-21-2013 10:59:30,014 PM DEBUG PropertyBinder:256 - Building property type
04-21-2013 10:59:30,029 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 10:59:30,033 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:59:30,035 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:59:30,038 PM DEBUG EntityBinder:354 - Import with entity name EntityA
04-21-2013 10:59:30,040 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 10:59:30,200 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,204 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:59:30,206 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 10:59:30,208 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 10:59:30,214 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:59:30,218 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,231 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,322 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,334 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,346 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 10:59:30,361 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:59:30,367 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 10:59:30,374 PM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 10:59:30,407 PM DEBUG PropertyBinder:256 - Building property entities
04-21-2013 10:59:30,416 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,422 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:59:30,425 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 10:59:30,429 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 10:59:30,434 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 10:59:30,440 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 10:59:30,445 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 10:59:30,450 PM DEBUG EntityBinder:354 - Import with entity name EntityB
04-21-2013 10:59:30,453 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 10:59:30,501 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,505 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 10:59:30,507 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 10:59:30,509 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 10:59:30,513 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 10:59:30,517 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,531 PM DEBUG PropertyBinder:256 - Building property entityA
04-21-2013 10:59:30,534 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 10:59:30,538 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 10:59:30,541 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 10:59:30,543 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 10:59:30,549 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-21-2013 10:59:30,551 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-21-2013 10:59:30,553 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-21-2013 10:59:30,556 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-21-2013 10:59:30,558 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-21-2013 10:59:30,560 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-21-2013 10:59:30,564 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-21-2013 10:59:30,568 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-21-2013 10:59:30,572 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-21-2013 10:59:30,575 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-21-2013 10:59:30,578 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-21-2013 10:59:30,581 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-21-2013 10:59:30,583 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-21-2013 10:59:30,586 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-21-2013 10:59:30,588 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-21-2013 10:59:30,590 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-21-2013 10:59:30,592 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-21-2013 10:59:30,594 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-21-2013 10:59:30,597 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-21-2013 10:59:30,599 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-21-2013 10:59:30,602 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 10:59:30,604 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 10:59:30,609 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 10:59:30,613 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 10:59:30,620 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 10:59:30,653 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 10:59:30,656 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 10:59:30,659 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 10:59:30,661 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 10:59:30,669 PM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 10:59:30,675 PM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 10:59:30,686 PM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 10:59:30,690 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 10:59:30,693 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 10:59:30,695 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 10:59:30,697 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 10:59:30,699 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 10:59:30,776 PM  WARN ConnectionProviderInitiator:176 - HHH000208: org.hibernate.connection.C3P0ConnectionProvider has been deprecated in favor of org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider; that provider will be used instead.
04-21-2013 10:59:30,780 PM  INFO ConnectionProviderInitiator:186 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 10:59:30,847 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01
04-21-2013 10:59:30,853 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 10:59:30,856 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 10:59:31,650 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 10:59:32,275 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 10:59:32,486 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucik8uv19z7k1j|dbb205a] registered.
04-21-2013 10:59:32,679 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucik8uv19z7k1j|dbb205a] unregistered, in order to be reregistered after update.
04-21-2013 10:59:32,682 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucik8uv19z7k1j|dbb205a] registered.
04-21-2013 10:59:33,063 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@6a3861a0 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@4ff5c264 [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8ucik8uv19z7k1j|6487cd5c, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@872b8284 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucik8uv19z7k1j|1867ec28, jdbcUrl -> jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucik8uv19z7k1j|dbb205a, numHelperThreads -> 3 ]
04-21-2013 10:59:33,188 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 10:59:33,191 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 10:59:33,193 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 10:59:33,197 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 10:59:33,200 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 10:59:33,204 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@313816e0 config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 10:59:33,208 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:33,208 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:33,208 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:33,210 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 10:59:33,225 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 10:59:33,227 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@313816e0 [managed: 0, unused: 0, excluded: 0]
04-21-2013 10:59:34,230 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:34,231 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:34,230 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:35,234 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:35,236 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:35,237 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:36,236 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:36,252 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 10:59:36,260 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:08,600 PM  INFO Main2:28 - demo begins...
04-21-2013 11:02:09,446 PM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 11:02:09,659 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 11:02:09,672 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 11:02:09,674 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 11:02:09,683 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 11:02:09,693 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 11:02:09,699 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 11:02:09,712 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 11:02:09,715 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 11:02:09,718 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 11:02:09,726 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 11:02:09,729 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 11:02:09,732 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 11:02:09,745 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 11:02:09,748 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 11:02:09,769 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 11:02:09,778 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 11:02:09,783 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 11:02:09,786 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 11:02:09,798 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 11:02:09,801 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 11:02:09,803 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 11:02:09,817 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 11:02:09,820 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 11:02:09,822 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 11:02:09,834 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 11:02:09,836 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 11:02:09,839 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 11:02:09,853 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 11:02:09,856 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 11:02:09,866 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 11:02:09,868 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 11:02:09,876 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 11:02:09,879 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 11:02:09,889 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 11:02:09,892 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 11:02:09,908 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 11:02:09,911 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 11:02:09,923 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 11:02:09,926 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 11:02:09,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 11:02:09,943 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 11:02:09,946 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 11:02:09,956 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 11:02:09,966 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 11:02:09,971 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 11:02:09,975 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 11:02:09,985 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 11:02:09,995 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 11:02:09,998 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 11:02:10,007 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 11:02:10,010 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 11:02:10,019 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 11:02:10,022 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 11:02:10,030 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 11:02:10,033 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 11:02:10,047 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 11:02:10,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 11:02:10,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 11:02:10,064 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 11:02:10,073 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 11:02:10,075 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 11:02:10,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 11:02:10,086 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 11:02:10,089 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 11:02:10,092 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 11:02:10,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 11:02:10,109 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 11:02:10,112 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 11:02:10,114 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 11:02:10,123 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 11:02:10,126 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 11:02:10,128 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 11:02:10,136 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 11:02:10,174 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:02:10,177 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:02:10,184 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 11:02:10,213 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:02:10,216 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:02:10,222 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 11:02:10,231 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 11:02:10,251 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:02:10,253 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:02:10,259 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 11:02:10,261 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 11:02:10,264 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 11:02:10,267 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 11:02:10,270 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 11:02:10,273 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 11:02:10,278 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 11:02:10,284 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-21-2013 11:02:10,430 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 11:02:10,482 PM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-21-2013 11:02:10,496 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 11:02:10,511 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 11:02:10,594 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:02:10,600 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:02:10,607 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:02:10,610 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:02:10,624 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:02:10,631 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:02:10,643 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:02:10,648 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:02:10,654 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:02:10,659 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:02:10,665 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:02:10,670 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:02:10,676 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:02:10,682 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:02:10,688 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:02:10,706 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 11:02:10,709 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 11:02:10,712 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@558352d8
04-21-2013 11:02:10,714 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ea45536
04-21-2013 11:02:10,717 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@722b9406
04-21-2013 11:02:10,720 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f30494
04-21-2013 11:02:10,723 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 11:02:10,725 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 11:02:10,728 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@214a7a12
04-21-2013 11:02:10,731 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 11:02:10,734 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 11:02:10,736 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49d8c528
04-21-2013 11:02:10,739 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 11:02:10,742 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 11:02:10,744 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@670fe2b9
04-21-2013 11:02:10,747 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 11:02:10,750 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 11:02:10,753 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bc16f0
04-21-2013 11:02:10,757 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 11:02:10,761 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@43a6684f
04-21-2013 11:02:10,765 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a6684f
04-21-2013 11:02:10,769 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 11:02:10,772 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 11:02:10,774 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ca522a6
04-21-2013 11:02:10,777 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 11:02:10,779 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 11:02:10,782 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ba8773c
04-21-2013 11:02:10,785 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 11:02:10,787 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fa4ded3
04-21-2013 11:02:10,790 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 11:02:10,793 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf01771
04-21-2013 11:02:10,796 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@55dec1dd
04-21-2013 11:02:10,798 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55dec1dd
04-21-2013 11:02:10,802 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@54c01e99
04-21-2013 11:02:10,804 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54c01e99
04-21-2013 11:02:10,807 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 11:02:10,810 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b1756a4
04-21-2013 11:02:10,812 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 11:02:10,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4816ef71
04-21-2013 11:02:10,818 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 11:02:10,821 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@627a4489
04-21-2013 11:02:10,824 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@627a4489
04-21-2013 11:02:10,826 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48082751
04-21-2013 11:02:10,829 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 11:02:10,831 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 11:02:10,834 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f855562
04-21-2013 11:02:10,837 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6548f8c8
04-21-2013 11:02:10,839 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 11:02:10,842 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d2368df
04-21-2013 11:02:10,845 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 11:02:10,847 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a19458
04-21-2013 11:02:10,850 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 11:02:10,852 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656dc861
04-21-2013 11:02:10,855 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5097d026
04-21-2013 11:02:10,857 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5097d026
04-21-2013 11:02:10,860 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 11:02:10,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a969c29
04-21-2013 11:02:10,866 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6ed322
04-21-2013 11:02:10,871 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4bf54c5f
04-21-2013 11:02:10,876 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@79884a40
04-21-2013 11:02:10,880 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@79884a40
04-21-2013 11:02:10,885 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@79884a40
04-21-2013 11:02:10,889 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 11:02:10,892 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 11:02:10,895 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b49105b
04-21-2013 11:02:10,898 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@71bfc4fc
04-21-2013 11:02:10,900 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 11:02:10,903 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 11:02:10,906 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a083b1b
04-21-2013 11:02:10,908 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 11:02:10,911 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 11:02:10,914 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75843a75
04-21-2013 11:02:10,916 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@35f03691
04-21-2013 11:02:10,919 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:02:10,922 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:02:10,924 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 11:02:10,927 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:02:10,930 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:02:10,932 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 11:02:10,935 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 11:02:10,938 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:02:10,940 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:02:10,944 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 11:02:10,947 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 11:02:10,949 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 11:02:10,952 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 11:02:10,955 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 11:02:10,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 11:02:10,960 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 11:02:10,963 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 11:02:10,967 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:02:10,970 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:02:10,973 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:02:10,975 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:02:10,978 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:02:10,981 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:02:10,985 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:02:10,987 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:02:10,990 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:02:10,995 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:02:10,999 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:02:11,005 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:02:11,009 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:02:11,013 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:02:11,015 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:02:11,018 PM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-21-2013 11:02:11,476 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:02:11,523 PM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 11:02:11,530 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-21-2013 11:02:11,698 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-21-2013 11:02:11,767 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 11:02:11,772 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 11:02:11,798 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 11:02:11,801 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 11:02:11,809 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 11:02:11,844 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:02:11,847 PM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-21-2013 11:02:11,887 PM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 11:02:11,953 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 11:02:11,956 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 11:02:12,135 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 11:02:12,203 PM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-21-2013 11:02:12,443 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 11:02:12,445 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 11:02:12,469 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 11:02:12,638 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:02:12,654 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:02:12,702 PM DEBUG EntityBinder:354 - Import with entity name Contact
04-21-2013 11:02:12,727 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 11:02:12,947 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:12,972 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 11:02:12,989 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-21-2013 11:02:12,998 PM DEBUG PropertyBinder:256 - Building property partyId
04-21-2013 11:02:13,022 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,026 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 11:02:13,028 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-21-2013 11:02:13,031 PM DEBUG PropertyBinder:256 - Building property address1
04-21-2013 11:02:13,034 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,038 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 11:02:13,040 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-21-2013 11:02:13,043 PM DEBUG PropertyBinder:256 - Building property address2
04-21-2013 11:02:13,046 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,050 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 11:02:13,053 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-21-2013 11:02:13,056 PM DEBUG PropertyBinder:256 - Building property address3
04-21-2013 11:02:13,060 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,064 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 11:02:13,066 PM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-21-2013 11:02:13,069 PM DEBUG PropertyBinder:256 - Building property channel
04-21-2013 11:02:13,072 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,076 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 11:02:13,078 PM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-21-2013 11:02:13,081 PM DEBUG PropertyBinder:256 - Building property countryCode
04-21-2013 11:02:13,084 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,087 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-21-2013 11:02:13,090 PM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-21-2013 11:02:13,092 PM DEBUG PropertyBinder:256 - Building property email
04-21-2013 11:02:13,095 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,099 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 11:02:13,101 PM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-21-2013 11:02:13,104 PM DEBUG PropertyBinder:256 - Building property fax
04-21-2013 11:02:13,107 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,111 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 11:02:13,113 PM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-21-2013 11:02:13,116 PM DEBUG PropertyBinder:256 - Building property firstname
04-21-2013 11:02:13,119 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,122 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 11:02:13,125 PM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-21-2013 11:02:13,127 PM DEBUG PropertyBinder:256 - Building property lastname
04-21-2013 11:02:13,130 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,134 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-21-2013 11:02:13,136 PM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-21-2013 11:02:13,139 PM DEBUG PropertyBinder:256 - Building property login
04-21-2013 11:02:13,142 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,146 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 11:02:13,148 PM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-21-2013 11:02:13,151 PM DEBUG PropertyBinder:256 - Building property mobile
04-21-2013 11:02:13,156 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,163 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 11:02:13,167 PM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-21-2013 11:02:13,172 PM DEBUG PropertyBinder:256 - Building property organisation
04-21-2013 11:02:13,176 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,181 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 11:02:13,184 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-21-2013 11:02:13,186 PM DEBUG PropertyBinder:256 - Building property partyType
04-21-2013 11:02:13,190 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,194 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 11:02:13,196 PM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-21-2013 11:02:13,198 PM DEBUG PropertyBinder:256 - Building property phone
04-21-2013 11:02:13,201 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,205 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 11:02:13,208 PM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-21-2013 11:02:13,210 PM DEBUG PropertyBinder:256 - Building property postcode
04-21-2013 11:02:13,213 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,217 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-21-2013 11:02:13,219 PM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-21-2013 11:02:13,222 PM DEBUG PropertyBinder:256 - Building property state
04-21-2013 11:02:13,225 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,229 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-21-2013 11:02:13,231 PM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-21-2013 11:02:13,234 PM DEBUG PropertyBinder:256 - Building property status
04-21-2013 11:02:13,237 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,240 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 11:02:13,243 PM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-21-2013 11:02:13,245 PM DEBUG PropertyBinder:256 - Building property suburb
04-21-2013 11:02:13,248 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,252 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-21-2013 11:02:13,254 PM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-21-2013 11:02:13,257 PM DEBUG PropertyBinder:256 - Building property type
04-21-2013 11:02:13,269 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 11:02:13,272 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:02:13,274 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:02:13,280 PM DEBUG EntityBinder:354 - Import with entity name EntityA
04-21-2013 11:02:13,284 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 11:02:13,443 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,464 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:02:13,467 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:02:13,469 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:02:13,475 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:02:13,478 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,491 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,572 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,580 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,592 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 11:02:13,607 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:02:13,610 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:02:13,614 PM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 11:02:13,649 PM DEBUG PropertyBinder:256 - Building property entities
04-21-2013 11:02:13,654 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,659 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:02:13,661 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:02:13,664 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:02:13,667 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 11:02:13,671 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:02:13,675 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:02:13,680 PM DEBUG EntityBinder:354 - Import with entity name EntityB
04-21-2013 11:02:13,684 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 11:02:13,736 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,743 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:02:13,747 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:02:13,751 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:02:13,756 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 11:02:13,759 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,774 PM DEBUG PropertyBinder:256 - Building property entityA
04-21-2013 11:02:13,779 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:02:13,786 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:02:13,790 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:02:13,792 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:02:13,798 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-21-2013 11:02:13,801 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-21-2013 11:02:13,803 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-21-2013 11:02:13,806 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-21-2013 11:02:13,808 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-21-2013 11:02:13,811 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-21-2013 11:02:13,813 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-21-2013 11:02:13,815 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-21-2013 11:02:13,817 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-21-2013 11:02:13,821 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-21-2013 11:02:13,824 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-21-2013 11:02:13,827 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-21-2013 11:02:13,829 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-21-2013 11:02:13,831 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-21-2013 11:02:13,833 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-21-2013 11:02:13,835 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-21-2013 11:02:13,838 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-21-2013 11:02:13,840 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-21-2013 11:02:13,843 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-21-2013 11:02:13,846 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-21-2013 11:02:13,848 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:02:13,850 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:02:13,852 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:02:13,855 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:02:13,860 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 11:02:13,887 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 11:02:13,889 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 11:02:13,891 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 11:02:13,893 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:02:13,899 PM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 11:02:13,906 PM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 11:02:13,917 PM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 11:02:13,922 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 11:02:13,925 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 11:02:13,927 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 11:02:13,929 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 11:02:13,931 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 11:02:14,001 PM  INFO ConnectionProviderInitiator:186 - HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
04-21-2013 11:02:14,060 PM  INFO C3P0ConnectionProvider:128 - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01
04-21-2013 11:02:14,065 PM  INFO C3P0ConnectionProvider:129 - HHH000046: Connection properties: {user=vzwmme, password=****, autocommit=false, release_mode=auto}
04-21-2013 11:02:14,067 PM  INFO C3P0ConnectionProvider:132 - HHH000006: Autocommit mode: false
04-21-2013 11:02:14,793 PM  INFO MLog:80 - MLog clients using log4j logging.
04-21-2013 11:02:15,336 PM  INFO C3P0Registry:204 - Initializing c3p0-0.9.1 [built 16-January-2007 14:46:42; debug? true; trace: 10]
04-21-2013 11:02:15,531 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucinqpla076p2|5fb7565] registered.
04-21-2013 11:02:15,707 PM DEBUG DynamicPooledDataSourceManagerMBean:231 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucinqpla076p2|5fb7565] unregistered, in order to be reregistered after update.
04-21-2013 11:02:15,710 PM DEBUG DynamicPooledDataSourceManagerMBean:235 - MBean: com.mchange.v2.c3p0:type=PooledDataSource[ux3gis8ucinqpla076p2|5fb7565] registered.
04-21-2013 11:02:16,060 PM  INFO AbstractPoolBackedDataSource:462 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@e15995da [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@ade73664 [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> ux3gis8ucinqpla076p2|39849daf, idleConnectionTestPeriod -> 100, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 100, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@87c5a785 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucinqpla076p2|1925d92c, jdbcUrl -> jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01, properties -> {user=******, password=******, autocommit=false, release_mode=auto} ], preferredTestQuery -> null, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> ux3gis8ucinqpla076p2|5fb7565, numHelperThreads -> 3 ]
04-21-2013 11:02:16,160 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 1
04-21-2013 11:02:16,163 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 2
04-21-2013 11:02:16,165 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 3
04-21-2013 11:02:16,167 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 4
04-21-2013 11:02:16,170 PM DEBUG BasicResourcePool:404 - incremented pending_acquires: 5
04-21-2013 11:02:16,174 PM DEBUG BasicResourcePool:289 - com.mchange.v2.resourcepool.BasicResourcePool@633e6346 config: [start -> 3; min -> 5; max -> 50; inc -> 5; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 100000; mox_resource_age -> 0; max_idle_time -> 100000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 25000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
04-21-2013 11:02:16,177 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:16,177 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:16,178 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:16,180 PM DEBUG BasicResourcePool:538 - acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
04-21-2013 11:02:16,191 PM DEBUG BasicResourcePool:1291 - awaitAvailable(): [unknown]
04-21-2013 11:02:16,193 PM DEBUG BasicResourcePool:1644 - trace com.mchange.v2.resourcepool.BasicResourcePool@633e6346 [managed: 0, unused: 0, excluded: 0]
04-21-2013 11:02:17,196 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:17,197 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:17,196 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:18,198 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:18,200 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:02:18,201 PM DEBUG BasicResourcePool:1831 - An exception occurred while acquiring a poolable resource. Will retry.
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getDriver(DriverManager.java:264)
	at com.mchange.v2.c3p0.DriverManagerDataSource.driver(DriverManagerDataSource.java:224)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
04-21-2013 11:05:20,850 PM  INFO Main2:28 - demo begins...
04-21-2013 11:05:21,356 PM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 11:05:21,566 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 11:05:21,578 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 11:05:21,581 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 11:05:21,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26d66426
04-21-2013 11:05:21,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b035079
04-21-2013 11:05:21,605 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7eb1cc87
04-21-2013 11:05:21,619 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 11:05:21,622 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 11:05:21,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 11:05:21,633 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 11:05:21,636 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 11:05:21,638 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 11:05:21,652 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 11:05:21,654 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 11:05:21,675 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 11:05:21,685 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 11:05:21,688 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 11:05:21,691 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 11:05:21,702 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 11:05:21,705 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 11:05:21,708 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 11:05:21,721 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 11:05:21,724 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 11:05:21,726 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d860038
04-21-2013 11:05:21,737 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 11:05:21,740 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 11:05:21,742 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 11:05:21,756 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 11:05:21,759 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 11:05:21,768 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 11:05:21,771 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 11:05:21,779 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@1389c036
04-21-2013 11:05:21,781 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1389c036
04-21-2013 11:05:21,790 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1118fa47
04-21-2013 11:05:21,793 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1118fa47
04-21-2013 11:05:21,812 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@193936e1
04-21-2013 11:05:21,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@193936e1
04-21-2013 11:05:21,827 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 11:05:21,830 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 11:05:21,845 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 11:05:21,848 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 11:05:21,851 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 11:05:21,863 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f4d5bc9
04-21-2013 11:05:21,873 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 11:05:21,876 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 11:05:21,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 11:05:21,888 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19c5466b
04-21-2013 11:05:21,898 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 11:05:21,901 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 11:05:21,910 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 11:05:21,913 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 11:05:21,922 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 11:05:21,925 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 11:05:21,935 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 11:05:21,938 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 11:05:21,951 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 11:05:21,953 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 11:05:21,959 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6fe78c96
04-21-2013 11:05:21,966 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@556917ee
04-21-2013 11:05:21,975 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 11:05:21,978 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 11:05:21,981 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 11:05:21,989 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 11:05:21,991 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 11:05:21,994 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 11:05:22,001 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 11:05:22,009 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 11:05:22,012 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 11:05:22,015 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 11:05:22,023 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 11:05:22,026 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 11:05:22,029 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 11:05:22,038 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 11:05:22,075 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:05:22,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:05:22,084 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 11:05:22,112 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:05:22,115 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:05:22,120 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 11:05:22,129 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 11:05:22,150 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:05:22,153 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:05:22,158 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 11:05:22,161 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 11:05:22,164 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 11:05:22,167 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 11:05:22,170 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 11:05:22,173 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 11:05:22,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 11:05:22,179 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-21-2013 11:05:22,310 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 11:05:22,362 PM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-21-2013 11:05:22,377 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 11:05:22,389 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 11:05:22,473 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:05:22,478 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:05:22,487 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:05:22,490 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:05:22,501 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:05:22,507 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:05:22,519 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:05:22,524 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:05:22,530 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:05:22,535 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:05:22,541 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:05:22,547 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:05:22,552 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:05:22,558 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:05:22,564 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:05:22,582 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 11:05:22,585 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 11:05:22,589 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@20b40ec4
04-21-2013 11:05:22,591 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26d66426
04-21-2013 11:05:22,593 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b035079
04-21-2013 11:05:22,595 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7eb1cc87
04-21-2013 11:05:22,599 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 11:05:22,602 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 11:05:22,604 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@209444d1
04-21-2013 11:05:22,607 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 11:05:22,610 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 11:05:22,612 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3677eaf8
04-21-2013 11:05:22,616 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 11:05:22,618 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 11:05:22,621 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@43ee148b
04-21-2013 11:05:22,624 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 11:05:22,626 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 11:05:22,629 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f8622f3
04-21-2013 11:05:22,632 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 11:05:22,635 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 11:05:22,638 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@620a3d3b
04-21-2013 11:05:22,642 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 11:05:22,646 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@3d860038
04-21-2013 11:05:22,650 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d860038
04-21-2013 11:05:22,654 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 11:05:22,656 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 11:05:22,659 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@112c3327
04-21-2013 11:05:22,662 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 11:05:22,665 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5121177e
04-21-2013 11:05:22,668 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 11:05:22,671 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76933bcb
04-21-2013 11:05:22,673 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@1389c036
04-21-2013 11:05:22,676 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1389c036
04-21-2013 11:05:22,678 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1118fa47
04-21-2013 11:05:22,681 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1118fa47
04-21-2013 11:05:22,684 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@193936e1
04-21-2013 11:05:22,687 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@193936e1
04-21-2013 11:05:22,689 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 11:05:22,692 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59c208b0
04-21-2013 11:05:22,695 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 11:05:22,697 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 11:05:22,700 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4929b0e1
04-21-2013 11:05:22,702 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f4d5bc9
04-21-2013 11:05:22,705 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 11:05:22,708 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 11:05:22,710 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7aa89ce3
04-21-2013 11:05:22,713 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19c5466b
04-21-2013 11:05:22,716 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 11:05:22,718 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fba0f36
04-21-2013 11:05:22,721 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 11:05:22,723 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47124746
04-21-2013 11:05:22,726 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 11:05:22,728 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a7e8c4d
04-21-2013 11:05:22,731 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 11:05:22,733 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ee29820
04-21-2013 11:05:22,736 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 11:05:22,739 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45e67e6a
04-21-2013 11:05:22,742 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6fe78c96
04-21-2013 11:05:22,747 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@556917ee
04-21-2013 11:05:22,751 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 11:05:22,754 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 11:05:22,756 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@62c2ee15
04-21-2013 11:05:22,760 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 11:05:22,763 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 11:05:22,766 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59d0d45b
04-21-2013 11:05:22,768 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@651db6bb
04-21-2013 11:05:22,771 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72608760
04-21-2013 11:05:22,773 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72608760
04-21-2013 11:05:22,776 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72608760
04-21-2013 11:05:22,778 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 11:05:22,781 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 11:05:22,784 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c1a1399
04-21-2013 11:05:22,786 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2d8e8541
04-21-2013 11:05:22,789 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:05:22,792 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3219762f
04-21-2013 11:05:22,794 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5470be88
04-21-2013 11:05:22,797 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:05:22,799 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@508aeb74
04-21-2013 11:05:22,802 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28bb494b
04-21-2013 11:05:22,804 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@43684706
04-21-2013 11:05:22,807 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:05:22,810 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68302e67
04-21-2013 11:05:22,812 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 11:05:22,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 11:05:22,818 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 11:05:22,821 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 11:05:22,824 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 11:05:22,826 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 11:05:22,829 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 11:05:22,832 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 11:05:22,837 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:05:22,839 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:05:22,842 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:05:22,844 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:05:22,847 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:05:22,850 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:05:22,852 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:05:22,855 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:05:22,858 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:05:22,862 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:05:22,865 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:05:22,869 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:05:22,874 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:05:22,878 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:05:22,881 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:05:22,884 PM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-21-2013 11:05:23,316 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:05:23,363 PM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 11:05:23,370 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-21-2013 11:05:23,541 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-21-2013 11:05:23,611 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 11:05:23,616 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 11:05:23,642 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 11:05:23,645 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 11:05:23,654 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 11:05:23,689 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:05:23,691 PM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-21-2013 11:05:23,734 PM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 11:05:23,797 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 11:05:23,800 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 11:05:23,976 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 11:05:24,042 PM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-21-2013 11:05:24,278 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 11:05:24,280 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 11:05:24,305 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 11:05:24,459 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:05:24,474 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:05:24,523 PM DEBUG EntityBinder:354 - Import with entity name Contact
04-21-2013 11:05:24,548 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 11:05:24,762 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,787 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 11:05:24,804 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-21-2013 11:05:24,813 PM DEBUG PropertyBinder:256 - Building property partyId
04-21-2013 11:05:24,836 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,840 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 11:05:24,842 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-21-2013 11:05:24,845 PM DEBUG PropertyBinder:256 - Building property address1
04-21-2013 11:05:24,848 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,852 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 11:05:24,854 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-21-2013 11:05:24,857 PM DEBUG PropertyBinder:256 - Building property address2
04-21-2013 11:05:24,860 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,863 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 11:05:24,866 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-21-2013 11:05:24,868 PM DEBUG PropertyBinder:256 - Building property address3
04-21-2013 11:05:24,872 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,875 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 11:05:24,878 PM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-21-2013 11:05:24,880 PM DEBUG PropertyBinder:256 - Building property channel
04-21-2013 11:05:24,883 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,887 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 11:05:24,889 PM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-21-2013 11:05:24,892 PM DEBUG PropertyBinder:256 - Building property countryCode
04-21-2013 11:05:24,895 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,898 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-21-2013 11:05:24,901 PM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-21-2013 11:05:24,903 PM DEBUG PropertyBinder:256 - Building property email
04-21-2013 11:05:24,906 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,910 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 11:05:24,912 PM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-21-2013 11:05:24,915 PM DEBUG PropertyBinder:256 - Building property fax
04-21-2013 11:05:24,918 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,922 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 11:05:24,924 PM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-21-2013 11:05:24,927 PM DEBUG PropertyBinder:256 - Building property firstname
04-21-2013 11:05:24,930 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,933 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 11:05:24,936 PM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-21-2013 11:05:24,938 PM DEBUG PropertyBinder:256 - Building property lastname
04-21-2013 11:05:24,941 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,945 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-21-2013 11:05:24,947 PM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-21-2013 11:05:24,950 PM DEBUG PropertyBinder:256 - Building property login
04-21-2013 11:05:24,953 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,956 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 11:05:24,959 PM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-21-2013 11:05:24,961 PM DEBUG PropertyBinder:256 - Building property mobile
04-21-2013 11:05:24,964 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,971 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 11:05:24,976 PM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-21-2013 11:05:24,980 PM DEBUG PropertyBinder:256 - Building property organisation
04-21-2013 11:05:24,985 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:24,989 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 11:05:24,992 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-21-2013 11:05:24,995 PM DEBUG PropertyBinder:256 - Building property partyType
04-21-2013 11:05:24,998 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,003 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 11:05:25,005 PM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-21-2013 11:05:25,008 PM DEBUG PropertyBinder:256 - Building property phone
04-21-2013 11:05:25,011 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,015 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 11:05:25,017 PM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-21-2013 11:05:25,020 PM DEBUG PropertyBinder:256 - Building property postcode
04-21-2013 11:05:25,023 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,027 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-21-2013 11:05:25,029 PM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-21-2013 11:05:25,031 PM DEBUG PropertyBinder:256 - Building property state
04-21-2013 11:05:25,035 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,038 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-21-2013 11:05:25,041 PM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-21-2013 11:05:25,043 PM DEBUG PropertyBinder:256 - Building property status
04-21-2013 11:05:25,046 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,050 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 11:05:25,052 PM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-21-2013 11:05:25,055 PM DEBUG PropertyBinder:256 - Building property suburb
04-21-2013 11:05:25,058 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,061 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-21-2013 11:05:25,064 PM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-21-2013 11:05:25,066 PM DEBUG PropertyBinder:256 - Building property type
04-21-2013 11:05:25,078 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 11:05:25,081 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:05:25,083 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:05:25,086 PM DEBUG EntityBinder:354 - Import with entity name EntityA
04-21-2013 11:05:25,089 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 11:05:25,231 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,235 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:05:25,237 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:05:25,240 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:05:25,245 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:05:25,248 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,259 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,341 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,348 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,357 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 11:05:25,367 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:05:25,370 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:05:25,375 PM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 11:05:25,396 PM DEBUG PropertyBinder:256 - Building property entities
04-21-2013 11:05:25,400 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,404 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:05:25,407 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:05:25,410 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:05:25,413 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 11:05:25,418 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:05:25,422 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:05:25,427 PM DEBUG EntityBinder:354 - Import with entity name EntityB
04-21-2013 11:05:25,431 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 11:05:25,488 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,493 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:05:25,495 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:05:25,497 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:05:25,501 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 11:05:25,504 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,518 PM DEBUG PropertyBinder:256 - Building property entityA
04-21-2013 11:05:25,521 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:05:25,525 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:05:25,528 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:05:25,530 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:05:25,536 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-21-2013 11:05:25,538 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-21-2013 11:05:25,540 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-21-2013 11:05:25,543 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-21-2013 11:05:25,545 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-21-2013 11:05:25,547 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-21-2013 11:05:25,549 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-21-2013 11:05:25,552 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-21-2013 11:05:25,554 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-21-2013 11:05:25,556 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-21-2013 11:05:25,561 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-21-2013 11:05:25,565 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-21-2013 11:05:25,569 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-21-2013 11:05:25,571 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-21-2013 11:05:25,574 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-21-2013 11:05:25,576 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-21-2013 11:05:25,580 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-21-2013 11:05:25,583 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-21-2013 11:05:25,588 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-21-2013 11:05:25,590 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-21-2013 11:05:25,592 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:05:25,595 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:05:25,597 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:05:25,599 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:05:25,606 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 11:05:25,635 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 11:05:25,636 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 11:05:25,638 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 11:05:25,641 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:05:25,647 PM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 11:05:25,653 PM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 11:05:25,663 PM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 11:05:25,666 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 11:05:25,668 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 11:05:25,670 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 11:05:25,672 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 11:05:25,674 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 11:05:25,758 PM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-21-2013 11:05:26,380 PM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-21-2013 11:05:26,384 PM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-21-2013 11:05:26,388 PM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01]
04-21-2013 11:05:26,392 PM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-21-2013 11:05:26,524 PM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-21-2013 11:05:26,528 PM  WARN JdbcServicesImpl:171 - HHH000342: Could not obtain connection to query metadata : Invalid Oracle URL specified
04-21-2013 11:05:26,586 PM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-21-2013 11:05:26,663 PM  INFO LobCreatorBuilder:85 - HHH000422: Disabling contextual LOB creation as connection was null
04-21-2013 11:05:26,747 PM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-21-2013 11:05:26,750 PM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-21-2013 11:05:26,753 PM DEBUG SettingsFactory:133 - Scrollable result sets: disabled
04-21-2013 11:05:26,756 PM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-21-2013 11:05:26,758 PM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-21-2013 11:05:26,760 PM DEBUG SettingsFactory:157 - Connection release mode: auto
04-21-2013 11:05:26,763 PM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-21-2013 11:05:26,783 PM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-21-2013 11:05:26,785 PM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-21-2013 11:05:26,788 PM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-21-2013 11:05:26,790 PM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-21-2013 11:05:26,792 PM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-21-2013 11:05:26,810 PM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-21-2013 11:05:26,812 PM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-21-2013 11:05:26,814 PM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-21-2013 11:05:26,817 PM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-21-2013 11:05:26,819 PM DEBUG SettingsFactory:242 - Query cache: disabled
04-21-2013 11:05:26,821 PM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-21-2013 11:05:26,829 PM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-21-2013 11:05:26,834 PM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-21-2013 11:05:26,838 PM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-21-2013 11:05:26,840 PM DEBUG SettingsFactory:281 - Statistics: disabled
04-21-2013 11:05:26,843 PM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-21-2013 11:05:26,845 PM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-21-2013 11:05:26,847 PM DEBUG SettingsFactory:317 - Named query checking : enabled
04-21-2013 11:05:26,851 PM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-21-2013 11:05:26,854 PM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-21-2013 11:05:26,924 PM DEBUG SessionFactoryImpl:217 - Building session factory
04-21-2013 11:05:26,980 PM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-21-2013 11:05:26,984 PM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 8, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\jdk1.6.0_43;D:\Work\NWS\development\tools\apache-maven-3.0.5-bin\apache-maven-3.0.5\bin;D:\Work\NWS\development\tools\instantclient-basic-windows.x64-11.2.0.3.0\instantclient_11_2;D:\Work\NWS\development\tools\wintail.exe;D:\Work\NWS\development\tools\fuse-esb-full-7.1.0.fuse-047\fuse-esb-7.1.0.fuse-047\bin;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.2, user.home=C:\Users\Asus, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Users\Asus\workspace\com-mme-hbmjpa\target\classes;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Asus\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Asus\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.danielme.demo.Main2, hibernate.connection.url=jdbc:oracle:sid://@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-21-2013 11:05:27,551 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:05:27,555 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:05:27,559 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:05:28,115 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityB
04-21-2013 11:05:28,117 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityB where id =?
04-21-2013 11:05:28,120 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entityb_.id, entityb_.entityA_id as entityA3_2_, entityb_.name as name2_ from EntityB entityb_ where entityb_.id=?
04-21-2013 11:05:28,123 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityB (entityA_id, name, id) values (?, ?, ?)
04-21-2013 11:05:28,126 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityB set entityA_id=?, name=? where id=?
04-21-2013 11:05:28,129 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityB where id=?
04-21-2013 11:05:28,307 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.Contact
04-21-2013 11:05:28,310 PM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-21-2013 11:05:28,312 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-21-2013 11:05:28,318 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-21-2013 11:05:28,321 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-21-2013 11:05:28,325 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-21-2013 11:05:28,374 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityA
04-21-2013 11:05:28,377 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityA where id =?
04-21-2013 11:05:28,379 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entitya_.id, entitya_.name as name1_ from EntityA entitya_ where entitya_.id=?
04-21-2013 11:05:28,382 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityA (name, id) values (?, ?)
04-21-2013 11:05:28,384 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityA set name=? where id=?
04-21-2013 11:05:28,388 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityA where id=?
04-21-2013 11:05:28,433 PM DEBUG AbstractCollectionPersister:613 - Static SQL for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:05:28,435 PM DEBUG AbstractCollectionPersister:614 -  Row insert: update EntityB set entityA_id=? where id=?
04-21-2013 11:05:28,438 PM DEBUG AbstractCollectionPersister:616 -  Row delete: update EntityB set entityA_id=null where entityA_id=? and id=?
04-21-2013 11:05:28,440 PM DEBUG AbstractCollectionPersister:617 -  One-shot delete: update EntityB set entityA_id=null where entityA_id=?
04-21-2013 11:05:28,536 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:05:28,549 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:05:28,562 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:05:28,574 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:05:28,590 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:05:28,602 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:05:28,614 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:05:28,626 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:05:28,637 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:05:28,653 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:05:28,703 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:05:28,715 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:05:28,739 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [NONE]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:05:28,746 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [READ]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:05:28,753 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:05:28,760 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE_NOWAIT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:05:28,766 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [FORCE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:05:28,772 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_READ]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:05:28,779 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_WRITE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:05:28,787 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:05:28,797 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:05:28,803 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:05:28,809 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:05:28,815 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:05:28,820 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [NONE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:05:28,825 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:05:28,831 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:05:28,836 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE_NOWAIT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:05:28,841 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [FORCE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:05:28,846 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:05:28,851 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_WRITE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:05:28,857 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:05:28,862 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:05:28,868 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:05:28,882 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:05:28,891 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:05:28,916 PM DEBUG OneToManyLoader:82 - Static select for one-to-many com.danielme.demo.model.EntityA.entities: select entities0_.entityA_id as entityA3_1_1_, entities0_.id as id1_, entities0_.id as id2_0_, entities0_.entityA_id as entityA3_2_0_, entities0_.name as name2_0_ from EntityB entities0_ where entities0_.entityA_id=?
04-21-2013 11:05:29,051 PM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@216feee5
04-21-2013 11:05:29,075 PM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 0a4443d9-1714-415a-ac72-adc8eba32722 (<unnamed>)
04-21-2013 11:05:29,078 PM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-21-2013 11:05:29,081 PM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-21-2013 11:05:29,114 PM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-21-2013 11:05:29,116 PM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-21-2013 11:05:29,118 PM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-21-2013 11:05:29,124 PM ERROR SchemaUpdate:201 - HHH000319: Could not get database metadata
java.sql.SQLException: Invalid Oracle URL specified
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:441)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:154)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:194)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:178)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:457)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1737)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:84)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:904)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:889)
	at org.hibernate.ejb.HibernatePersistence.createEntityManagerFactory(HibernatePersistence.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:63)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:47)
	at com.danielme.demo.Main2.main(Main2.java:30)
04-21-2013 11:05:29,145 PM ERROR SchemaUpdate:245 - HHH000299: Could not complete schema update
java.sql.SQLException: Invalid Oracle URL specified
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:441)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:154)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:194)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:178)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:457)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1737)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:84)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:904)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:889)
	at org.hibernate.ejb.HibernatePersistence.createEntityManagerFactory(HibernatePersistence.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:63)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:47)
	at com.danielme.demo.Main2.main(Main2.java:30)
04-21-2013 11:05:29,162 PM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-21-2013 11:05:29,165 PM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-21-2013 11:05:29,193 PM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-21-2013 11:05:29,488 PM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@3f8771dc
04-21-2013 11:05:29,491 PM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem 
04-21-2013 11:06:01,062 PM DEBUG SessionImpl:243 - Opened session at timestamp: 13665567609
04-21-2013 11:06:02,513 PM DEBUG AbstractTransactionImpl:158 - begin
04-21-2013 11:06:02,516 PM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-21-2013 11:06:02,518 PM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-21-2013 11:06:02,522 PM DEBUG SqlExceptionHelper:139 - Could not open connection [n/a]
java.sql.SQLException: Invalid Oracle URL specified
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:441)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:154)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.hibernate.ejb.TransactionImpl.begin(TransactionImpl.java:57)
	at com.danielme.demo.Main2.main(Main2.java:34)
04-21-2013 11:06:02,534 PM  WARN SqlExceptionHelper:143 - SQL Error: 17067, SQLState: 99999
04-21-2013 11:06:02,536 PM ERROR SqlExceptionHelper:144 - Invalid Oracle URL specified
04-21-2013 11:06:02,547 PM DEBUG AbstractEntityManagerImpl:1131 - Mark transaction for rollback
04-21-2013 11:07:04,037 PM  INFO Main2:28 - demo begins...
04-21-2013 11:07:05,825 PM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 11:07:06,037 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 11:07:06,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 11:07:06,053 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 11:07:06,062 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 11:07:06,072 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 11:07:06,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 11:07:06,092 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 11:07:06,094 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 11:07:06,097 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 11:07:06,106 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 11:07:06,108 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 11:07:06,111 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 11:07:06,124 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 11:07:06,127 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 11:07:06,149 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 11:07:06,159 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 11:07:06,162 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 11:07:06,164 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 11:07:06,177 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 11:07:06,180 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 11:07:06,183 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 11:07:06,197 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 11:07:06,200 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 11:07:06,203 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 11:07:06,216 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 11:07:06,221 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 11:07:06,225 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 11:07:06,240 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 11:07:06,243 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 11:07:06,252 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 11:07:06,255 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 11:07:06,263 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 11:07:06,266 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 11:07:06,274 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 11:07:06,277 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 11:07:06,295 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 11:07:06,298 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 11:07:06,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 11:07:06,313 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 11:07:06,325 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 11:07:06,328 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 11:07:06,331 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 11:07:06,345 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 11:07:06,357 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 11:07:06,362 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 11:07:06,366 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 11:07:06,376 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 11:07:06,385 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 11:07:06,387 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 11:07:06,396 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 11:07:06,399 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 11:07:06,407 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 11:07:06,410 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 11:07:06,420 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 11:07:06,422 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 11:07:06,436 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 11:07:06,439 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 11:07:06,444 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 11:07:06,452 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 11:07:06,461 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 11:07:06,464 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 11:07:06,467 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 11:07:06,475 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 11:07:06,477 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 11:07:06,480 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 11:07:06,487 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 11:07:06,496 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 11:07:06,499 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 11:07:06,501 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 11:07:06,509 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 11:07:06,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 11:07:06,515 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 11:07:06,524 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 11:07:06,561 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 11:07:06,564 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 11:07:06,570 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 11:07:06,600 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 11:07:06,603 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 11:07:06,608 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 11:07:06,617 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 11:07:06,641 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 11:07:06,644 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 11:07:06,650 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 11:07:06,653 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 11:07:06,656 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 11:07:06,658 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 11:07:06,661 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 11:07:06,664 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 11:07:06,667 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 11:07:06,669 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 11:07:06,802 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 11:07:06,849 PM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-21-2013 11:07:06,867 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 11:07:06,887 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 11:07:06,972 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:07:06,978 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:07:06,985 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:07:06,988 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:07:06,999 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:07:07,004 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:07:07,017 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:07:07,022 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:07:07,028 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:07:07,033 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:07:07,038 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:07:07,044 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:07:07,049 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:07:07,055 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:07:07,061 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:07:07,080 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 11:07:07,084 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 11:07:07,087 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c943d1
04-21-2013 11:07:07,091 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5076e8a7
04-21-2013 11:07:07,094 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526d0040
04-21-2013 11:07:07,096 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6983d95
04-21-2013 11:07:07,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 11:07:07,101 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 11:07:07,104 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195ed659
04-21-2013 11:07:07,107 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 11:07:07,111 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 11:07:07,116 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c435a3a
04-21-2013 11:07:07,120 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 11:07:07,123 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 11:07:07,126 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62ebcdbb
04-21-2013 11:07:07,128 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 11:07:07,131 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 11:07:07,133 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda2cef
04-21-2013 11:07:07,136 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 11:07:07,139 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@9e1be92
04-21-2013 11:07:07,143 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e1be92
04-21-2013 11:07:07,147 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 11:07:07,151 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 11:07:07,154 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f5e2075
04-21-2013 11:07:07,156 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 11:07:07,159 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 11:07:07,161 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13b33a0e
04-21-2013 11:07:07,164 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 11:07:07,167 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f328c7a
04-21-2013 11:07:07,170 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 11:07:07,173 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d381d2
04-21-2013 11:07:07,175 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@26afa68a
04-21-2013 11:07:07,178 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26afa68a
04-21-2013 11:07:07,181 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@52458f41
04-21-2013 11:07:07,185 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52458f41
04-21-2013 11:07:07,190 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 11:07:07,193 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee3849c
04-21-2013 11:07:07,195 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 11:07:07,198 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4be2cc
04-21-2013 11:07:07,200 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 11:07:07,203 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 11:07:07,205 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2814a18d
04-21-2013 11:07:07,208 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@501ba94d
04-21-2013 11:07:07,211 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 11:07:07,214 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 11:07:07,216 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19202d69
04-21-2013 11:07:07,219 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@122b7db1
04-21-2013 11:07:07,221 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 11:07:07,224 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d7e845a
04-21-2013 11:07:07,226 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 11:07:07,229 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26b496d
04-21-2013 11:07:07,231 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 11:07:07,234 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f1f23e5
04-21-2013 11:07:07,236 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 11:07:07,239 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e81a197
04-21-2013 11:07:07,242 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 11:07:07,244 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c391c3
04-21-2013 11:07:07,247 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f758500
04-21-2013 11:07:07,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18330bf
04-21-2013 11:07:07,251 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 11:07:07,254 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 11:07:07,256 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6ecf829d
04-21-2013 11:07:07,259 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 11:07:07,261 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 11:07:07,264 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad4d66b
04-21-2013 11:07:07,266 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@219ba640
04-21-2013 11:07:07,269 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 11:07:07,272 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 11:07:07,274 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3909ea96
04-21-2013 11:07:07,277 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 11:07:07,281 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 11:07:07,286 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ad3c65d
04-21-2013 11:07:07,290 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@70e35d5
04-21-2013 11:07:07,294 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 11:07:07,296 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d911540
04-21-2013 11:07:07,299 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@259e215b
04-21-2013 11:07:07,302 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 11:07:07,305 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7976c1
04-21-2013 11:07:07,307 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@506835fb
04-21-2013 11:07:07,310 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@58df0438
04-21-2013 11:07:07,313 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 11:07:07,315 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7052c6b4
04-21-2013 11:07:07,318 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 11:07:07,321 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 11:07:07,324 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 11:07:07,327 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 11:07:07,330 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 11:07:07,332 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 11:07:07,335 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 11:07:07,338 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 11:07:07,343 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:07:07,346 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:07:07,349 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:07:07,354 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:07:07,358 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:07:07,362 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:07:07,365 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:07:07,368 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:07:07,371 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:07:07,374 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:07:07,377 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:07:07,380 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:07:07,382 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:07:07,385 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:07:07,388 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:07:07,390 PM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-21-2013 11:07:07,827 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:07:07,876 PM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 11:07:07,882 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-21-2013 11:07:08,052 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-21-2013 11:07:08,120 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 11:07:08,126 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 11:07:08,150 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 11:07:08,154 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 11:07:08,163 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 11:07:08,200 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:07:08,202 PM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-21-2013 11:07:08,243 PM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 11:07:08,313 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 11:07:08,316 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 11:07:08,501 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 11:07:08,567 PM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-21-2013 11:07:08,801 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 11:07:08,803 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 11:07:08,827 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 11:07:09,003 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:07:09,021 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:07:09,069 PM DEBUG EntityBinder:354 - Import with entity name Contact
04-21-2013 11:07:09,095 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 11:07:09,298 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,323 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 11:07:09,341 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-21-2013 11:07:09,351 PM DEBUG PropertyBinder:256 - Building property partyId
04-21-2013 11:07:09,374 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,377 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 11:07:09,380 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-21-2013 11:07:09,382 PM DEBUG PropertyBinder:256 - Building property address1
04-21-2013 11:07:09,385 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,389 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 11:07:09,391 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-21-2013 11:07:09,394 PM DEBUG PropertyBinder:256 - Building property address2
04-21-2013 11:07:09,397 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,401 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 11:07:09,404 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-21-2013 11:07:09,406 PM DEBUG PropertyBinder:256 - Building property address3
04-21-2013 11:07:09,410 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,413 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 11:07:09,416 PM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-21-2013 11:07:09,418 PM DEBUG PropertyBinder:256 - Building property channel
04-21-2013 11:07:09,421 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,425 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 11:07:09,427 PM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-21-2013 11:07:09,430 PM DEBUG PropertyBinder:256 - Building property countryCode
04-21-2013 11:07:09,433 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,436 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-21-2013 11:07:09,439 PM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-21-2013 11:07:09,441 PM DEBUG PropertyBinder:256 - Building property email
04-21-2013 11:07:09,444 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,448 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 11:07:09,450 PM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-21-2013 11:07:09,452 PM DEBUG PropertyBinder:256 - Building property fax
04-21-2013 11:07:09,455 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,459 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 11:07:09,461 PM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-21-2013 11:07:09,464 PM DEBUG PropertyBinder:256 - Building property firstname
04-21-2013 11:07:09,467 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,471 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 11:07:09,473 PM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-21-2013 11:07:09,476 PM DEBUG PropertyBinder:256 - Building property lastname
04-21-2013 11:07:09,479 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,482 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-21-2013 11:07:09,484 PM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-21-2013 11:07:09,487 PM DEBUG PropertyBinder:256 - Building property login
04-21-2013 11:07:09,490 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,493 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 11:07:09,496 PM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-21-2013 11:07:09,498 PM DEBUG PropertyBinder:256 - Building property mobile
04-21-2013 11:07:09,501 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,507 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 11:07:09,512 PM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-21-2013 11:07:09,515 PM DEBUG PropertyBinder:256 - Building property organisation
04-21-2013 11:07:09,518 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,522 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 11:07:09,525 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-21-2013 11:07:09,528 PM DEBUG PropertyBinder:256 - Building property partyType
04-21-2013 11:07:09,532 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,535 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 11:07:09,537 PM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-21-2013 11:07:09,540 PM DEBUG PropertyBinder:256 - Building property phone
04-21-2013 11:07:09,543 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,547 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 11:07:09,549 PM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-21-2013 11:07:09,551 PM DEBUG PropertyBinder:256 - Building property postcode
04-21-2013 11:07:09,555 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,558 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-21-2013 11:07:09,560 PM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-21-2013 11:07:09,563 PM DEBUG PropertyBinder:256 - Building property state
04-21-2013 11:07:09,567 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,570 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-21-2013 11:07:09,572 PM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-21-2013 11:07:09,575 PM DEBUG PropertyBinder:256 - Building property status
04-21-2013 11:07:09,578 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,581 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 11:07:09,584 PM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-21-2013 11:07:09,586 PM DEBUG PropertyBinder:256 - Building property suburb
04-21-2013 11:07:09,589 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,593 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-21-2013 11:07:09,595 PM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-21-2013 11:07:09,597 PM DEBUG PropertyBinder:256 - Building property type
04-21-2013 11:07:09,609 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 11:07:09,613 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:07:09,615 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:07:09,618 PM DEBUG EntityBinder:354 - Import with entity name EntityB
04-21-2013 11:07:09,621 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 11:07:09,742 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,746 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:07:09,749 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:07:09,751 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:07:09,759 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 11:07:09,762 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,785 PM DEBUG PropertyBinder:256 - Building property entityA
04-21-2013 11:07:09,788 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,792 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:07:09,795 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:07:09,798 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:07:09,800 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 11:07:09,803 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:07:09,805 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:07:09,808 PM DEBUG EntityBinder:354 - Import with entity name EntityA
04-21-2013 11:07:09,811 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 11:07:09,878 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,882 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:07:09,885 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:07:09,887 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:07:09,890 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:07:09,893 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,905 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:09,993 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:10,003 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:10,012 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 11:07:10,018 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:07:10,021 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:07:10,025 PM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 11:07:10,041 PM DEBUG PropertyBinder:256 - Building property entities
04-21-2013 11:07:10,045 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:07:10,049 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:07:10,052 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:07:10,054 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:07:10,060 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-21-2013 11:07:10,063 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-21-2013 11:07:10,066 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-21-2013 11:07:10,070 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-21-2013 11:07:10,074 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-21-2013 11:07:10,078 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-21-2013 11:07:10,081 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-21-2013 11:07:10,083 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-21-2013 11:07:10,085 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-21-2013 11:07:10,088 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-21-2013 11:07:10,090 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-21-2013 11:07:10,092 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-21-2013 11:07:10,095 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-21-2013 11:07:10,097 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-21-2013 11:07:10,099 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-21-2013 11:07:10,101 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-21-2013 11:07:10,103 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-21-2013 11:07:10,106 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-21-2013 11:07:10,108 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-21-2013 11:07:10,110 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-21-2013 11:07:10,112 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:07:10,115 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:07:10,117 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:07:10,119 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:07:10,124 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 11:07:10,151 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 11:07:10,153 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 11:07:10,155 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 11:07:10,158 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:07:10,165 PM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 11:07:10,172 PM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 11:07:10,183 PM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 11:07:10,186 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 11:07:10,188 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 11:07:10,190 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 11:07:10,191 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 11:07:10,194 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 11:07:10,275 PM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-21-2013 11:07:10,911 PM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-21-2013 11:07:10,914 PM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-21-2013 11:07:10,920 PM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01]
04-21-2013 11:07:10,925 PM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-21-2013 11:07:11,062 PM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-21-2013 11:07:11,067 PM  WARN JdbcServicesImpl:171 - HHH000342: Could not obtain connection to query metadata : Invalid Oracle URL specified
04-21-2013 11:07:11,120 PM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-21-2013 11:07:11,196 PM  INFO LobCreatorBuilder:85 - HHH000422: Disabling contextual LOB creation as connection was null
04-21-2013 11:07:11,281 PM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-21-2013 11:07:11,284 PM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-21-2013 11:07:11,288 PM DEBUG SettingsFactory:133 - Scrollable result sets: disabled
04-21-2013 11:07:11,290 PM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-21-2013 11:07:11,293 PM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-21-2013 11:07:11,295 PM DEBUG SettingsFactory:157 - Connection release mode: auto
04-21-2013 11:07:11,297 PM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-21-2013 11:07:11,317 PM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-21-2013 11:07:11,320 PM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-21-2013 11:07:11,322 PM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-21-2013 11:07:11,324 PM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-21-2013 11:07:11,326 PM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-21-2013 11:07:11,345 PM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-21-2013 11:07:11,348 PM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-21-2013 11:07:11,350 PM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-21-2013 11:07:11,352 PM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-21-2013 11:07:11,354 PM DEBUG SettingsFactory:242 - Query cache: disabled
04-21-2013 11:07:11,356 PM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-21-2013 11:07:11,364 PM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-21-2013 11:07:11,367 PM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-21-2013 11:07:11,369 PM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-21-2013 11:07:11,371 PM DEBUG SettingsFactory:281 - Statistics: disabled
04-21-2013 11:07:11,373 PM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-21-2013 11:07:11,376 PM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-21-2013 11:07:11,378 PM DEBUG SettingsFactory:317 - Named query checking : enabled
04-21-2013 11:07:11,380 PM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-21-2013 11:07:11,382 PM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-21-2013 11:07:11,445 PM DEBUG SessionFactoryImpl:217 - Building session factory
04-21-2013 11:07:11,505 PM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-21-2013 11:07:11,510 PM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 8, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\jdk1.6.0_43;D:\Work\NWS\development\tools\apache-maven-3.0.5-bin\apache-maven-3.0.5\bin;D:\Work\NWS\development\tools\instantclient-basic-windows.x64-11.2.0.3.0\instantclient_11_2;D:\Work\NWS\development\tools\wintail.exe;D:\Work\NWS\development\tools\fuse-esb-full-7.1.0.fuse-047\fuse-esb-7.1.0.fuse-047\bin;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.2, user.home=C:\Users\Asus, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Users\Asus\workspace\com-mme-hbmjpa\target\classes;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Asus\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Asus\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.danielme.demo.Main2, hibernate.connection.url=jdbc:oracle:sid:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-21-2013 11:07:12,075 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:07:12,080 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:07:12,083 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:07:12,573 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityB
04-21-2013 11:07:12,576 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityB where id =?
04-21-2013 11:07:12,578 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entityb_.id, entityb_.entityA_id as entityA3_1_, entityb_.name as name1_ from EntityB entityb_ where entityb_.id=?
04-21-2013 11:07:12,581 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityB (entityA_id, name, id) values (?, ?, ?)
04-21-2013 11:07:12,584 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityB set entityA_id=?, name=? where id=?
04-21-2013 11:07:12,586 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityB where id=?
04-21-2013 11:07:12,763 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.Contact
04-21-2013 11:07:12,766 PM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-21-2013 11:07:12,769 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-21-2013 11:07:12,774 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-21-2013 11:07:12,777 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-21-2013 11:07:12,781 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-21-2013 11:07:12,831 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityA
04-21-2013 11:07:12,833 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityA where id =?
04-21-2013 11:07:12,836 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entitya_.id, entitya_.name as name2_ from EntityA entitya_ where entitya_.id=?
04-21-2013 11:07:12,839 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityA (name, id) values (?, ?)
04-21-2013 11:07:12,841 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityA set name=? where id=?
04-21-2013 11:07:12,845 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityA where id=?
04-21-2013 11:07:12,893 PM DEBUG AbstractCollectionPersister:613 - Static SQL for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:07:12,895 PM DEBUG AbstractCollectionPersister:614 -  Row insert: update EntityB set entityA_id=? where id=?
04-21-2013 11:07:12,898 PM DEBUG AbstractCollectionPersister:616 -  Row delete: update EntityB set entityA_id=null where entityA_id=? and id=?
04-21-2013 11:07:12,900 PM DEBUG AbstractCollectionPersister:617 -  One-shot delete: update EntityB set entityA_id=null where entityA_id=?
04-21-2013 11:07:13,003 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:07:13,015 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:07:13,027 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:07:13,039 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:07:13,050 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:07:13,062 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:07:13,074 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:07:13,086 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:07:13,100 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:07:13,112 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:07:13,161 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:07:13,177 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:07:13,202 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [NONE]: select entityb0_.id as id1_1_, entityb0_.entityA_id as entityA3_1_1_, entityb0_.name as name1_1_, entitya1_.id as id2_0_, entitya1_.name as name2_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:07:13,210 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [READ]: select entityb0_.id as id1_1_, entityb0_.entityA_id as entityA3_1_1_, entityb0_.name as name1_1_, entitya1_.id as id2_0_, entitya1_.name as name2_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:07:13,216 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:07:13,222 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE_NOWAIT]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:07:13,230 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [FORCE]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:07:13,236 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_READ]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:07:13,242 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_WRITE]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:07:13,248 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:07:13,257 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:07:13,263 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:07:13,269 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityB: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:07:13,274 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityB: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:07:13,280 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [NONE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:07:13,291 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [READ]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:07:13,297 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:07:13,303 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE_NOWAIT]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:07:13,309 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [FORCE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:07:13,314 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_READ]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:07:13,320 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_WRITE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:07:13,325 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:07:13,330 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:07:13,336 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:07:13,350 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityA: select entitya0_.id as id2_1_, entitya0_.name as name2_1_, entities1_.entityA_id as entityA3_2_3_, entities1_.id as id3_, entities1_.id as id1_0_, entities1_.entityA_id as entityA3_1_0_, entities1_.name as name1_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:07:13,359 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityA: select entitya0_.id as id2_1_, entitya0_.name as name2_1_, entities1_.entityA_id as entityA3_2_3_, entities1_.id as id3_, entities1_.id as id1_0_, entities1_.entityA_id as entityA3_1_0_, entities1_.name as name1_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:07:13,386 PM DEBUG OneToManyLoader:82 - Static select for one-to-many com.danielme.demo.model.EntityA.entities: select entities0_.entityA_id as entityA3_2_1_, entities0_.id as id1_, entities0_.id as id1_0_, entities0_.entityA_id as entityA3_1_0_, entities0_.name as name1_0_ from EntityB entities0_ where entities0_.entityA_id=?
04-21-2013 11:07:13,527 PM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@153d4c49
04-21-2013 11:07:13,547 PM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 71541b60-e9c8-4924-a19a-17a27b22bf7b (<unnamed>)
04-21-2013 11:07:13,549 PM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-21-2013 11:07:13,551 PM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-21-2013 11:07:13,583 PM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-21-2013 11:07:13,585 PM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-21-2013 11:07:13,587 PM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-21-2013 11:07:13,593 PM ERROR SchemaUpdate:201 - HHH000319: Could not get database metadata
java.sql.SQLException: Invalid Oracle URL specified
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:441)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:154)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:194)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:178)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:457)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1737)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:84)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:904)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:889)
	at org.hibernate.ejb.HibernatePersistence.createEntityManagerFactory(HibernatePersistence.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:63)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:47)
	at com.danielme.demo.Main2.main(Main2.java:30)
04-21-2013 11:07:13,614 PM ERROR SchemaUpdate:245 - HHH000299: Could not complete schema update
java.sql.SQLException: Invalid Oracle URL specified
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:441)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:154)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:194)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:178)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:457)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1737)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:84)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:904)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:889)
	at org.hibernate.ejb.HibernatePersistence.createEntityManagerFactory(HibernatePersistence.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:63)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:47)
	at com.danielme.demo.Main2.main(Main2.java:30)
04-21-2013 11:07:13,629 PM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-21-2013 11:07:13,632 PM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-21-2013 11:07:13,659 PM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-21-2013 11:07:13,955 PM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@2555e3ab
04-21-2013 11:07:13,957 PM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem 
04-21-2013 11:11:56,789 PM  INFO Main2:28 - demo begins...
04-21-2013 11:11:57,665 PM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 11:11:57,879 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@d3576a2
04-21-2013 11:11:57,891 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@d3576a2
04-21-2013 11:11:57,894 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d3576a2
04-21-2013 11:11:57,902 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45490eb5
04-21-2013 11:11:57,913 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6983d95
04-21-2013 11:11:57,918 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4aeaf40c
04-21-2013 11:11:57,932 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6632060c
04-21-2013 11:11:57,934 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6632060c
04-21-2013 11:11:57,937 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6632060c
04-21-2013 11:11:57,946 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@7ae35bb7
04-21-2013 11:11:57,949 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@7ae35bb7
04-21-2013 11:11:57,951 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae35bb7
04-21-2013 11:11:57,965 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4386d484
04-21-2013 11:11:57,968 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4386d484
04-21-2013 11:11:57,990 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4386d484
04-21-2013 11:11:57,999 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2f60877b
04-21-2013 11:11:58,003 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2f60877b
04-21-2013 11:11:58,006 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f60877b
04-21-2013 11:11:58,017 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@e3a1ec6
04-21-2013 11:11:58,019 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@e3a1ec6
04-21-2013 11:11:58,022 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@e3a1ec6
04-21-2013 11:11:58,035 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@28787c16
04-21-2013 11:11:58,038 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@28787c16
04-21-2013 11:11:58,040 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28787c16
04-21-2013 11:11:58,051 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6cd24e3f
04-21-2013 11:11:58,054 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6cd24e3f
04-21-2013 11:11:58,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6cd24e3f
04-21-2013 11:11:58,071 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@538d7ace
04-21-2013 11:11:58,074 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@538d7ace
04-21-2013 11:11:58,083 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 11:11:58,085 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 11:11:58,094 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@38aa233f
04-21-2013 11:11:58,097 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@38aa233f
04-21-2013 11:11:58,108 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7ed75415
04-21-2013 11:11:58,111 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ed75415
04-21-2013 11:11:58,127 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 11:11:58,130 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 11:11:58,143 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 11:11:58,146 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 11:11:58,164 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 11:11:58,168 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 11:11:58,171 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 11:11:58,183 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc4f0f8
04-21-2013 11:11:58,192 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 11:11:58,195 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 11:11:58,199 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 11:11:58,207 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@66922804
04-21-2013 11:11:58,218 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 11:11:58,221 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 11:11:58,229 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 11:11:58,232 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 11:11:58,241 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 11:11:58,243 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 11:11:58,252 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 11:11:58,255 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 11:11:58,269 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 11:11:58,273 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 11:11:58,280 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4abf053f
04-21-2013 11:11:58,293 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@66a23610
04-21-2013 11:11:58,302 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 11:11:58,305 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 11:11:58,308 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 11:11:58,316 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 11:11:58,320 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 11:11:58,322 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 11:11:58,330 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1c7e2da
04-21-2013 11:11:58,338 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 11:11:58,341 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 11:11:58,343 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 11:11:58,351 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 11:11:58,354 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 11:11:58,357 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 11:11:58,365 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@67ce85c4
04-21-2013 11:11:58,402 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 11:11:58,405 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 11:11:58,411 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35ecfe07
04-21-2013 11:11:58,463 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 11:11:58,467 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 11:11:58,474 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fc8efd1
04-21-2013 11:11:58,484 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@730efd7c
04-21-2013 11:11:58,503 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 11:11:58,506 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 11:11:58,512 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 11:11:58,514 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 11:11:58,517 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 11:11:58,520 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 11:11:58,522 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-21-2013 11:11:58,525 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-21-2013 11:11:58,528 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-21-2013 11:11:58,531 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53f78b68
04-21-2013 11:11:58,669 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 11:11:58,718 PM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-21-2013 11:11:58,732 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 11:11:58,745 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 11:11:58,828 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:11:58,835 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:11:58,843 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:11:58,845 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:11:58,856 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:11:58,864 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:11:58,880 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:11:58,886 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:11:58,891 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:11:58,896 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:11:58,902 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:11:58,907 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:11:58,912 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:11:58,919 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:11:58,925 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:11:58,943 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@d3576a2
04-21-2013 11:11:58,946 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@d3576a2
04-21-2013 11:11:58,949 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d3576a2
04-21-2013 11:11:58,952 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45490eb5
04-21-2013 11:11:58,955 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6983d95
04-21-2013 11:11:58,957 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4aeaf40c
04-21-2013 11:11:58,961 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6632060c
04-21-2013 11:11:58,963 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6632060c
04-21-2013 11:11:58,966 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6632060c
04-21-2013 11:11:58,968 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@7ae35bb7
04-21-2013 11:11:58,971 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@7ae35bb7
04-21-2013 11:11:58,973 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae35bb7
04-21-2013 11:11:58,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4386d484
04-21-2013 11:11:58,979 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4386d484
04-21-2013 11:11:58,982 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4386d484
04-21-2013 11:11:58,984 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2f60877b
04-21-2013 11:11:58,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2f60877b
04-21-2013 11:11:58,989 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f60877b
04-21-2013 11:11:58,992 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@e3a1ec6
04-21-2013 11:11:58,994 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@e3a1ec6
04-21-2013 11:11:58,997 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@e3a1ec6
04-21-2013 11:11:59,000 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@28787c16
04-21-2013 11:11:59,002 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@28787c16
04-21-2013 11:11:59,005 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28787c16
04-21-2013 11:11:59,007 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6cd24e3f
04-21-2013 11:11:59,010 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6cd24e3f
04-21-2013 11:11:59,012 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6cd24e3f
04-21-2013 11:11:59,015 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@538d7ace
04-21-2013 11:11:59,017 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@538d7ace
04-21-2013 11:11:59,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 11:11:59,022 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c3ac93e
04-21-2013 11:11:59,025 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@38aa233f
04-21-2013 11:11:59,028 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@38aa233f
04-21-2013 11:11:59,030 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7ed75415
04-21-2013 11:11:59,033 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ed75415
04-21-2013 11:11:59,036 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 11:11:59,041 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7b41fab6
04-21-2013 11:11:59,045 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 11:11:59,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51c888d9
04-21-2013 11:11:59,053 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 11:11:59,056 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 11:11:59,059 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@501ba94d
04-21-2013 11:11:59,062 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fc4f0f8
04-21-2013 11:11:59,065 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 11:11:59,067 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 11:11:59,070 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53d439fe
04-21-2013 11:11:59,072 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@66922804
04-21-2013 11:11:59,075 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 11:11:59,078 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3caa4b
04-21-2013 11:11:59,080 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 11:11:59,083 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@105691e
04-21-2013 11:11:59,085 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 11:11:59,088 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a2d189c
04-21-2013 11:11:59,091 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 11:11:59,093 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e716cb7
04-21-2013 11:11:59,096 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 11:11:59,099 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f758500
04-21-2013 11:11:59,103 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4abf053f
04-21-2013 11:11:59,106 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@66a23610
04-21-2013 11:11:59,109 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 11:11:59,111 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 11:11:59,114 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6b9cd75a
04-21-2013 11:11:59,116 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 11:11:59,119 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 11:11:59,121 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d25d06e
04-21-2013 11:11:59,124 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1c7e2da
04-21-2013 11:11:59,126 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 11:11:59,129 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 11:11:59,131 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@1f57ea4a
04-21-2013 11:11:59,134 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 11:11:59,136 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 11:11:59,139 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53fcc0a2
04-21-2013 11:11:59,142 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@67ce85c4
04-21-2013 11:11:59,144 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 11:11:59,147 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@259e215b
04-21-2013 11:11:59,150 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35ecfe07
04-21-2013 11:11:59,154 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 11:11:59,159 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@506835fb
04-21-2013 11:11:59,164 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fc8efd1
04-21-2013 11:11:59,169 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@730efd7c
04-21-2013 11:11:59,173 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 11:11:59,176 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3336a1a1
04-21-2013 11:11:59,179 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 11:11:59,182 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 11:11:59,185 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 11:11:59,188 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 11:11:59,191 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 11:11:59,195 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-21-2013 11:11:59,200 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-21-2013 11:11:59,204 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6032bd65
04-21-2013 11:11:59,208 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:11:59,211 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:11:59,214 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:11:59,217 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:11:59,222 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:11:59,226 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:11:59,229 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:11:59,232 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:11:59,235 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:11:59,238 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:11:59,243 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:11:59,247 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:11:59,250 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:11:59,253 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:11:59,256 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:11:59,259 PM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-21-2013 11:11:59,715 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:11:59,764 PM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 11:11:59,770 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-21-2013 11:11:59,939 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-21-2013 11:12:00,012 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 11:12:00,020 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 11:12:00,052 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 11:12:00,056 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 11:12:00,063 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 11:12:00,100 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:12:00,102 PM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-21-2013 11:12:00,143 PM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 11:12:00,209 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 11:12:00,212 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 11:12:00,408 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 11:12:00,473 PM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-21-2013 11:12:00,710 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 11:12:00,712 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 11:12:00,736 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 11:12:00,892 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:12:00,908 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:12:00,953 PM DEBUG EntityBinder:354 - Import with entity name Contact
04-21-2013 11:12:00,978 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 11:12:01,190 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,215 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 11:12:01,232 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-21-2013 11:12:01,241 PM DEBUG PropertyBinder:256 - Building property partyId
04-21-2013 11:12:01,266 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,270 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 11:12:01,272 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-21-2013 11:12:01,275 PM DEBUG PropertyBinder:256 - Building property address1
04-21-2013 11:12:01,278 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,282 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 11:12:01,285 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-21-2013 11:12:01,288 PM DEBUG PropertyBinder:256 - Building property address2
04-21-2013 11:12:01,291 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,294 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 11:12:01,297 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-21-2013 11:12:01,299 PM DEBUG PropertyBinder:256 - Building property address3
04-21-2013 11:12:01,302 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,305 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 11:12:01,308 PM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-21-2013 11:12:01,310 PM DEBUG PropertyBinder:256 - Building property channel
04-21-2013 11:12:01,313 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,317 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 11:12:01,319 PM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-21-2013 11:12:01,322 PM DEBUG PropertyBinder:256 - Building property countryCode
04-21-2013 11:12:01,325 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,329 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-21-2013 11:12:01,331 PM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-21-2013 11:12:01,333 PM DEBUG PropertyBinder:256 - Building property email
04-21-2013 11:12:01,336 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,340 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 11:12:01,343 PM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-21-2013 11:12:01,346 PM DEBUG PropertyBinder:256 - Building property fax
04-21-2013 11:12:01,350 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,353 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 11:12:01,356 PM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-21-2013 11:12:01,359 PM DEBUG PropertyBinder:256 - Building property firstname
04-21-2013 11:12:01,363 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,367 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 11:12:01,369 PM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-21-2013 11:12:01,372 PM DEBUG PropertyBinder:256 - Building property lastname
04-21-2013 11:12:01,375 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,378 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-21-2013 11:12:01,381 PM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-21-2013 11:12:01,384 PM DEBUG PropertyBinder:256 - Building property login
04-21-2013 11:12:01,387 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,390 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 11:12:01,393 PM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-21-2013 11:12:01,395 PM DEBUG PropertyBinder:256 - Building property mobile
04-21-2013 11:12:01,398 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,402 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 11:12:01,406 PM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-21-2013 11:12:01,410 PM DEBUG PropertyBinder:256 - Building property organisation
04-21-2013 11:12:01,413 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,417 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 11:12:01,419 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-21-2013 11:12:01,422 PM DEBUG PropertyBinder:256 - Building property partyType
04-21-2013 11:12:01,425 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,428 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 11:12:01,431 PM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-21-2013 11:12:01,433 PM DEBUG PropertyBinder:256 - Building property phone
04-21-2013 11:12:01,436 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,462 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 11:12:01,465 PM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-21-2013 11:12:01,468 PM DEBUG PropertyBinder:256 - Building property postcode
04-21-2013 11:12:01,472 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,477 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-21-2013 11:12:01,480 PM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-21-2013 11:12:01,482 PM DEBUG PropertyBinder:256 - Building property state
04-21-2013 11:12:01,486 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,489 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-21-2013 11:12:01,492 PM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-21-2013 11:12:01,494 PM DEBUG PropertyBinder:256 - Building property status
04-21-2013 11:12:01,497 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,501 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 11:12:01,503 PM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-21-2013 11:12:01,506 PM DEBUG PropertyBinder:256 - Building property suburb
04-21-2013 11:12:01,509 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,512 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-21-2013 11:12:01,515 PM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-21-2013 11:12:01,518 PM DEBUG PropertyBinder:256 - Building property type
04-21-2013 11:12:01,531 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 11:12:01,534 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:12:01,537 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:12:01,540 PM DEBUG EntityBinder:354 - Import with entity name EntityB
04-21-2013 11:12:01,543 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 11:12:01,664 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,668 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:12:01,671 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:12:01,674 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:12:01,682 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 11:12:01,685 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,711 PM DEBUG PropertyBinder:256 - Building property entityA
04-21-2013 11:12:01,715 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,719 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:12:01,721 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:12:01,724 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:12:01,726 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 11:12:01,729 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:12:01,732 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:12:01,734 PM DEBUG EntityBinder:354 - Import with entity name EntityA
04-21-2013 11:12:01,737 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 11:12:01,812 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,816 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:12:01,819 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:12:01,822 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:12:01,826 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:12:01,830 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,842 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,941 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,950 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:01,963 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 11:12:01,969 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:12:01,972 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:12:01,976 PM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 11:12:01,996 PM DEBUG PropertyBinder:256 - Building property entities
04-21-2013 11:12:02,001 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:12:02,007 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:12:02,010 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:12:02,014 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:12:02,022 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-21-2013 11:12:02,026 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-21-2013 11:12:02,028 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-21-2013 11:12:02,031 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-21-2013 11:12:02,033 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-21-2013 11:12:02,035 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-21-2013 11:12:02,037 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-21-2013 11:12:02,040 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-21-2013 11:12:02,042 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-21-2013 11:12:02,045 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-21-2013 11:12:02,047 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-21-2013 11:12:02,049 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-21-2013 11:12:02,052 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-21-2013 11:12:02,055 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-21-2013 11:12:02,057 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-21-2013 11:12:02,059 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-21-2013 11:12:02,061 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-21-2013 11:12:02,064 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-21-2013 11:12:02,066 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-21-2013 11:12:02,068 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-21-2013 11:12:02,070 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:12:02,072 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:12:02,074 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:12:02,076 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:12:02,081 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 11:12:02,113 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 11:12:02,116 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 11:12:02,119 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 11:12:02,122 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:12:02,130 PM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 11:12:02,137 PM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 11:12:02,147 PM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 11:12:02,150 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 11:12:02,152 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 11:12:02,153 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 11:12:02,155 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 11:12:02,157 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 11:12:02,238 PM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-21-2013 11:12:02,870 PM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-21-2013 11:12:02,873 PM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-21-2013 11:12:02,878 PM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-21-2013 11:12:02,881 PM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-21-2013 11:12:03,011 PM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-21-2013 11:12:11,455 PM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-21-2013 11:12:11,458 PM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-21-2013 11:12:11,462 PM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-21-2013 11:12:11,465 PM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-21-2013 11:12:13,151 PM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-21-2013 11:12:13,865 PM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-21-2013 11:12:13,867 PM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-21-2013 11:12:13,870 PM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-21-2013 11:12:13,872 PM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-21-2013 11:12:13,874 PM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-21-2013 11:12:13,876 PM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-21-2013 11:12:13,879 PM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-21-2013 11:12:13,881 PM DEBUG SettingsFactory:157 - Connection release mode: auto
04-21-2013 11:12:13,883 PM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-21-2013 11:12:13,902 PM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-21-2013 11:12:13,904 PM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-21-2013 11:12:13,907 PM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-21-2013 11:12:13,909 PM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-21-2013 11:12:13,911 PM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-21-2013 11:12:13,927 PM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-21-2013 11:12:13,929 PM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-21-2013 11:12:13,931 PM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-21-2013 11:12:13,933 PM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-21-2013 11:12:13,935 PM DEBUG SettingsFactory:242 - Query cache: disabled
04-21-2013 11:12:13,937 PM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-21-2013 11:12:13,945 PM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-21-2013 11:12:13,948 PM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-21-2013 11:12:13,950 PM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-21-2013 11:12:13,952 PM DEBUG SettingsFactory:281 - Statistics: disabled
04-21-2013 11:12:13,954 PM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-21-2013 11:12:13,957 PM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-21-2013 11:12:13,959 PM DEBUG SettingsFactory:317 - Named query checking : enabled
04-21-2013 11:12:13,961 PM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-21-2013 11:12:13,963 PM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-21-2013 11:12:14,026 PM DEBUG SessionFactoryImpl:217 - Building session factory
04-21-2013 11:12:14,082 PM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-21-2013 11:12:14,086 PM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 8, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\jdk1.6.0_43;D:\Work\NWS\development\tools\apache-maven-3.0.5-bin\apache-maven-3.0.5\bin;D:\Work\NWS\development\tools\instantclient-basic-windows.x64-11.2.0.3.0\instantclient_11_2;D:\Work\NWS\development\tools\wintail.exe;D:\Work\NWS\development\tools\fuse-esb-full-7.1.0.fuse-047\fuse-esb-7.1.0.fuse-047\bin;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.2, user.home=C:\Users\Asus, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Users\Asus\workspace\com-mme-hbmjpa\target\classes;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Asus\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Asus\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.danielme.demo.Main2, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-21-2013 11:12:14,640 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:14,644 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:14,647 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:15,113 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityB
04-21-2013 11:12:15,116 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityB where id =?
04-21-2013 11:12:15,118 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entityb_.id, entityb_.entityA_id as entityA3_1_, entityb_.name as name1_ from EntityB entityb_ where entityb_.id=?
04-21-2013 11:12:15,121 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityB (entityA_id, name, id) values (?, ?, ?)
04-21-2013 11:12:15,124 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityB set entityA_id=?, name=? where id=?
04-21-2013 11:12:15,126 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityB where id=?
04-21-2013 11:12:15,292 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.Contact
04-21-2013 11:12:15,295 PM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-21-2013 11:12:15,297 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-21-2013 11:12:15,304 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-21-2013 11:12:15,308 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-21-2013 11:12:15,311 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-21-2013 11:12:15,360 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityA
04-21-2013 11:12:15,364 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityA where id =?
04-21-2013 11:12:15,368 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entitya_.id, entitya_.name as name2_ from EntityA entitya_ where entitya_.id=?
04-21-2013 11:12:15,372 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityA (name, id) values (?, ?)
04-21-2013 11:12:15,376 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityA set name=? where id=?
04-21-2013 11:12:15,381 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityA where id=?
04-21-2013 11:12:15,423 PM DEBUG AbstractCollectionPersister:613 - Static SQL for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:12:15,425 PM DEBUG AbstractCollectionPersister:614 -  Row insert: update EntityB set entityA_id=? where id=?
04-21-2013 11:12:15,428 PM DEBUG AbstractCollectionPersister:616 -  Row delete: update EntityB set entityA_id=null where entityA_id=? and id=?
04-21-2013 11:12:15,430 PM DEBUG AbstractCollectionPersister:617 -  One-shot delete: update EntityB set entityA_id=null where entityA_id=?
04-21-2013 11:12:15,532 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:12:15,544 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:12:15,556 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:12:15,567 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:12:15,579 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:12:15,590 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:12:15,601 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:12:15,613 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:12:15,631 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:12:15,646 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:12:15,695 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:12:15,709 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:12:15,742 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [NONE]: select entityb0_.id as id1_1_, entityb0_.entityA_id as entityA3_1_1_, entityb0_.name as name1_1_, entitya1_.id as id2_0_, entitya1_.name as name2_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:12:15,749 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [READ]: select entityb0_.id as id1_1_, entityb0_.entityA_id as entityA3_1_1_, entityb0_.name as name1_1_, entitya1_.id as id2_0_, entitya1_.name as name2_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:12:15,755 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:12:15,761 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE_NOWAIT]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:12:15,767 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [FORCE]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:12:15,773 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_READ]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:12:15,779 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_WRITE]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:12:15,787 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:12:15,792 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:12:15,798 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:12:15,804 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityB: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:12:15,809 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityB: select entityb0_.id as id1_0_, entityb0_.entityA_id as entityA3_1_0_, entityb0_.name as name1_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:12:15,814 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [NONE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:12:15,819 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [READ]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:12:15,824 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:12:15,829 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE_NOWAIT]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:12:15,834 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [FORCE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:12:15,840 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_READ]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:12:15,845 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_WRITE]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:12:15,850 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:12:15,856 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:12:15,861 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id2_0_, entitya0_.name as name2_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:12:15,876 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityA: select entitya0_.id as id2_1_, entitya0_.name as name2_1_, entities1_.entityA_id as entityA3_2_3_, entities1_.id as id3_, entities1_.id as id1_0_, entities1_.entityA_id as entityA3_1_0_, entities1_.name as name1_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:12:15,888 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityA: select entitya0_.id as id2_1_, entitya0_.name as name2_1_, entities1_.entityA_id as entityA3_2_3_, entities1_.id as id3_, entities1_.id as id1_0_, entities1_.entityA_id as entityA3_1_0_, entities1_.name as name1_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:12:15,913 PM DEBUG OneToManyLoader:82 - Static select for one-to-many com.danielme.demo.model.EntityA.entities: select entities0_.entityA_id as entityA3_2_1_, entities0_.id as id1_, entities0_.id as id1_0_, entities0_.entityA_id as entityA3_1_0_, entities0_.name as name1_0_ from EntityB entities0_ where entities0_.entityA_id=?
04-21-2013 11:12:15,931 PM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b41a32f
04-21-2013 11:12:15,947 PM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: c98ff5eb-bdf7-4c8f-bd56-2bdc2eb34018 (<unnamed>)
04-21-2013 11:12:15,949 PM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-21-2013 11:12:15,951 PM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-21-2013 11:12:15,984 PM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-21-2013 11:12:15,986 PM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-21-2013 11:12:16,953 PM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-21-2013 11:12:16,955 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 11:12:16,957 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 11:12:16,959 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 11:12:16,960 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 11:12:16,962 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 11:12:16,964 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 11:12:16,965 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 11:12:16,967 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 11:12:16,968 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 11:12:16,971 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 11:12:41,728 PM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-21-2013 11:12:41,732 PM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-21-2013 11:12:41,735 PM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-21-2013 11:12:41,737 PM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-21-2013 11:12:42,027 PM  INFO DatabaseMetaData:120 - HHH000262: Table not found: EntityA
04-21-2013 11:12:42,030 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:42,318 PM  INFO DatabaseMetaData:120 - HHH000262: Table not found: EntityB
04-21-2013 11:12:42,321 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:42,606 PM  INFO DatabaseMetaData:120 - HHH000262: Table not found: EntityA
04-21-2013 11:12:42,893 PM  INFO DatabaseMetaData:120 - HHH000262: Table not found: EntityB
04-21-2013 11:12:42,896 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:42,899 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:42,905 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:12:43,358 PM  INFO DatabaseMetaData:120 - HHH000262: Table not found: hibernate_sequence
04-21-2013 11:12:43,361 PM DEBUG SchemaUpdate:226 - create table EntityA (id number(19,0) not null, name varchar2(50 char) not null, primary key (id))
04-21-2013 11:12:43,862 PM DEBUG SchemaUpdate:226 - create table EntityB (id number(19,0) not null, name varchar2(50 char) not null, entityA_id number(19,0) not null, primary key (id))
04-21-2013 11:12:44,170 PM DEBUG SchemaUpdate:226 - alter table EntityB add constraint FK457309FBCF98714 foreign key (entityA_id) references EntityA
04-21-2013 11:12:44,564 PM DEBUG SchemaUpdate:226 - create sequence hibernate_sequence
04-21-2013 11:12:45,130 PM ERROR SchemaUpdate:235 - HHH000388: Unsuccessful: create sequence hibernate_sequence
04-21-2013 11:12:45,132 PM ERROR SchemaUpdate:236 - ORA-01031: insufficient privileges

04-21-2013 11:12:45,134 PM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-21-2013 11:12:45,137 PM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-21-2013 11:12:45,139 PM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-21-2013 11:12:45,165 PM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-21-2013 11:12:45,462 PM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@153bedc4
04-21-2013 11:12:45,464 PM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem 
04-21-2013 11:12:52,874 PM DEBUG SessionImpl:243 - Opened session at timestamp: 13665571727
04-21-2013 11:17:43,603 PM  INFO Main2:29 - demo begins...
04-21-2013 11:17:44,325 PM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-21-2013 11:17:44,554 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 11:17:44,567 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 11:17:44,570 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 11:17:44,579 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7b6643
04-21-2013 11:17:44,590 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@688c4a77
04-21-2013 11:17:44,596 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@b035079
04-21-2013 11:17:44,610 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 11:17:44,613 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 11:17:44,616 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 11:17:44,625 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 11:17:44,628 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 11:17:44,630 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 11:17:44,644 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 11:17:44,647 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 11:17:44,670 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 11:17:44,679 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 11:17:44,681 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 11:17:44,684 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 11:17:44,695 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 11:17:44,698 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 11:17:44,700 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 11:17:44,713 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 11:17:44,717 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 11:17:44,722 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 11:17:44,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 11:17:44,741 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 11:17:44,744 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 11:17:44,759 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 11:17:44,761 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 11:17:44,772 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 11:17:44,775 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 11:17:44,784 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@37722456
04-21-2013 11:17:44,787 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37722456
04-21-2013 11:17:44,797 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@29f01a29
04-21-2013 11:17:44,800 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@29f01a29
04-21-2013 11:17:44,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@67ecd78
04-21-2013 11:17:44,818 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ecd78
04-21-2013 11:17:44,830 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@583a5794
04-21-2013 11:17:44,833 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@583a5794
04-21-2013 11:17:44,847 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 11:17:44,850 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 11:17:44,853 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 11:17:44,865 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4929b0e1
04-21-2013 11:17:44,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 11:17:44,883 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 11:17:44,888 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 11:17:44,899 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53d439fe
04-21-2013 11:17:44,911 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 11:17:44,914 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 11:17:44,923 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 11:17:44,926 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 11:17:44,934 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 11:17:44,936 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 11:17:44,944 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 11:17:44,947 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 11:17:44,960 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 11:17:44,962 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 11:17:44,967 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45e67e6a
04-21-2013 11:17:44,976 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@42f1916f
04-21-2013 11:17:44,984 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 11:17:44,987 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 11:17:44,990 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 11:17:45,002 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 11:17:45,005 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 11:17:45,008 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 11:17:45,020 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1d96f4b5
04-21-2013 11:17:45,034 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 11:17:45,038 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 11:17:45,041 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 11:17:45,050 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 11:17:45,054 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 11:17:45,057 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 11:17:45,065 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@76caf6c1
04-21-2013 11:17:45,126 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 11:17:45,131 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 11:17:45,140 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3219762f
04-21-2013 11:17:45,172 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 11:17:45,175 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 11:17:45,182 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@508aeb74
04-21-2013 11:17:45,195 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@7f636e4e
04-21-2013 11:17:45,217 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 11:17:45,220 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 11:17:45,226 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68302e67
04-21-2013 11:17:45,229 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3336a1a1
04-21-2013 11:17:45,233 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@47ad6b4b
04-21-2013 11:17:45,235 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a5f2db0
04-21-2013 11:17:45,238 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eb0a3f5
04-21-2013 11:17:45,241 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4edc41c5
04-21-2013 11:17:45,244 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-21-2013 11:17:45,249 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@794e113b
04-21-2013 11:17:45,412 PM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-21-2013 11:17:45,460 PM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-21-2013 11:17:45,473 PM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-21-2013 11:17:45,485 PM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-21-2013 11:17:45,568 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:17:45,574 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:17:45,582 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:17:45,585 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:17:45,596 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:17:45,601 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:17:45,617 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:17:45,623 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:17:45,629 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:17:45,634 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:17:45,640 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:17:45,645 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:17:45,651 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:17:45,657 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:17:45,663 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:17:45,684 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 11:17:45,687 PM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 11:17:45,690 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@132789d2
04-21-2013 11:17:45,692 PM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7b6643
04-21-2013 11:17:45,695 PM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@688c4a77
04-21-2013 11:17:45,698 PM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@b035079
04-21-2013 11:17:45,701 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 11:17:45,703 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 11:17:45,706 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@341049d3
04-21-2013 11:17:45,708 PM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 11:17:45,711 PM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 11:17:45,714 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65efb4be
04-21-2013 11:17:45,717 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 11:17:45,719 PM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 11:17:45,722 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5983e7de
04-21-2013 11:17:45,725 PM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 11:17:45,728 PM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 11:17:45,730 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7cbe41ec
04-21-2013 11:17:45,733 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 11:17:45,736 PM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 11:17:45,738 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2092dcdb
04-21-2013 11:17:45,741 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 11:17:45,744 PM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 11:17:45,746 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@48fd918a
04-21-2013 11:17:45,749 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 11:17:45,751 PM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 11:17:45,754 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53ce669e
04-21-2013 11:17:45,756 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 11:17:45,759 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c3c9c31
04-21-2013 11:17:45,762 PM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 11:17:45,764 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4934ce4a
04-21-2013 11:17:45,767 PM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@37722456
04-21-2013 11:17:45,769 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37722456
04-21-2013 11:17:45,772 PM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@29f01a29
04-21-2013 11:17:45,774 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@29f01a29
04-21-2013 11:17:45,779 PM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@67ecd78
04-21-2013 11:17:45,783 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ecd78
04-21-2013 11:17:45,787 PM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@583a5794
04-21-2013 11:17:45,790 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@583a5794
04-21-2013 11:17:45,793 PM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 11:17:45,796 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 11:17:45,799 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d3f136e
04-21-2013 11:17:45,801 PM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4929b0e1
04-21-2013 11:17:45,804 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 11:17:45,807 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 11:17:45,810 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7cd37a
04-21-2013 11:17:45,812 PM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53d439fe
04-21-2013 11:17:45,815 PM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 11:17:45,817 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5815338
04-21-2013 11:17:45,820 PM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 11:17:45,823 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ed0220c
04-21-2013 11:17:45,825 PM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 11:17:45,828 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a383118
04-21-2013 11:17:45,830 PM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 11:17:45,833 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26aae86e
04-21-2013 11:17:45,836 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 11:17:45,838 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79a61172
04-21-2013 11:17:45,841 PM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45e67e6a
04-21-2013 11:17:45,844 PM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@42f1916f
04-21-2013 11:17:45,847 PM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 11:17:45,849 PM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 11:17:45,852 PM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@1dd49247
04-21-2013 11:17:45,854 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 11:17:45,857 PM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 11:17:45,860 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5fe8ce8
04-21-2013 11:17:45,862 PM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@1d96f4b5
04-21-2013 11:17:45,865 PM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 11:17:45,867 PM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 11:17:45,870 PM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@69fe571f
04-21-2013 11:17:45,872 PM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 11:17:45,875 PM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 11:17:45,878 PM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44d6b059
04-21-2013 11:17:45,880 PM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@76caf6c1
04-21-2013 11:17:45,883 PM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 11:17:45,885 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bdccedd
04-21-2013 11:17:45,888 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3219762f
04-21-2013 11:17:45,890 PM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 11:17:45,894 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7bd6747b
04-21-2013 11:17:45,896 PM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@508aeb74
04-21-2013 11:17:45,899 PM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@7f636e4e
04-21-2013 11:17:45,902 PM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 11:17:45,905 PM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65d0d124
04-21-2013 11:17:45,909 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45c3987
04-21-2013 11:17:45,912 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-21-2013 11:17:45,915 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@747917a
04-21-2013 11:17:45,918 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-21-2013 11:17:45,921 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-21-2013 11:17:45,924 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-21-2013 11:17:45,927 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-21-2013 11:17:45,931 PM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-21-2013 11:17:45,935 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-21-2013 11:17:45,938 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-21-2013 11:17:45,941 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:17:45,943 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-21-2013 11:17:45,946 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-21-2013 11:17:45,949 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-21-2013 11:17:45,953 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-21-2013 11:17:45,956 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-21-2013 11:17:45,959 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-21-2013 11:17:45,962 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-21-2013 11:17:45,965 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-21-2013 11:17:45,968 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-21-2013 11:17:45,971 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-21-2013 11:17:45,974 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-21-2013 11:17:45,977 PM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-21-2013 11:17:45,980 PM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-21-2013 11:17:46,424 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:17:46,472 PM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Users/Asus/workspace/com-mme-hbmjpa/target/classes/
04-21-2013 11:17:46,478 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-21-2013 11:17:46,640 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-21-2013 11:17:46,715 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-21-2013 11:17:46,721 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-21-2013 11:17:46,751 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-21-2013 11:17:46,754 PM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-21-2013 11:17:46,761 PM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-21-2013 11:17:46,796 PM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-21-2013 11:17:46,799 PM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-21-2013 11:17:46,843 PM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-21-2013 11:17:46,913 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-21-2013 11:17:46,917 PM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-21-2013 11:17:47,098 PM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-21-2013 11:17:47,168 PM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-21-2013 11:17:47,411 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 11:17:47,414 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 11:17:47,446 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-21-2013 11:17:47,609 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:17:47,628 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:17:47,680 PM DEBUG EntityBinder:354 - Import with entity name Contact
04-21-2013 11:17:47,706 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-21-2013 11:17:47,930 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:47,955 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-21-2013 11:17:47,973 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-21-2013 11:17:47,982 PM DEBUG PropertyBinder:256 - Building property partyId
04-21-2013 11:17:48,005 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,009 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-21-2013 11:17:48,011 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-21-2013 11:17:48,014 PM DEBUG PropertyBinder:256 - Building property address1
04-21-2013 11:17:48,017 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,021 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-21-2013 11:17:48,023 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-21-2013 11:17:48,025 PM DEBUG PropertyBinder:256 - Building property address2
04-21-2013 11:17:48,028 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,032 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-21-2013 11:17:48,035 PM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-21-2013 11:17:48,038 PM DEBUG PropertyBinder:256 - Building property address3
04-21-2013 11:17:48,042 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,046 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-21-2013 11:17:48,048 PM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-21-2013 11:17:48,050 PM DEBUG PropertyBinder:256 - Building property channel
04-21-2013 11:17:48,053 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,057 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-21-2013 11:17:48,060 PM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-21-2013 11:17:48,063 PM DEBUG PropertyBinder:256 - Building property countryCode
04-21-2013 11:17:48,066 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,069 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-21-2013 11:17:48,072 PM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-21-2013 11:17:48,074 PM DEBUG PropertyBinder:256 - Building property email
04-21-2013 11:17:48,077 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,080 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-21-2013 11:17:48,083 PM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-21-2013 11:17:48,085 PM DEBUG PropertyBinder:256 - Building property fax
04-21-2013 11:17:48,089 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,092 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-21-2013 11:17:48,094 PM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-21-2013 11:17:48,097 PM DEBUG PropertyBinder:256 - Building property firstname
04-21-2013 11:17:48,100 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,104 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-21-2013 11:17:48,106 PM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-21-2013 11:17:48,108 PM DEBUG PropertyBinder:256 - Building property lastname
04-21-2013 11:17:48,111 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,115 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-21-2013 11:17:48,117 PM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-21-2013 11:17:48,120 PM DEBUG PropertyBinder:256 - Building property login
04-21-2013 11:17:48,123 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,126 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-21-2013 11:17:48,129 PM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-21-2013 11:17:48,131 PM DEBUG PropertyBinder:256 - Building property mobile
04-21-2013 11:17:48,134 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,138 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-21-2013 11:17:48,141 PM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-21-2013 11:17:48,144 PM DEBUG PropertyBinder:256 - Building property organisation
04-21-2013 11:17:48,147 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,151 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-21-2013 11:17:48,153 PM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-21-2013 11:17:48,156 PM DEBUG PropertyBinder:256 - Building property partyType
04-21-2013 11:17:48,160 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,163 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-21-2013 11:17:48,165 PM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-21-2013 11:17:48,169 PM DEBUG PropertyBinder:256 - Building property phone
04-21-2013 11:17:48,174 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,179 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-21-2013 11:17:48,182 PM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-21-2013 11:17:48,184 PM DEBUG PropertyBinder:256 - Building property postcode
04-21-2013 11:17:48,187 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,191 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-21-2013 11:17:48,194 PM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-21-2013 11:17:48,197 PM DEBUG PropertyBinder:256 - Building property state
04-21-2013 11:17:48,200 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,204 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-21-2013 11:17:48,206 PM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-21-2013 11:17:48,209 PM DEBUG PropertyBinder:256 - Building property status
04-21-2013 11:17:48,212 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,215 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-21-2013 11:17:48,218 PM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-21-2013 11:17:48,220 PM DEBUG PropertyBinder:256 - Building property suburb
04-21-2013 11:17:48,224 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,227 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-21-2013 11:17:48,229 PM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-21-2013 11:17:48,232 PM DEBUG PropertyBinder:256 - Building property type
04-21-2013 11:17:48,245 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-21-2013 11:17:48,249 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:17:48,252 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:17:48,258 PM DEBUG EntityBinder:354 - Import with entity name EntityA
04-21-2013 11:17:48,261 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-21-2013 11:17:48,409 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,412 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:17:48,415 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:17:48,417 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:17:48,422 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:17:48,426 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,437 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,506 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,515 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,529 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-21-2013 11:17:48,544 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:17:48,547 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-21-2013 11:17:48,551 PM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-21-2013 11:17:48,574 PM DEBUG PropertyBinder:256 - Building property entities
04-21-2013 11:17:48,578 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,582 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:17:48,585 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:17:48,587 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:17:48,590 PM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-21-2013 11:17:48,595 PM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-21-2013 11:17:48,598 PM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-21-2013 11:17:48,600 PM DEBUG EntityBinder:354 - Import with entity name EntityB
04-21-2013 11:17:48,603 PM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-21-2013 11:17:48,649 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,652 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-21-2013 11:17:48,655 PM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-21-2013 11:17:48,657 PM DEBUG PropertyBinder:256 - Building property id
04-21-2013 11:17:48,660 PM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-21-2013 11:17:48,663 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,680 PM DEBUG PropertyBinder:256 - Building property entityA
04-21-2013 11:17:48,684 PM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-21-2013 11:17:48,689 PM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-21-2013 11:17:48,691 PM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-21-2013 11:17:48,694 PM DEBUG PropertyBinder:256 - Building property name
04-21-2013 11:17:48,700 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-21-2013 11:17:48,702 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-21-2013 11:17:48,704 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-21-2013 11:17:48,706 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-21-2013 11:17:48,709 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-21-2013 11:17:48,711 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-21-2013 11:17:48,713 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-21-2013 11:17:48,715 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-21-2013 11:17:48,719 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-21-2013 11:17:48,723 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-21-2013 11:17:48,727 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-21-2013 11:17:48,730 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-21-2013 11:17:48,732 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-21-2013 11:17:48,735 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-21-2013 11:17:48,739 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-21-2013 11:17:48,741 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-21-2013 11:17:48,743 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-21-2013 11:17:48,746 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-21-2013 11:17:48,748 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-21-2013 11:17:48,750 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-21-2013 11:17:48,752 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:17:48,754 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:17:48,757 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-21-2013 11:17:48,759 PM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-21-2013 11:17:48,764 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 11:17:48,795 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 11:17:48,797 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 11:17:48,799 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 11:17:48,801 PM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:17:48,807 PM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-21-2013 11:17:48,814 PM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-21-2013 11:17:48,823 PM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-21-2013 11:17:48,827 PM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-21-2013 11:17:48,829 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 11:17:48,830 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 11:17:48,832 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 11:17:48,834 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 11:17:48,914 PM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-21-2013 11:17:49,548 PM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-21-2013 11:17:49,551 PM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-21-2013 11:17:49,555 PM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-21-2013 11:17:49,559 PM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-21-2013 11:17:49,695 PM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-21-2013 11:17:58,032 PM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-21-2013 11:17:58,036 PM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-21-2013 11:17:58,040 PM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-21-2013 11:17:58,043 PM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-21-2013 11:17:59,680 PM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-21-2013 11:18:00,350 PM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-21-2013 11:18:00,353 PM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-21-2013 11:18:00,356 PM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-21-2013 11:18:00,358 PM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-21-2013 11:18:00,360 PM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-21-2013 11:18:00,362 PM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-21-2013 11:18:00,364 PM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-21-2013 11:18:00,367 PM DEBUG SettingsFactory:157 - Connection release mode: auto
04-21-2013 11:18:00,369 PM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-21-2013 11:18:00,389 PM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-21-2013 11:18:00,392 PM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-21-2013 11:18:00,394 PM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-21-2013 11:18:00,396 PM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-21-2013 11:18:00,399 PM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-21-2013 11:18:00,415 PM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-21-2013 11:18:00,418 PM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-21-2013 11:18:00,420 PM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-21-2013 11:18:00,423 PM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-21-2013 11:18:00,425 PM DEBUG SettingsFactory:242 - Query cache: disabled
04-21-2013 11:18:00,427 PM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-21-2013 11:18:00,435 PM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-21-2013 11:18:00,438 PM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-21-2013 11:18:00,440 PM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-21-2013 11:18:00,442 PM DEBUG SettingsFactory:281 - Statistics: disabled
04-21-2013 11:18:00,445 PM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-21-2013 11:18:00,447 PM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-21-2013 11:18:00,449 PM DEBUG SettingsFactory:317 - Named query checking : enabled
04-21-2013 11:18:00,451 PM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-21-2013 11:18:00,454 PM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-21-2013 11:18:00,520 PM DEBUG SessionFactoryImpl:217 - Building session factory
04-21-2013 11:18:00,586 PM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-21-2013 11:18:00,590 PM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 8, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\jdk1.6.0_43;D:\Work\NWS\development\tools\apache-maven-3.0.5-bin\apache-maven-3.0.5\bin;D:\Work\NWS\development\tools\instantclient-basic-windows.x64-11.2.0.3.0\instantclient_11_2;D:\Work\NWS\development\tools\wintail.exe;D:\Work\NWS\development\tools\fuse-esb-full-7.1.0.fuse-047\fuse-esb-7.1.0.fuse-047\bin;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.2, user.home=C:\Users\Asus, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Users\Asus\workspace\com-mme-hbmjpa\target\classes;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Asus\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Asus\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.danielme.demo.Main2, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-21-2013 11:18:01,141 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:18:01,147 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:18:01,150 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:18:01,622 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityB
04-21-2013 11:18:01,624 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityB where id =?
04-21-2013 11:18:01,627 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entityb_.id, entityb_.entityA_id as entityA3_2_, entityb_.name as name2_ from EntityB entityb_ where entityb_.id=?
04-21-2013 11:18:01,630 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityB (entityA_id, name, id) values (?, ?, ?)
04-21-2013 11:18:01,632 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityB set entityA_id=?, name=? where id=?
04-21-2013 11:18:01,635 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityB where id=?
04-21-2013 11:18:01,807 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.Contact
04-21-2013 11:18:01,811 PM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-21-2013 11:18:01,815 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-21-2013 11:18:01,824 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-21-2013 11:18:01,827 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-21-2013 11:18:01,831 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-21-2013 11:18:01,880 PM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityA
04-21-2013 11:18:01,883 PM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityA where id =?
04-21-2013 11:18:01,885 PM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entitya_.id, entitya_.name as name1_ from EntityA entitya_ where entitya_.id=?
04-21-2013 11:18:01,890 PM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityA (name, id) values (?, ?)
04-21-2013 11:18:01,894 PM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityA set name=? where id=?
04-21-2013 11:18:01,898 PM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityA where id=?
04-21-2013 11:18:01,945 PM DEBUG AbstractCollectionPersister:613 - Static SQL for collection: com.danielme.demo.model.EntityA.entities
04-21-2013 11:18:01,947 PM DEBUG AbstractCollectionPersister:614 -  Row insert: update EntityB set entityA_id=? where id=?
04-21-2013 11:18:01,950 PM DEBUG AbstractCollectionPersister:616 -  Row delete: update EntityB set entityA_id=null where entityA_id=? and id=?
04-21-2013 11:18:01,953 PM DEBUG AbstractCollectionPersister:617 -  One-shot delete: update EntityB set entityA_id=null where entityA_id=?
04-21-2013 11:18:02,052 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:18:02,064 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:18:02,076 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:18:02,088 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:18:02,100 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:18:02,112 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:18:02,124 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-21-2013 11:18:02,136 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-21-2013 11:18:02,149 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:18:02,162 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:18:02,211 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:18:02,224 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:18:02,253 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [NONE]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:18:02,262 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [READ]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-21-2013 11:18:02,273 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:18:02,283 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE_NOWAIT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:18:02,293 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [FORCE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:18:02,299 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_READ]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:18:02,305 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_WRITE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-21-2013 11:18:02,311 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-21-2013 11:18:02,316 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:18:02,322 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:18:02,328 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:18:02,333 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-21-2013 11:18:02,338 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [NONE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:18:02,344 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:18:02,349 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:18:02,354 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE_NOWAIT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:18:02,359 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [FORCE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:18:02,365 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:18:02,370 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_WRITE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-21-2013 11:18:02,375 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-21-2013 11:18:02,381 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:18:02,386 PM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-21-2013 11:18:02,406 PM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:18:02,415 PM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-21-2013 11:18:02,441 PM DEBUG OneToManyLoader:82 - Static select for one-to-many com.danielme.demo.model.EntityA.entities: select entities0_.entityA_id as entityA3_1_1_, entities0_.id as id1_, entities0_.id as id2_0_, entities0_.entityA_id as entityA3_2_0_, entities0_.name as name2_0_ from EntityB entities0_ where entities0_.entityA_id=?
04-21-2013 11:18:02,458 PM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@380b4f9
04-21-2013 11:18:02,476 PM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: fe4be364-4a08-4a7d-9e25-484e02691b99 (<unnamed>)
04-21-2013 11:18:02,480 PM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-21-2013 11:18:02,483 PM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-21-2013 11:18:02,529 PM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-21-2013 11:18:02,531 PM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-21-2013 11:18:03,131 PM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-21-2013 11:18:03,133 PM DEBUG Configuration:3366 - Processing hbm.xml files
04-21-2013 11:18:03,135 PM DEBUG Configuration:3396 - Process annotated classes
04-21-2013 11:18:03,137 PM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-21-2013 11:18:03,138 PM DEBUG Configuration:1578 - Processing extends queue
04-21-2013 11:18:03,140 PM DEBUG Configuration:1632 - Processing extends queue
04-21-2013 11:18:03,142 PM DEBUG Configuration:1581 - Processing collection mappings
04-21-2013 11:18:03,143 PM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-21-2013 11:18:03,145 PM DEBUG Configuration:1599 - Processing association property references
04-21-2013 11:18:03,147 PM DEBUG Configuration:1621 - Processing foreign key constraints
04-21-2013 11:18:03,149 PM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-21-2013 11:18:26,627 PM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-21-2013 11:18:26,631 PM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-21-2013 11:18:26,634 PM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-21-2013 11:18:26,636 PM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-21-2013 11:18:28,890 PM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.ENTITYA
04-21-2013 11:18:28,892 PM  INFO TableMetadata:66 - HHH000037: Columns: [id, name]
04-21-2013 11:18:28,894 PM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-21-2013 11:18:28,897 PM  INFO TableMetadata:69 - HHH000126: Indexes: [sys_c003807]
04-21-2013 11:18:31,359 PM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.ENTITYB
04-21-2013 11:18:31,362 PM  INFO TableMetadata:66 - HHH000037: Columns: [id, entitya_id, name]
04-21-2013 11:18:31,364 PM  INFO TableMetadata:68 - HHH000108: Foreign keys: [fk457309fbcf98714]
04-21-2013 11:18:31,367 PM  INFO TableMetadata:69 - HHH000126: Indexes: [sys_c003811]
04-21-2013 11:18:31,370 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:18:31,373 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:18:31,379 PM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-21-2013 11:18:31,650 PM  INFO DatabaseMetaData:120 - HHH000262: Table not found: hibernate_sequence
04-21-2013 11:18:31,653 PM DEBUG SchemaUpdate:226 - create sequence hibernate_sequence
04-21-2013 11:18:32,165 PM ERROR SchemaUpdate:235 - HHH000388: Unsuccessful: create sequence hibernate_sequence
04-21-2013 11:18:32,167 PM ERROR SchemaUpdate:236 - ORA-01031: insufficient privileges

04-21-2013 11:18:32,169 PM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-21-2013 11:18:32,172 PM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-21-2013 11:18:32,174 PM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-21-2013 11:18:32,199 PM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-21-2013 11:18:32,515 PM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@15ec4535
04-21-2013 11:18:32,518 PM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem 
04-21-2013 11:18:36,487 PM DEBUG SessionImpl:243 - Opened session at timestamp: 13665575163
04-21-2013 11:18:38,984 PM DEBUG AbstractTransactionImpl:158 - begin
04-21-2013 11:18:38,987 PM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-21-2013 11:18:38,990 PM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-21-2013 11:18:38,996 PM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-21-2013 11:18:43,733 PM DEBUG Loader:2046 - Loading entity: [com.danielme.demo.model.Contact#000001]
04-21-2013 11:18:43,791 PM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-21-2013 11:18:44,292 PM DEBUG Loader:854 - Result set row: 0
04-21-2013 11:18:44,293 PM DEBUG Loader:1355 - Result row: EntityKey[com.danielme.demo.model.Contact#000001]
04-21-2013 11:18:44,323 PM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.danielme.demo.model.Contact#000001]
04-21-2013 11:18:44,331 PM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.danielme.demo.model.Contact#000001]
04-21-2013 11:18:44,332 PM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-21-2013 11:18:44,332 PM DEBUG Loader:2070 - Done entity load
04-22-2013 07:04:00,781 AM  INFO Main2:29 - demo begins...
04-22-2013 07:04:05,218 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 07:04:05,284 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@729b1670
04-22-2013 07:04:05,286 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@729b1670
04-22-2013 07:04:05,286 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@729b1670
04-22-2013 07:04:05,289 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29a7789c
04-22-2013 07:04:05,293 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f35f44e
04-22-2013 07:04:05,295 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1420c906
04-22-2013 07:04:05,302 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@35a8d460
04-22-2013 07:04:05,303 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@35a8d460
04-22-2013 07:04:05,304 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35a8d460
04-22-2013 07:04:05,306 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@32830122
04-22-2013 07:04:05,307 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@32830122
04-22-2013 07:04:05,308 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@32830122
04-22-2013 07:04:05,311 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@67148603
04-22-2013 07:04:05,312 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@67148603
04-22-2013 07:04:05,317 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67148603
04-22-2013 07:04:05,320 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@b955970
04-22-2013 07:04:05,320 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@b955970
04-22-2013 07:04:05,321 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b955970
04-22-2013 07:04:05,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@7d5b1773
04-22-2013 07:04:05,325 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@7d5b1773
04-22-2013 07:04:05,325 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d5b1773
04-22-2013 07:04:05,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@41759d12
04-22-2013 07:04:05,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@41759d12
04-22-2013 07:04:05,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41759d12
04-22-2013 07:04:05,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@78cade31
04-22-2013 07:04:05,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@78cade31
04-22-2013 07:04:05,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78cade31
04-22-2013 07:04:05,339 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c73f0d8
04-22-2013 07:04:05,340 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c73f0d8
04-22-2013 07:04:05,342 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@340523df
04-22-2013 07:04:05,343 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@340523df
04-22-2013 07:04:05,345 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@4ca68fd8
04-22-2013 07:04:05,346 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4ca68fd8
04-22-2013 07:04:05,348 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@e96b5c2
04-22-2013 07:04:05,349 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@e96b5c2
04-22-2013 07:04:05,353 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@402fb002
04-22-2013 07:04:05,354 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@402fb002
04-22-2013 07:04:05,357 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@774b6b02
04-22-2013 07:04:05,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@774b6b02
04-22-2013 07:04:05,361 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2151b0a5
04-22-2013 07:04:05,362 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2151b0a5
04-22-2013 07:04:05,362 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2151b0a5
04-22-2013 07:04:05,365 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@600dac21
04-22-2013 07:04:05,368 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@6910b640
04-22-2013 07:04:05,368 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6910b640
04-22-2013 07:04:05,369 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6910b640
04-22-2013 07:04:05,371 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10b914b3
04-22-2013 07:04:05,374 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@56f449b8
04-22-2013 07:04:05,375 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56f449b8
04-22-2013 07:04:05,377 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@734b84c7
04-22-2013 07:04:05,377 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@734b84c7
04-22-2013 07:04:05,380 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@bc794cc
04-22-2013 07:04:05,380 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bc794cc
04-22-2013 07:04:05,382 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5809fdee
04-22-2013 07:04:05,383 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5809fdee
04-22-2013 07:04:05,387 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43bb326c
04-22-2013 07:04:05,387 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43bb326c
04-22-2013 07:04:05,389 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6defe475
04-22-2013 07:04:05,391 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5918cb3a
04-22-2013 07:04:05,393 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@674c5b37
04-22-2013 07:04:05,394 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@674c5b37
04-22-2013 07:04:05,394 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@674c5b37
04-22-2013 07:04:05,396 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@528a52b6
04-22-2013 07:04:05,397 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@528a52b6
04-22-2013 07:04:05,398 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@528a52b6
04-22-2013 07:04:05,400 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@242da5a6
04-22-2013 07:04:05,402 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@60a415a3
04-22-2013 07:04:05,402 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60a415a3
04-22-2013 07:04:05,403 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@60a415a3
04-22-2013 07:04:05,405 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27a36a2
04-22-2013 07:04:05,406 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27a36a2
04-22-2013 07:04:05,407 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27a36a2
04-22-2013 07:04:05,409 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@1d716fa0
04-22-2013 07:04:05,418 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@408fbecf
04-22-2013 07:04:05,419 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@408fbecf
04-22-2013 07:04:05,420 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cd4544
04-22-2013 07:04:05,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@5f873eb2
04-22-2013 07:04:05,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f873eb2
04-22-2013 07:04:05,432 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64c272bc
04-22-2013 07:04:05,435 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@2415a94f
04-22-2013 07:04:05,442 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@1e1ec86
04-22-2013 07:04:05,443 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e1ec86
04-22-2013 07:04:05,445 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38a1aa85
04-22-2013 07:04:05,445 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7dc21ece
04-22-2013 07:04:05,446 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5374a6e2
04-22-2013 07:04:05,447 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f786a3c
04-22-2013 07:04:05,447 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a869113
04-22-2013 07:04:05,448 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@689e8c34
04-22-2013 07:04:05,449 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@106df95
04-22-2013 07:04:05,450 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a40afb9
04-22-2013 07:04:05,484 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 07:04:05,497 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 07:04:05,501 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 07:04:05,504 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 07:04:05,525 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:04:05,527 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:04:05,529 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:04:05,529 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:04:05,536 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:04:05,538 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:04:05,541 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:04:05,542 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:04:05,544 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:04:05,546 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:04:05,548 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:04:05,550 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:04:05,552 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:04:05,553 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:04:05,555 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:04:05,561 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@729b1670
04-22-2013 07:04:05,562 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@729b1670
04-22-2013 07:04:05,562 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@729b1670
04-22-2013 07:04:05,563 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29a7789c
04-22-2013 07:04:05,564 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f35f44e
04-22-2013 07:04:05,564 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1420c906
04-22-2013 07:04:05,565 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@35a8d460
04-22-2013 07:04:05,566 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@35a8d460
04-22-2013 07:04:05,566 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35a8d460
04-22-2013 07:04:05,567 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@32830122
04-22-2013 07:04:05,568 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@32830122
04-22-2013 07:04:05,568 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@32830122
04-22-2013 07:04:05,569 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@67148603
04-22-2013 07:04:05,570 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@67148603
04-22-2013 07:04:05,570 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67148603
04-22-2013 07:04:05,571 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@b955970
04-22-2013 07:04:05,571 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@b955970
04-22-2013 07:04:05,572 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b955970
04-22-2013 07:04:05,573 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@7d5b1773
04-22-2013 07:04:05,573 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@7d5b1773
04-22-2013 07:04:05,574 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d5b1773
04-22-2013 07:04:05,575 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@41759d12
04-22-2013 07:04:05,575 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@41759d12
04-22-2013 07:04:05,576 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41759d12
04-22-2013 07:04:05,576 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@78cade31
04-22-2013 07:04:05,577 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@78cade31
04-22-2013 07:04:05,578 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78cade31
04-22-2013 07:04:05,578 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c73f0d8
04-22-2013 07:04:05,579 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c73f0d8
04-22-2013 07:04:05,579 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@340523df
04-22-2013 07:04:05,580 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@340523df
04-22-2013 07:04:05,581 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@4ca68fd8
04-22-2013 07:04:05,581 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4ca68fd8
04-22-2013 07:04:05,582 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@e96b5c2
04-22-2013 07:04:05,582 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@e96b5c2
04-22-2013 07:04:05,583 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@402fb002
04-22-2013 07:04:05,584 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@402fb002
04-22-2013 07:04:05,584 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@774b6b02
04-22-2013 07:04:05,585 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@774b6b02
04-22-2013 07:04:05,585 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2151b0a5
04-22-2013 07:04:05,586 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2151b0a5
04-22-2013 07:04:05,587 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2151b0a5
04-22-2013 07:04:05,587 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@600dac21
04-22-2013 07:04:05,588 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@6910b640
04-22-2013 07:04:05,588 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6910b640
04-22-2013 07:04:05,589 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6910b640
04-22-2013 07:04:05,590 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10b914b3
04-22-2013 07:04:05,590 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@56f449b8
04-22-2013 07:04:05,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56f449b8
04-22-2013 07:04:05,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@734b84c7
04-22-2013 07:04:05,592 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@734b84c7
04-22-2013 07:04:05,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@bc794cc
04-22-2013 07:04:05,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bc794cc
04-22-2013 07:04:05,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5809fdee
04-22-2013 07:04:05,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5809fdee
04-22-2013 07:04:05,595 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43bb326c
04-22-2013 07:04:05,595 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43bb326c
04-22-2013 07:04:05,596 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6defe475
04-22-2013 07:04:05,597 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5918cb3a
04-22-2013 07:04:05,597 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@674c5b37
04-22-2013 07:04:05,598 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@674c5b37
04-22-2013 07:04:05,598 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@674c5b37
04-22-2013 07:04:05,599 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@528a52b6
04-22-2013 07:04:05,600 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@528a52b6
04-22-2013 07:04:05,600 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@528a52b6
04-22-2013 07:04:05,601 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@242da5a6
04-22-2013 07:04:05,601 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@60a415a3
04-22-2013 07:04:05,602 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60a415a3
04-22-2013 07:04:05,603 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@60a415a3
04-22-2013 07:04:05,603 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27a36a2
04-22-2013 07:04:05,604 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27a36a2
04-22-2013 07:04:05,604 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27a36a2
04-22-2013 07:04:05,605 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@1d716fa0
04-22-2013 07:04:05,606 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@408fbecf
04-22-2013 07:04:05,606 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@408fbecf
04-22-2013 07:04:05,607 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cd4544
04-22-2013 07:04:05,607 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@5f873eb2
04-22-2013 07:04:05,608 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f873eb2
04-22-2013 07:04:05,609 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64c272bc
04-22-2013 07:04:05,609 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@2415a94f
04-22-2013 07:04:05,610 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@1e1ec86
04-22-2013 07:04:05,610 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e1ec86
04-22-2013 07:04:05,611 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1702679a
04-22-2013 07:04:05,612 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1edfbb43
04-22-2013 07:04:05,614 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@727f3b8a
04-22-2013 07:04:05,614 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f1e1bbf
04-22-2013 07:04:05,615 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11afd9cc
04-22-2013 07:04:05,616 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3003e926
04-22-2013 07:04:05,616 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50bfd66a
04-22-2013 07:04:05,617 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6295f290
04-22-2013 07:04:05,618 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:04:05,619 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:04:05,619 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:04:05,620 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:04:05,620 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:04:05,621 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:04:05,622 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:04:05,622 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:04:05,623 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:04:05,624 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:04:05,624 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:04:05,625 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:04:05,626 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:04:05,627 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:04:05,628 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:04:05,630 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-22-2013 07:04:05,874 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:04:05,886 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 07:04:05,888 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-22-2013 07:04:05,928 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-22-2013 07:04:05,945 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-22-2013 07:04:05,947 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-22-2013 07:04:05,953 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-22-2013 07:04:05,954 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-22-2013 07:04:05,956 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-22-2013 07:04:05,965 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:04:05,966 AM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-22-2013 07:04:05,977 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 07:04:05,994 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 07:04:05,995 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 07:04:06,048 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 07:04:06,061 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 07:04:06,144 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:04:06,145 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:04:06,156 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-22-2013 07:04:06,217 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:04:06,222 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:04:06,236 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 07:04:06,246 AM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-22-2013 07:04:06,322 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,330 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 07:04:06,336 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 07:04:06,340 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 07:04:06,353 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,355 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 07:04:06,356 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 07:04:06,357 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 07:04:06,358 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,360 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 07:04:06,361 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 07:04:06,362 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 07:04:06,363 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,364 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 07:04:06,366 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 07:04:06,367 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 07:04:06,368 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,369 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 07:04:06,370 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 07:04:06,371 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 07:04:06,372 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,372 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 07:04:06,373 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 07:04:06,374 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 07:04:06,374 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,375 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 07:04:06,376 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 07:04:06,377 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 07:04:06,378 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,379 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 07:04:06,380 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 07:04:06,380 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 07:04:06,381 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,382 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 07:04:06,383 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 07:04:06,384 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 07:04:06,384 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,385 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 07:04:06,386 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 07:04:06,387 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 07:04:06,388 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,389 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 07:04:06,390 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 07:04:06,390 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 07:04:06,391 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,392 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 07:04:06,393 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 07:04:06,394 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 07:04:06,395 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,396 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 07:04:06,397 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 07:04:06,399 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 07:04:06,400 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,401 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 07:04:06,402 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 07:04:06,403 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 07:04:06,404 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,405 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 07:04:06,406 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 07:04:06,406 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 07:04:06,407 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,408 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 07:04:06,409 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 07:04:06,410 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 07:04:06,411 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,412 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 07:04:06,412 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 07:04:06,413 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 07:04:06,414 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,415 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 07:04:06,415 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 07:04:06,416 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 07:04:06,417 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,418 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 07:04:06,419 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 07:04:06,419 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 07:04:06,420 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,421 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 07:04:06,422 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 07:04:06,424 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 07:04:06,429 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-22-2013 07:04:06,430 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:04:06,431 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:04:06,433 AM DEBUG EntityBinder:354 - Import with entity name EntityA
04-22-2013 07:04:06,434 AM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-22-2013 07:04:06,469 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,470 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-22-2013 07:04:06,471 AM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-22-2013 07:04:06,472 AM DEBUG PropertyBinder:256 - Building property id
04-22-2013 07:04:06,473 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-22-2013 07:04:06,474 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,476 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,495 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,497 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,499 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-22-2013 07:04:06,502 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-22-2013 07:04:06,503 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-22-2013 07:04:06,504 AM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-22-2013 07:04:06,510 AM DEBUG PropertyBinder:256 - Building property entities
04-22-2013 07:04:06,511 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,512 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-22-2013 07:04:06,513 AM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-22-2013 07:04:06,513 AM DEBUG PropertyBinder:256 - Building property name
04-22-2013 07:04:06,514 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-22-2013 07:04:06,515 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:04:06,515 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:04:06,516 AM DEBUG EntityBinder:354 - Import with entity name EntityB
04-22-2013 07:04:06,517 AM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-22-2013 07:04:06,533 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,534 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-22-2013 07:04:06,535 AM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-22-2013 07:04:06,536 AM DEBUG PropertyBinder:256 - Building property id
04-22-2013 07:04:06,537 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-22-2013 07:04:06,538 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,541 AM DEBUG PropertyBinder:256 - Building property entityA
04-22-2013 07:04:06,542 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-22-2013 07:04:06,543 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-22-2013 07:04:06,544 AM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-22-2013 07:04:06,545 AM DEBUG PropertyBinder:256 - Building property name
04-22-2013 07:04:06,547 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 07:04:06,547 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 07:04:06,548 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 07:04:06,549 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 07:04:06,549 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 07:04:06,550 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 07:04:06,550 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 07:04:06,551 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 07:04:06,552 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 07:04:06,553 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 07:04:06,554 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 07:04:06,554 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 07:04:06,555 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 07:04:06,555 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 07:04:06,556 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 07:04:06,556 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 07:04:06,557 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 07:04:06,557 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 07:04:06,558 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 07:04:06,559 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 07:04:06,559 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-22-2013 07:04:06,560 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-22-2013 07:04:06,560 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-22-2013 07:04:06,561 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-22-2013 07:04:06,562 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:04:06,572 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:04:06,573 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:04:06,573 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:04:06,574 AM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-22-2013 07:04:06,581 AM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-22-2013 07:04:06,583 AM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-22-2013 07:04:06,585 AM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-22-2013 07:04:06,586 AM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-22-2013 07:04:06,586 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:04:06,587 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:04:06,587 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:04:06,588 AM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-22-2013 07:04:06,628 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 07:04:06,756 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 07:04:06,757 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 07:04:06,758 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 07:04:06,759 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 07:04:06,793 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 07:04:15,062 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 07:04:15,064 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 07:04:15,066 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 07:04:15,067 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 07:04:16,329 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 07:04:16,925 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 07:04:16,926 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 07:04:16,926 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 07:04:16,927 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 07:04:16,927 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 07:04:16,928 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 07:04:16,928 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 07:04:16,929 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 07:04:16,929 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 07:04:16,939 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 07:04:16,940 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 07:04:16,940 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 07:04:16,941 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 07:04:16,941 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 07:04:16,945 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 07:04:16,946 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 07:04:16,946 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 07:04:16,947 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 07:04:16,948 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 07:04:16,948 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 07:04:16,950 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 07:04:16,951 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 07:04:16,951 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 07:04:16,952 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 07:04:16,952 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 07:04:16,953 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 07:04:16,953 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 07:04:16,954 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 07:04:16,954 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 07:04:16,976 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 07:04:16,991 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 07:04:16,992 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.rmi.server.randomIDs=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, user.name=Harris, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.danielme.demo.Main2, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 07:04:17,133 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:04:17,134 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:04:17,134 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:04:17,273 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityB
04-22-2013 07:04:17,274 AM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityB where id =?
04-22-2013 07:04:17,275 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entityb_.id, entityb_.entityA_id as entityA3_2_, entityb_.name as name2_ from EntityB entityb_ where entityb_.id=?
04-22-2013 07:04:17,275 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityB (entityA_id, name, id) values (?, ?, ?)
04-22-2013 07:04:17,276 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityB set entityA_id=?, name=? where id=?
04-22-2013 07:04:17,276 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityB where id=?
04-22-2013 07:04:17,317 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.Contact
04-22-2013 07:04:17,318 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 07:04:17,318 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 07:04:17,320 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 07:04:17,320 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 07:04:17,321 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 07:04:17,333 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityA
04-22-2013 07:04:17,334 AM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityA where id =?
04-22-2013 07:04:17,334 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entitya_.id, entitya_.name as name1_ from EntityA entitya_ where entitya_.id=?
04-22-2013 07:04:17,335 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityA (name, id) values (?, ?)
04-22-2013 07:04:17,336 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityA set name=? where id=?
04-22-2013 07:04:17,336 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityA where id=?
04-22-2013 07:04:17,352 AM DEBUG AbstractCollectionPersister:613 - Static SQL for collection: com.danielme.demo.model.EntityA.entities
04-22-2013 07:04:17,353 AM DEBUG AbstractCollectionPersister:614 -  Row insert: update EntityB set entityA_id=? where id=?
04-22-2013 07:04:17,354 AM DEBUG AbstractCollectionPersister:616 -  Row delete: update EntityB set entityA_id=null where entityA_id=? and id=?
04-22-2013 07:04:17,354 AM DEBUG AbstractCollectionPersister:617 -  One-shot delete: update EntityB set entityA_id=null where entityA_id=?
04-22-2013 07:04:17,379 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:04:17,382 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:04:17,385 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:04:17,387 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:04:17,390 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:04:17,393 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:04:17,396 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:04:17,399 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:04:17,401 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:04:17,404 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:04:17,416 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:04:17,419 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:04:17,425 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [NONE]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-22-2013 07:04:17,428 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [READ]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-22-2013 07:04:17,429 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-22-2013 07:04:17,431 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE_NOWAIT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-22-2013 07:04:17,432 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [FORCE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-22-2013 07:04:17,433 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_READ]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-22-2013 07:04:17,435 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_WRITE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-22-2013 07:04:17,436 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-22-2013 07:04:17,437 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:04:17,439 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:04:17,440 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:04:17,441 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:04:17,442 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [NONE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:04:17,444 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:04:17,445 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-22-2013 07:04:17,446 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE_NOWAIT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-22-2013 07:04:17,448 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [FORCE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-22-2013 07:04:17,449 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-22-2013 07:04:17,450 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_WRITE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-22-2013 07:04:17,451 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-22-2013 07:04:17,452 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:04:17,454 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:04:17,457 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-22-2013 07:04:17,459 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-22-2013 07:04:17,466 AM DEBUG OneToManyLoader:82 - Static select for one-to-many com.danielme.demo.model.EntityA.entities: select entities0_.entityA_id as entityA3_1_1_, entities0_.id as id1_, entities0_.id as id2_0_, entities0_.entityA_id as entityA3_2_0_, entities0_.name as name2_0_ from EntityB entities0_ where entities0_.entityA_id=?
04-22-2013 07:04:17,470 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6b1ce012
04-22-2013 07:04:17,475 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 917221ce-88d0-4c3e-8844-3613b9990608 (<unnamed>)
04-22-2013 07:04:17,475 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 07:04:17,476 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 07:04:17,484 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 07:04:17,484 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 07:04:18,141 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 07:04:18,142 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:04:18,143 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:04:18,144 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:04:18,145 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:04:18,146 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:04:18,147 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:04:18,148 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:04:18,149 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:04:18,150 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:04:18,151 AM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-22-2013 07:04:25,086 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 07:04:25,088 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 07:04:25,089 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 07:04:25,090 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 07:04:26,942 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.ENTITYA
04-22-2013 07:04:26,943 AM  INFO TableMetadata:66 - HHH000037: Columns: [id, name]
04-22-2013 07:04:26,945 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 07:04:26,946 AM  INFO TableMetadata:69 - HHH000126: Indexes: [sys_c003807]
04-22-2013 07:04:29,052 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.ENTITYB
04-22-2013 07:04:29,054 AM  INFO TableMetadata:66 - HHH000037: Columns: [id, entitya_id, name]
04-22-2013 07:04:29,055 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: [fk457309fbcf98714]
04-22-2013 07:04:29,056 AM  INFO TableMetadata:69 - HHH000126: Indexes: [sys_c003811]
04-22-2013 07:04:29,058 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:04:29,059 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:04:29,062 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:04:29,324 AM  INFO DatabaseMetaData:120 - HHH000262: Table not found: hibernate_sequence
04-22-2013 07:04:29,325 AM DEBUG SchemaUpdate:226 - create sequence hibernate_sequence
04-22-2013 07:04:29,853 AM ERROR SchemaUpdate:235 - HHH000388: Unsuccessful: create sequence hibernate_sequence
04-22-2013 07:04:29,854 AM ERROR SchemaUpdate:236 - ORA-01031: insufficient privileges

04-22-2013 07:04:29,855 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 07:04:29,857 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 07:04:29,858 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 07:04:29,870 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 07:04:29,952 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@6350ed68
04-22-2013 07:04:29,952 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem 
04-22-2013 07:04:31,708 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665854716
04-22-2013 07:04:32,550 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 07:04:32,551 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 07:04:32,552 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 07:04:32,554 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 07:04:35,790 AM DEBUG Loader:2046 - Loading entity: [com.danielme.demo.model.Contact#000001]
04-22-2013 07:04:35,804 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:04:36,123 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 07:04:36,123 AM DEBUG Loader:1355 - Result row: EntityKey[com.danielme.demo.model.Contact#000001]
04-22-2013 07:04:36,131 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.danielme.demo.model.Contact#000001]
04-22-2013 07:04:36,133 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.danielme.demo.model.Contact#000001]
04-22-2013 07:04:36,134 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 07:04:36,134 AM DEBUG Loader:2070 - Done entity load
04-22-2013 07:06:21,265 AM  INFO TestMain:18 - demo begins...
04-22-2013 07:06:22,845 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 07:06:22,901 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-22-2013 07:06:22,903 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-22-2013 07:06:22,904 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43f4ebd
04-22-2013 07:06:22,906 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6087e704
04-22-2013 07:06:22,909 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@746db33c
04-22-2013 07:06:22,911 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d469658
04-22-2013 07:06:22,915 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-22-2013 07:06:22,916 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-22-2013 07:06:22,916 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3823bdd1
04-22-2013 07:06:22,919 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c09624
04-22-2013 07:06:22,919 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c09624
04-22-2013 07:06:22,920 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c09624
04-22-2013 07:06:22,923 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@7d0c3a08
04-22-2013 07:06:22,924 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@7d0c3a08
04-22-2013 07:06:22,929 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d0c3a08
04-22-2013 07:06:22,931 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@831fb31
04-22-2013 07:06:22,932 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@831fb31
04-22-2013 07:06:22,933 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@831fb31
04-22-2013 07:06:22,935 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@31d8d237
04-22-2013 07:06:22,936 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@31d8d237
04-22-2013 07:06:22,937 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d8d237
04-22-2013 07:06:22,940 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@687ea9
04-22-2013 07:06:22,941 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@687ea9
04-22-2013 07:06:22,941 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@687ea9
04-22-2013 07:06:22,944 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@3dbe8711
04-22-2013 07:06:22,945 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@3dbe8711
04-22-2013 07:06:22,945 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dbe8711
04-22-2013 07:06:22,949 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38bdc9b3
04-22-2013 07:06:22,950 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38bdc9b3
04-22-2013 07:06:22,954 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@410d3f0d
04-22-2013 07:06:22,955 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@410d3f0d
04-22-2013 07:06:22,958 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@28f19d6e
04-22-2013 07:06:22,959 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@28f19d6e
04-22-2013 07:06:22,961 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7219d6af
04-22-2013 07:06:22,962 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7219d6af
04-22-2013 07:06:22,965 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@46ed5d9d
04-22-2013 07:06:22,966 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46ed5d9d
04-22-2013 07:06:22,969 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@6e848ecc
04-22-2013 07:06:22,970 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6e848ecc
04-22-2013 07:06:22,973 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@219fdbcb
04-22-2013 07:06:22,973 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@219fdbcb
04-22-2013 07:06:22,974 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@219fdbcb
04-22-2013 07:06:22,976 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fb2d7df
04-22-2013 07:06:22,979 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@10b914b3
04-22-2013 07:06:22,979 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10b914b3
04-22-2013 07:06:22,980 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10b914b3
04-22-2013 07:06:22,982 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23904e0d
04-22-2013 07:06:22,984 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@2e82674b
04-22-2013 07:06:22,984 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e82674b
04-22-2013 07:06:22,986 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2031688f
04-22-2013 07:06:22,987 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2031688f
04-22-2013 07:06:22,990 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b5b123b
04-22-2013 07:06:22,991 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b5b123b
04-22-2013 07:06:22,993 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@731de9b
04-22-2013 07:06:22,994 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@731de9b
04-22-2013 07:06:22,997 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@207ff5b6
04-22-2013 07:06:22,998 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@207ff5b6
04-22-2013 07:06:22,999 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3362a63
04-22-2013 07:06:23,001 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@44775121
04-22-2013 07:06:23,004 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@2a114025
04-22-2013 07:06:23,005 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a114025
04-22-2013 07:06:23,005 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@2a114025
04-22-2013 07:06:23,008 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@631b86c7
04-22-2013 07:06:23,008 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@631b86c7
04-22-2013 07:06:23,009 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@631b86c7
04-22-2013 07:06:23,013 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@5e36d047
04-22-2013 07:06:23,016 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72813bc1
04-22-2013 07:06:23,017 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72813bc1
04-22-2013 07:06:23,017 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72813bc1
04-22-2013 07:06:23,019 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@78497062
04-22-2013 07:06:23,020 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@78497062
04-22-2013 07:06:23,021 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@78497062
04-22-2013 07:06:23,023 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@5f78dc08
04-22-2013 07:06:23,032 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@407e75d2
04-22-2013 07:06:23,032 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@407e75d2
04-22-2013 07:06:23,034 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4c345b43
04-22-2013 07:06:23,041 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@56cb07ef
04-22-2013 07:06:23,041 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56cb07ef
04-22-2013 07:06:23,043 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6a435f
04-22-2013 07:06:23,045 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ae555bd
04-22-2013 07:06:23,050 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7dc21ece
04-22-2013 07:06:23,051 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7dc21ece
04-22-2013 07:06:23,052 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a869113
04-22-2013 07:06:23,053 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@689e8c34
04-22-2013 07:06:23,054 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@106df95
04-22-2013 07:06:23,054 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a40afb9
04-22-2013 07:06:23,055 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3cd0d12e
04-22-2013 07:06:23,056 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31554233
04-22-2013 07:06:23,056 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@546d3b92
04-22-2013 07:06:23,057 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4f62198b
04-22-2013 07:06:23,089 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 07:06:23,101 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 07:06:23,105 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 07:06:23,108 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 07:06:23,136 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:06:23,137 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:06:23,140 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:06:23,142 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:06:23,152 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:06:23,155 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:06:23,159 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:06:23,160 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:06:23,162 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:06:23,164 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:06:23,165 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:06:23,167 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:06:23,168 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:06:23,170 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:06:23,172 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:06:23,176 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-22-2013 07:06:23,177 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@43f4ebd
04-22-2013 07:06:23,177 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43f4ebd
04-22-2013 07:06:23,178 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6087e704
04-22-2013 07:06:23,179 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@746db33c
04-22-2013 07:06:23,179 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d469658
04-22-2013 07:06:23,180 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-22-2013 07:06:23,180 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@3823bdd1
04-22-2013 07:06:23,181 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3823bdd1
04-22-2013 07:06:23,182 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5c09624
04-22-2013 07:06:23,182 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5c09624
04-22-2013 07:06:23,183 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c09624
04-22-2013 07:06:23,183 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@7d0c3a08
04-22-2013 07:06:23,184 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@7d0c3a08
04-22-2013 07:06:23,185 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d0c3a08
04-22-2013 07:06:23,185 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@831fb31
04-22-2013 07:06:23,186 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@831fb31
04-22-2013 07:06:23,187 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@831fb31
04-22-2013 07:06:23,187 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@31d8d237
04-22-2013 07:06:23,188 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@31d8d237
04-22-2013 07:06:23,188 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d8d237
04-22-2013 07:06:23,189 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@687ea9
04-22-2013 07:06:23,189 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@687ea9
04-22-2013 07:06:23,190 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@687ea9
04-22-2013 07:06:23,191 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@3dbe8711
04-22-2013 07:06:23,191 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@3dbe8711
04-22-2013 07:06:23,192 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dbe8711
04-22-2013 07:06:23,192 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38bdc9b3
04-22-2013 07:06:23,193 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38bdc9b3
04-22-2013 07:06:23,194 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@410d3f0d
04-22-2013 07:06:23,194 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@410d3f0d
04-22-2013 07:06:23,195 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@28f19d6e
04-22-2013 07:06:23,195 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@28f19d6e
04-22-2013 07:06:23,196 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7219d6af
04-22-2013 07:06:23,197 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7219d6af
04-22-2013 07:06:23,197 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@46ed5d9d
04-22-2013 07:06:23,198 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46ed5d9d
04-22-2013 07:06:23,198 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@6e848ecc
04-22-2013 07:06:23,199 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6e848ecc
04-22-2013 07:06:23,200 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@219fdbcb
04-22-2013 07:06:23,200 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@219fdbcb
04-22-2013 07:06:23,201 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@219fdbcb
04-22-2013 07:06:23,201 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fb2d7df
04-22-2013 07:06:23,202 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@10b914b3
04-22-2013 07:06:23,203 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10b914b3
04-22-2013 07:06:23,203 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10b914b3
04-22-2013 07:06:23,204 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23904e0d
04-22-2013 07:06:23,204 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@2e82674b
04-22-2013 07:06:23,205 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e82674b
04-22-2013 07:06:23,205 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2031688f
04-22-2013 07:06:23,206 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2031688f
04-22-2013 07:06:23,207 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b5b123b
04-22-2013 07:06:23,207 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b5b123b
04-22-2013 07:06:23,208 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@731de9b
04-22-2013 07:06:23,209 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@731de9b
04-22-2013 07:06:23,209 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@207ff5b6
04-22-2013 07:06:23,210 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@207ff5b6
04-22-2013 07:06:23,211 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3362a63
04-22-2013 07:06:23,211 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@44775121
04-22-2013 07:06:23,212 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@2a114025
04-22-2013 07:06:23,213 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a114025
04-22-2013 07:06:23,213 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@2a114025
04-22-2013 07:06:23,214 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@631b86c7
04-22-2013 07:06:23,214 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@631b86c7
04-22-2013 07:06:23,215 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@631b86c7
04-22-2013 07:06:23,216 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@5e36d047
04-22-2013 07:06:23,216 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@72813bc1
04-22-2013 07:06:23,217 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72813bc1
04-22-2013 07:06:23,218 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@72813bc1
04-22-2013 07:06:23,219 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@78497062
04-22-2013 07:06:23,219 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@78497062
04-22-2013 07:06:23,220 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@78497062
04-22-2013 07:06:23,221 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@5f78dc08
04-22-2013 07:06:23,221 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@407e75d2
04-22-2013 07:06:23,222 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@407e75d2
04-22-2013 07:06:23,223 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4c345b43
04-22-2013 07:06:23,223 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@56cb07ef
04-22-2013 07:06:23,224 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56cb07ef
04-22-2013 07:06:23,224 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6a435f
04-22-2013 07:06:23,226 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ae555bd
04-22-2013 07:06:23,227 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@7dc21ece
04-22-2013 07:06:23,228 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7dc21ece
04-22-2013 07:06:23,228 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1edfbb43
04-22-2013 07:06:23,229 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@727f3b8a
04-22-2013 07:06:23,230 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f1e1bbf
04-22-2013 07:06:23,230 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11afd9cc
04-22-2013 07:06:23,231 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3003e926
04-22-2013 07:06:23,232 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50bfd66a
04-22-2013 07:06:23,232 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6295f290
04-22-2013 07:06:23,233 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6267fe80
04-22-2013 07:06:23,234 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:06:23,235 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:06:23,235 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:06:23,236 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:06:23,236 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:06:23,237 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:06:23,238 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:06:23,238 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:06:23,239 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:06:23,240 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:06:23,240 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:06:23,241 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:06:23,242 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:06:23,242 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:06:23,243 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:06:23,244 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-22-2013 07:06:23,356 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:06:23,370 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 07:06:23,372 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.Main2
04-22-2013 07:06:23,414 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.Contact
04-22-2013 07:06:23,432 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.Contact
04-22-2013 07:06:23,433 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityA
04-22-2013 07:06:23,440 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityA
04-22-2013 07:06:23,441 AM DEBUG AbstractJarVisitor:171 - Filtering: com.danielme.demo.model.EntityB
04-22-2013 07:06:23,443 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.danielme.demo.model.EntityB
04-22-2013 07:06:23,444 AM DEBUG AbstractJarVisitor:171 - Filtering: com.test.TestMain
04-22-2013 07:06:23,455 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:06:23,456 AM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-22-2013 07:06:23,467 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 07:06:23,483 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 07:06:23,484 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 07:06:23,530 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 07:06:23,543 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 07:06:23,598 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:06:23,599 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:06:23,606 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.Contact
04-22-2013 07:06:23,648 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:06:23,652 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:06:23,664 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 07:06:23,670 AM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.Contact on table Contact
04-22-2013 07:06:23,722 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,728 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 07:06:23,733 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 07:06:23,736 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 07:06:23,743 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,744 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 07:06:23,744 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 07:06:23,745 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 07:06:23,746 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,747 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 07:06:23,747 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 07:06:23,748 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 07:06:23,749 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,750 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 07:06:23,750 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 07:06:23,751 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 07:06:23,751 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,752 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 07:06:23,753 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 07:06:23,753 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 07:06:23,754 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,755 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 07:06:23,756 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 07:06:23,756 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 07:06:23,757 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,758 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 07:06:23,758 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 07:06:23,759 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 07:06:23,760 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,760 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 07:06:23,761 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 07:06:23,762 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 07:06:23,762 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,763 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 07:06:23,764 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 07:06:23,764 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 07:06:23,765 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,766 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 07:06:23,766 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 07:06:23,767 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 07:06:23,768 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,769 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 07:06:23,769 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 07:06:23,770 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 07:06:23,770 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,771 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 07:06:23,772 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 07:06:23,772 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 07:06:23,773 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,774 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 07:06:23,775 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 07:06:23,775 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 07:06:23,776 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,777 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 07:06:23,777 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 07:06:23,778 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 07:06:23,779 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,779 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 07:06:23,780 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 07:06:23,781 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 07:06:23,782 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,782 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 07:06:23,783 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 07:06:23,784 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 07:06:23,784 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,785 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 07:06:23,786 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 07:06:23,786 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 07:06:23,787 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,788 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 07:06:23,788 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 07:06:23,789 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 07:06:23,790 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,791 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 07:06:23,791 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 07:06:23,792 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 07:06:23,793 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,793 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 07:06:23,794 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 07:06:23,795 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 07:06:23,798 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityA
04-22-2013 07:06:23,799 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:06:23,800 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:06:23,800 AM DEBUG EntityBinder:354 - Import with entity name EntityA
04-22-2013 07:06:23,801 AM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityA on table EntityA
04-22-2013 07:06:23,836 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,837 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-22-2013 07:06:23,838 AM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-22-2013 07:06:23,838 AM DEBUG PropertyBinder:256 - Building property id
04-22-2013 07:06:23,840 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-22-2013 07:06:23,840 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,843 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=null, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,862 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=element, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,865 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=entities_KEY, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,867 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='entities_KEY', referencedColumn='null', mappedBy='null'}
04-22-2013 07:06:23,871 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-22-2013 07:06:23,872 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entityA'}
04-22-2013 07:06:23,874 AM DEBUG CollectionBinder:375 - Collection role: com.danielme.demo.model.EntityA.entities
04-22-2013 07:06:23,882 AM DEBUG PropertyBinder:256 - Building property entities
04-22-2013 07:06:23,884 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityA), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,885 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-22-2013 07:06:23,886 AM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-22-2013 07:06:23,887 AM DEBUG PropertyBinder:256 - Building property name
04-22-2013 07:06:23,888 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.danielme.demo.model.EntityB
04-22-2013 07:06:23,889 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:06:23,890 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:06:23,891 AM DEBUG EntityBinder:354 - Import with entity name EntityB
04-22-2013 07:06:23,891 AM DEBUG EntityBinder:524 - Bind entity com.danielme.demo.model.EntityB on table EntityB
04-22-2013 07:06:23,907 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=id, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,909 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property id with lazy=false
04-22-2013 07:06:23,910 AM DEBUG SimpleValueBinder:304 - building SimpleValue for id
04-22-2013 07:06:23,911 AM DEBUG PropertyBinder:256 - Building property id
04-22-2013 07:06:23,912 AM DEBUG Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
04-22-2013 07:06:23,914 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=entityA, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,919 AM DEBUG PropertyBinder:256 - Building property entityA
04-22-2013 07:06:23,920 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntityB), mappingColumn=name, insertable=true, updatable=true, unique=false}
04-22-2013 07:06:23,922 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property name with lazy=false
04-22-2013 07:06:23,923 AM DEBUG SimpleValueBinder:304 - building SimpleValue for name
04-22-2013 07:06:23,924 AM DEBUG PropertyBinder:256 - Building property name
04-22-2013 07:06:23,926 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 07:06:23,927 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 07:06:23,928 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 07:06:23,929 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 07:06:23,929 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 07:06:23,930 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 07:06:23,930 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 07:06:23,931 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 07:06:23,931 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 07:06:23,932 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 07:06:23,933 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 07:06:23,934 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 07:06:23,934 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 07:06:23,935 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 07:06:23,935 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 07:06:23,936 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 07:06:23,936 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 07:06:23,937 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 07:06:23,937 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 07:06:23,938 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 07:06:23,939 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-22-2013 07:06:23,939 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-22-2013 07:06:23,940 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for id
04-22-2013 07:06:23,940 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for name
04-22-2013 07:06:23,942 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:06:23,949 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:06:23,950 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:06:23,950 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:06:23,951 AM DEBUG CollectionSecondPass:64 - Second pass for collection: com.danielme.demo.model.EntityA.entities
04-22-2013 07:06:23,956 AM DEBUG CollectionBinder:717 - Binding a OneToMany: com.danielme.demo.model.EntityA.entities through a foreign key
04-22-2013 07:06:23,958 AM DEBUG CollectionBinder:746 - Mapping collection: com.danielme.demo.model.EntityA.entities -> EntityB
04-22-2013 07:06:23,960 AM DEBUG TableBinder:344 - Retrieving property com.danielme.demo.model.EntityB.entityA
04-22-2013 07:06:23,961 AM DEBUG CollectionSecondPass:80 - Mapped collection key: entityA_id, one-to-many: com.danielme.demo.model.EntityB
04-22-2013 07:06:23,962 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:06:23,962 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:06:23,963 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:06:23,963 AM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-22-2013 07:06:23,984 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 07:06:24,097 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 07:06:24,097 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 07:06:24,098 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 07:06:24,099 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 07:06:24,134 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 07:06:26,749 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 07:06:26,751 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 07:06:26,752 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 07:06:26,754 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 07:06:27,842 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 07:06:28,369 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 07:06:28,370 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 07:06:28,372 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 07:06:28,373 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 07:06:28,374 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 07:06:28,375 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 07:06:28,376 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 07:06:28,377 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 07:06:28,377 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 07:06:28,387 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 07:06:28,388 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 07:06:28,389 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 07:06:28,389 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 07:06:28,390 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 07:06:28,394 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 07:06:28,395 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 07:06:28,395 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 07:06:28,396 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 07:06:28,396 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 07:06:28,397 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 07:06:28,399 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 07:06:28,399 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 07:06:28,400 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 07:06:28,400 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 07:06:28,401 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 07:06:28,402 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 07:06:28,402 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 07:06:28,403 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 07:06:28,403 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 07:06:28,419 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 07:06:28,433 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 07:06:28,434 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.rmi.server.randomIDs=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, user.name=Harris, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 07:06:28,574 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:06:28,575 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:06:28,576 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:06:28,696 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityB
04-22-2013 07:06:28,696 AM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityB where id =?
04-22-2013 07:06:28,697 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entityb_.id, entityb_.entityA_id as entityA3_2_, entityb_.name as name2_ from EntityB entityb_ where entityb_.id=?
04-22-2013 07:06:28,698 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityB (entityA_id, name, id) values (?, ?, ?)
04-22-2013 07:06:28,698 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityB set entityA_id=?, name=? where id=?
04-22-2013 07:06:28,699 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityB where id=?
04-22-2013 07:06:28,739 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.Contact
04-22-2013 07:06:28,740 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 07:06:28,741 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 07:06:28,742 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 07:06:28,743 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 07:06:28,743 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 07:06:28,757 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.danielme.demo.model.EntityA
04-22-2013 07:06:28,772 AM DEBUG AbstractEntityPersister:3375 -  Version select: select id from EntityA where id =?
04-22-2013 07:06:28,773 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select entitya_.id, entitya_.name as name1_ from EntityA entitya_ where entitya_.id=?
04-22-2013 07:06:28,774 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into EntityA (name, id) values (?, ?)
04-22-2013 07:06:28,774 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update EntityA set name=? where id=?
04-22-2013 07:06:28,775 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from EntityA where id=?
04-22-2013 07:06:28,786 AM DEBUG AbstractCollectionPersister:613 - Static SQL for collection: com.danielme.demo.model.EntityA.entities
04-22-2013 07:06:28,787 AM DEBUG AbstractCollectionPersister:614 -  Row insert: update EntityB set entityA_id=? where id=?
04-22-2013 07:06:28,787 AM DEBUG AbstractCollectionPersister:616 -  Row delete: update EntityB set entityA_id=null where entityA_id=? and id=?
04-22-2013 07:06:28,788 AM DEBUG AbstractCollectionPersister:617 -  One-shot delete: update EntityB set entityA_id=null where entityA_id=?
04-22-2013 07:06:28,813 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:06:28,816 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:06:28,819 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:06:28,822 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:06:28,825 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:06:28,828 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:06:28,831 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:06:28,834 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:06:28,836 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:06:28,840 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:06:28,853 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:06:28,856 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:06:28,864 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [NONE]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-22-2013 07:06:28,866 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [READ]: select entityb0_.id as id2_1_, entityb0_.entityA_id as entityA3_2_1_, entityb0_.name as name2_1_, entitya1_.id as id1_0_, entitya1_.name as name1_0_ from EntityB entityb0_ inner join EntityA entitya1_ on entityb0_.entityA_id=entitya1_.id where entityb0_.id=?
04-22-2013 07:06:28,868 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-22-2013 07:06:28,869 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [UPGRADE_NOWAIT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-22-2013 07:06:28,871 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [FORCE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-22-2013 07:06:28,873 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_READ]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-22-2013 07:06:28,874 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_WRITE]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update
04-22-2013 07:06:28,875 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [PESSIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=? for update nowait
04-22-2013 07:06:28,877 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:06:28,878 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityB [OPTIMISTIC_FORCE_INCREMENT]: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:06:28,879 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:06:28,881 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityB: select entityb0_.id as id2_0_, entityb0_.entityA_id as entityA3_2_0_, entityb0_.name as name2_0_ from EntityB entityb0_ where entityb0_.id=?
04-22-2013 07:06:28,882 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [NONE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:06:28,883 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:06:28,885 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-22-2013 07:06:28,886 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [UPGRADE_NOWAIT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-22-2013 07:06:28,887 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [FORCE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-22-2013 07:06:28,888 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_READ]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-22-2013 07:06:28,890 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_WRITE]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update
04-22-2013 07:06:28,891 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [PESSIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=? for update nowait
04-22-2013 07:06:28,892 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:06:28,893 AM DEBUG Loader:123 - Static select for entity com.danielme.demo.model.EntityA [OPTIMISTIC_FORCE_INCREMENT]: select entitya0_.id as id1_0_, entitya0_.name as name1_0_ from EntityA entitya0_ where entitya0_.id=?
04-22-2013 07:06:28,897 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-22-2013 07:06:28,899 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.danielme.demo.model.EntityA: select entitya0_.id as id1_1_, entitya0_.name as name1_1_, entities1_.entityA_id as entityA3_1_3_, entities1_.id as id3_, entities1_.id as id2_0_, entities1_.entityA_id as entityA3_2_0_, entities1_.name as name2_0_ from EntityA entitya0_ left outer join EntityB entities1_ on entitya0_.id=entities1_.entityA_id where entitya0_.id=?
04-22-2013 07:06:28,906 AM DEBUG OneToManyLoader:82 - Static select for one-to-many com.danielme.demo.model.EntityA.entities: select entities0_.entityA_id as entityA3_1_1_, entities0_.id as id1_, entities0_.id as id2_0_, entities0_.entityA_id as entityA3_2_0_, entities0_.name as name2_0_ from EntityB entities0_ where entities0_.entityA_id=?
04-22-2013 07:06:28,909 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59046270
04-22-2013 07:06:28,914 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 9f5a869a-1465-4018-b769-30bb2af3925d (<unnamed>)
04-22-2013 07:06:28,914 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 07:06:28,915 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 07:06:28,923 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 07:06:28,923 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 07:06:29,543 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 07:06:29,544 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:06:29,545 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:06:29,546 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:06:29,547 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:06:29,548 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:06:29,549 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:06:29,550 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:06:29,551 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:06:29,552 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:06:29,553 AM DEBUG Configuration:1689 - Resolving reference to class: com.danielme.demo.model.EntityA
04-22-2013 07:06:35,379 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 07:06:35,381 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 07:06:35,382 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 07:06:35,383 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 07:06:37,007 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.ENTITYA
04-22-2013 07:06:37,008 AM  INFO TableMetadata:66 - HHH000037: Columns: [id, name]
04-22-2013 07:06:37,011 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 07:06:37,013 AM  INFO TableMetadata:69 - HHH000126: Indexes: [sys_c003807]
04-22-2013 07:06:38,870 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.ENTITYB
04-22-2013 07:06:38,871 AM  INFO TableMetadata:66 - HHH000037: Columns: [id, entitya_id, name]
04-22-2013 07:06:38,873 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: [fk457309fbcf98714]
04-22-2013 07:06:38,874 AM  INFO TableMetadata:69 - HHH000126: Indexes: [sys_c003811]
04-22-2013 07:06:38,876 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:06:38,877 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:06:38,880 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:06:39,112 AM  INFO DatabaseMetaData:120 - HHH000262: Table not found: hibernate_sequence
04-22-2013 07:06:39,113 AM DEBUG SchemaUpdate:226 - create sequence hibernate_sequence
04-22-2013 07:06:39,586 AM ERROR SchemaUpdate:235 - HHH000388: Unsuccessful: create sequence hibernate_sequence
04-22-2013 07:06:39,587 AM ERROR SchemaUpdate:236 - ORA-01031: insufficient privileges

04-22-2013 07:06:39,588 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 07:06:39,590 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 07:06:39,591 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 07:06:39,605 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 07:06:39,701 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@64a63599
04-22-2013 07:06:39,702 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem 
04-22-2013 07:06:43,224 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665856032
04-22-2013 07:06:43,226 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 07:06:43,226 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 07:06:43,227 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 07:06:43,227 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 07:06:43,230 AM DEBUG Loader:2046 - Loading entity: [com.danielme.demo.model.Contact#000001]
04-22-2013 07:06:43,244 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:06:43,534 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 07:06:43,534 AM DEBUG Loader:1355 - Result row: EntityKey[com.danielme.demo.model.Contact#000001]
04-22-2013 07:06:43,544 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.danielme.demo.model.Contact#000001]
04-22-2013 07:06:43,546 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.danielme.demo.model.Contact#000001]
04-22-2013 07:06:43,547 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 07:06:43,547 AM DEBUG Loader:2070 - Done entity load
04-22-2013 07:12:42,619 AM  INFO TestMain:17 - demo begins...
04-22-2013 07:12:46,010 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 07:12:46,063 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:12:46,065 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:12:46,066 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:12:46,068 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ee14d81
04-22-2013 07:12:46,071 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1451ef4e
04-22-2013 07:12:46,073 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2658dd2d
04-22-2013 07:12:46,077 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:12:46,078 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:12:46,079 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:12:46,081 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:12:46,082 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:12:46,083 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:12:46,086 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:12:46,086 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:12:46,092 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:12:46,094 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:12:46,094 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:12:46,095 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:12:46,098 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:12:46,098 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:12:46,099 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:12:46,102 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:12:46,103 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:12:46,104 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:12:46,106 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:12:46,107 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:12:46,108 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:12:46,111 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:12:46,112 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:12:46,115 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:12:46,115 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:12:46,118 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:12:46,119 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:12:46,121 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:12:46,122 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:12:46,125 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:12:46,126 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:12:46,129 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:12:46,130 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:12:46,133 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:12:46,133 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:12:46,134 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:12:46,136 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e3ca754
04-22-2013 07:12:46,138 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:12:46,139 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:12:46,140 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:12:46,142 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60c0c8b5
04-22-2013 07:12:46,144 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:12:46,144 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:12:46,146 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:12:46,147 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:12:46,149 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:12:46,150 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:12:46,152 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:12:46,152 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:12:46,156 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:12:46,157 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:12:46,158 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1bd7b222
04-22-2013 07:12:46,160 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3362a63
04-22-2013 07:12:46,162 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:12:46,163 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:12:46,163 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:12:46,165 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:12:46,166 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:12:46,166 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:12:46,168 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@631b86c7
04-22-2013 07:12:46,170 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:12:46,171 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:12:46,172 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:12:46,174 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:12:46,174 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:12:46,175 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:12:46,177 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@78497062
04-22-2013 07:12:46,186 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:12:46,187 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:12:46,188 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52158cc6
04-22-2013 07:12:46,195 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:12:46,195 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:12:46,197 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b784427
04-22-2013 07:12:46,199 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@466d1750
04-22-2013 07:12:46,204 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:12:46,205 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:12:46,206 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d896a4c
04-22-2013 07:12:46,207 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38a1aa85
04-22-2013 07:12:46,207 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7dc21ece
04-22-2013 07:12:46,208 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5374a6e2
04-22-2013 07:12:46,209 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f786a3c
04-22-2013 07:12:46,209 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a869113
04-22-2013 07:12:46,210 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@689e8c34
04-22-2013 07:12:46,211 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@106df95
04-22-2013 07:12:46,244 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 07:12:46,256 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 07:12:46,260 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 07:12:46,263 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 07:12:46,283 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:12:46,284 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:12:46,286 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:12:46,287 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:12:46,293 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:12:46,294 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:12:46,297 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:12:46,299 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:12:46,300 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:12:46,301 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:12:46,303 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:12:46,304 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:12:46,305 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:12:46,307 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:12:46,308 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:12:46,313 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:12:46,314 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:12:46,314 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:12:46,315 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ee14d81
04-22-2013 07:12:46,315 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1451ef4e
04-22-2013 07:12:46,316 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2658dd2d
04-22-2013 07:12:46,317 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:12:46,317 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:12:46,318 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:12:46,319 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:12:46,319 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:12:46,320 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:12:46,320 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:12:46,321 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:12:46,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:12:46,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:12:46,323 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:12:46,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:12:46,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:12:46,325 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:12:46,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:12:46,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:12:46,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:12:46,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:12:46,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:12:46,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:12:46,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:12:46,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:12:46,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:12:46,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:12:46,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:12:46,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:12:46,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:12:46,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:12:46,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:12:46,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:12:46,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:12:46,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:12:46,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:12:46,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:12:46,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:12:46,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:12:46,339 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e3ca754
04-22-2013 07:12:46,339 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:12:46,340 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:12:46,340 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:12:46,341 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60c0c8b5
04-22-2013 07:12:46,342 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:12:46,342 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:12:46,343 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:12:46,343 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:12:46,344 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:12:46,345 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:12:46,345 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:12:46,346 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:12:46,347 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:12:46,348 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:12:46,348 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1bd7b222
04-22-2013 07:12:46,349 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3362a63
04-22-2013 07:12:46,349 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:12:46,350 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:12:46,351 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:12:46,351 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:12:46,352 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:12:46,352 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:12:46,353 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@631b86c7
04-22-2013 07:12:46,354 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:12:46,354 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:12:46,355 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:12:46,355 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:12:46,356 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:12:46,357 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:12:46,357 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@78497062
04-22-2013 07:12:46,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:12:46,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:12:46,359 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52158cc6
04-22-2013 07:12:46,360 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:12:46,360 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:12:46,361 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b784427
04-22-2013 07:12:46,361 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@466d1750
04-22-2013 07:12:46,362 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:12:46,363 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:12:46,363 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3253abbb
04-22-2013 07:12:46,364 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@132f9bcd
04-22-2013 07:12:46,365 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a9db992
04-22-2013 07:12:46,365 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69022de4
04-22-2013 07:12:46,366 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e130998
04-22-2013 07:12:46,366 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3dae160
04-22-2013 07:12:46,367 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1702679a
04-22-2013 07:12:46,368 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1edfbb43
04-22-2013 07:12:46,369 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:12:46,369 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:12:46,370 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:12:46,371 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:12:46,371 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:12:46,372 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:12:46,372 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:12:46,373 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:12:46,374 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:12:46,374 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:12:46,375 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:12:46,376 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:12:46,376 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:12:46,377 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:12:46,378 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:12:46,378 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem
04-22-2013 07:12:46,488 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:12:46,501 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 07:12:46,504 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 07:12:46,559 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 07:12:46,560 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 07:12:46,570 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:12:46,570 AM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem
04-22-2013 07:12:46,580 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 07:12:46,597 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 07:12:46,598 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 07:12:46,640 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 07:12:46,653 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 07:12:46,710 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:12:46,711 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:12:46,717 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 07:12:46,760 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:12:46,764 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:12:46,776 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 07:12:46,783 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 07:12:46,836 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,842 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 07:12:46,847 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 07:12:46,850 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 07:12:46,855 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,856 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 07:12:46,857 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 07:12:46,857 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 07:12:46,858 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,859 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 07:12:46,860 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 07:12:46,860 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 07:12:46,861 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,862 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 07:12:46,863 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 07:12:46,863 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 07:12:46,864 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,865 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 07:12:46,865 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 07:12:46,866 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 07:12:46,867 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,868 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 07:12:46,868 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 07:12:46,869 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 07:12:46,869 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,870 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 07:12:46,871 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 07:12:46,871 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 07:12:46,872 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,873 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 07:12:46,873 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 07:12:46,874 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 07:12:46,875 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,876 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 07:12:46,876 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 07:12:46,877 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 07:12:46,878 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,878 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 07:12:46,879 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 07:12:46,879 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 07:12:46,880 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,881 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 07:12:46,882 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 07:12:46,882 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 07:12:46,883 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,884 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 07:12:46,884 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 07:12:46,885 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 07:12:46,886 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,887 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 07:12:46,887 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 07:12:46,888 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 07:12:46,888 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,889 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 07:12:46,890 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 07:12:46,891 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 07:12:46,891 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,892 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 07:12:46,893 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 07:12:46,893 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 07:12:46,894 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,895 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 07:12:46,895 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 07:12:46,896 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 07:12:46,897 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,898 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 07:12:46,898 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 07:12:46,899 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 07:12:46,900 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,901 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 07:12:46,901 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 07:12:46,902 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 07:12:46,902 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,903 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 07:12:46,904 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 07:12:46,904 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 07:12:46,905 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 07:12:46,906 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 07:12:46,906 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 07:12:46,907 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 07:12:46,911 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 07:12:46,911 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 07:12:46,912 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 07:12:46,913 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 07:12:46,913 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 07:12:46,914 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 07:12:46,914 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 07:12:46,915 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 07:12:46,915 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 07:12:46,916 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 07:12:46,916 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 07:12:46,917 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 07:12:46,917 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 07:12:46,918 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 07:12:46,918 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 07:12:46,919 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 07:12:46,919 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 07:12:46,920 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 07:12:46,920 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 07:12:46,921 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 07:12:46,922 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:12:46,924 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:12:46,925 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:12:46,925 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:12:46,925 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:12:46,926 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:12:46,926 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:12:46,945 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 07:12:47,064 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 07:12:47,065 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 07:12:47,066 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 07:12:47,066 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 07:12:47,098 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 07:12:49,603 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 07:12:49,605 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 07:12:49,607 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 07:12:49,608 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 07:12:50,666 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 07:12:51,181 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 07:12:51,182 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 07:12:51,182 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 07:12:51,183 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 07:12:51,183 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 07:12:51,184 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 07:12:51,184 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 07:12:51,185 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 07:12:51,185 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 07:12:51,190 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 07:12:51,191 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 07:12:51,191 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 07:12:51,192 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 07:12:51,192 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 07:12:51,197 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 07:12:51,197 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 07:12:51,198 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 07:12:51,198 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 07:12:51,199 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 07:12:51,199 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 07:12:51,201 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 07:12:51,202 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 07:12:51,203 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 07:12:51,203 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 07:12:51,204 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 07:12:51,204 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 07:12:51,205 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 07:12:51,205 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 07:12:51,206 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 07:12:51,221 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 07:12:51,237 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 07:12:51,238 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.rmi.server.randomIDs=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, user.name=Harris, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 07:12:51,378 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:12:51,532 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 07:12:51,533 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 07:12:51,534 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 07:12:51,535 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 07:12:51,536 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 07:12:51,537 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 07:12:51,561 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:12:51,564 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:12:51,567 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:12:51,570 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:12:51,572 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:12:51,575 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:12:51,578 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:12:51,581 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:12:51,584 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:12:51,587 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:12:51,599 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:12:51,602 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:12:51,606 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7e054643
04-22-2013 07:12:51,611 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 99a27761-f4d2-4fed-959a-b15f05a9dcd0 (<unnamed>)
04-22-2013 07:12:51,611 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 07:12:51,612 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 07:12:51,620 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 07:12:51,620 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 07:12:52,152 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 07:12:52,153 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:12:52,154 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:12:52,155 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:12:52,156 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:12:52,157 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:12:52,158 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:12:52,159 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:12:52,159 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:12:52,160 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:12:57,802 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 07:12:57,803 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 07:12:57,805 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 07:12:57,806 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 07:12:57,808 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:12:57,810 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 07:12:57,812 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 07:12:57,813 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 07:12:57,825 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 07:12:57,889 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@5b2bc407
04-22-2013 07:12:57,890 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem 
04-22-2013 07:13:09,266 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665859892
04-22-2013 07:13:10,563 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 07:13:10,564 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 07:13:10,574 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 07:13:10,579 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 07:13:14,532 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 07:13:14,551 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:13:14,830 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 07:13:14,830 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 07:13:14,838 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 07:13:14,840 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 07:13:14,840 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 07:13:14,841 AM DEBUG Loader:2070 - Done entity load
04-22-2013 07:15:24,725 AM  INFO TestMain:17 - demo begins...
04-22-2013 07:15:40,712 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 07:15:40,766 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:15:40,767 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:15:40,768 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:15:40,770 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ee14d81
04-22-2013 07:15:40,773 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1451ef4e
04-22-2013 07:15:40,775 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2658dd2d
04-22-2013 07:15:40,779 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:15:40,780 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:15:40,780 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:15:40,783 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:15:40,784 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:15:40,784 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:15:40,788 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:15:40,788 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:15:40,793 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:15:40,796 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:15:40,797 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:15:40,797 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:15:40,800 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:15:40,801 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:15:40,801 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:15:40,805 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:15:40,805 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:15:40,806 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:15:40,809 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:15:40,809 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:15:40,810 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:15:40,813 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:15:40,814 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:15:40,816 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:15:40,817 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:15:40,819 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:15:40,820 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:15:40,823 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:15:40,823 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:15:40,827 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:15:40,827 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:15:40,830 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:15:40,831 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:15:40,834 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:15:40,835 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:15:40,835 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:15:40,838 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e3ca754
04-22-2013 07:15:40,840 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:15:40,841 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:15:40,841 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:15:40,843 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60c0c8b5
04-22-2013 07:15:40,845 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:15:40,846 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:15:40,848 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:15:40,848 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:15:40,851 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:15:40,851 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:15:40,853 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:15:40,854 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:15:40,857 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:15:40,858 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:15:40,859 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1bd7b222
04-22-2013 07:15:40,861 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3362a63
04-22-2013 07:15:40,863 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:15:40,864 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:15:40,865 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:15:40,867 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:15:40,867 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:15:40,868 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:15:40,870 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@631b86c7
04-22-2013 07:15:40,872 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:15:40,873 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:15:40,873 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:15:40,875 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:15:40,876 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:15:40,876 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:15:40,878 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@78497062
04-22-2013 07:15:40,887 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:15:40,888 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:15:40,889 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52158cc6
04-22-2013 07:15:40,896 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:15:40,897 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:15:40,898 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b784427
04-22-2013 07:15:40,900 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@466d1750
04-22-2013 07:15:40,905 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:15:40,906 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:15:40,907 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d896a4c
04-22-2013 07:15:40,908 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38a1aa85
04-22-2013 07:15:40,909 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7dc21ece
04-22-2013 07:15:40,909 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5374a6e2
04-22-2013 07:15:40,910 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f786a3c
04-22-2013 07:15:40,910 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a869113
04-22-2013 07:15:40,911 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@689e8c34
04-22-2013 07:15:40,912 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@106df95
04-22-2013 07:15:40,945 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 07:15:40,957 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 07:15:40,960 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 07:15:40,963 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 07:15:40,983 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:15:40,985 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:15:40,987 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:15:40,987 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:15:40,993 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:15:40,994 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:15:40,998 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:15:40,999 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:15:41,000 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:15:41,002 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:15:41,003 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:15:41,004 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:15:41,005 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:15:41,007 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:15:41,008 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:15:41,013 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:15:41,014 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:15:41,014 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@25cbfa42
04-22-2013 07:15:41,015 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ee14d81
04-22-2013 07:15:41,015 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1451ef4e
04-22-2013 07:15:41,016 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2658dd2d
04-22-2013 07:15:41,017 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:15:41,017 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:15:41,018 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2bdafb4e
04-22-2013 07:15:41,018 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:15:41,019 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:15:41,019 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3823bdd1
04-22-2013 07:15:41,020 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:15:41,021 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:15:41,021 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ab9b8d0
04-22-2013 07:15:41,022 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:15:41,022 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:15:41,023 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f7cd15d
04-22-2013 07:15:41,024 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:15:41,024 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:15:41,025 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@160089dd
04-22-2013 07:15:41,025 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:15:41,026 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:15:41,027 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52cd19d
04-22-2013 07:15:41,028 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:15:41,028 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:15:41,029 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6545d2
04-22-2013 07:15:41,029 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:15:41,030 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ed9f47
04-22-2013 07:15:41,031 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:15:41,031 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38bdc9b3
04-22-2013 07:15:41,032 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:15:41,033 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@410d3f0d
04-22-2013 07:15:41,033 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:15:41,034 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28f19d6e
04-22-2013 07:15:41,035 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:15:41,035 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bab600f
04-22-2013 07:15:41,036 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:15:41,037 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25dd9891
04-22-2013 07:15:41,037 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:15:41,038 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:15:41,039 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@395d601f
04-22-2013 07:15:41,039 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e3ca754
04-22-2013 07:15:41,040 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:15:41,041 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:15:41,041 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@767a9224
04-22-2013 07:15:41,042 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60c0c8b5
04-22-2013 07:15:41,042 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:15:41,043 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23904e0d
04-22-2013 07:15:41,044 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:15:41,044 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e82674b
04-22-2013 07:15:41,045 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:15:41,045 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2031688f
04-22-2013 07:15:41,046 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:15:41,046 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b5b123b
04-22-2013 07:15:41,047 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:15:41,048 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18f42160
04-22-2013 07:15:41,048 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1bd7b222
04-22-2013 07:15:41,049 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3362a63
04-22-2013 07:15:41,049 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:15:41,050 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:15:41,051 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@756f70a4
04-22-2013 07:15:41,051 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:15:41,052 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:15:41,052 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a114025
04-22-2013 07:15:41,053 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@631b86c7
04-22-2013 07:15:41,054 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:15:41,054 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:15:41,055 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@5e36d047
04-22-2013 07:15:41,055 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:15:41,056 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:15:41,057 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72813bc1
04-22-2013 07:15:41,057 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@78497062
04-22-2013 07:15:41,058 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:15:41,058 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f80cb01
04-22-2013 07:15:41,059 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52158cc6
04-22-2013 07:15:41,060 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:15:41,060 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f315415
04-22-2013 07:15:41,061 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b784427
04-22-2013 07:15:41,061 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@466d1750
04-22-2013 07:15:41,062 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:15:41,063 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3041876
04-22-2013 07:15:41,063 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@132f9bcd
04-22-2013 07:15:41,064 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a9db992
04-22-2013 07:15:41,064 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69022de4
04-22-2013 07:15:41,065 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e130998
04-22-2013 07:15:41,066 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3dae160
04-22-2013 07:15:41,066 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1702679a
04-22-2013 07:15:41,067 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1edfbb43
04-22-2013 07:15:41,068 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@727f3b8a
04-22-2013 07:15:41,069 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:15:41,069 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:15:41,070 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:15:41,070 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:15:41,071 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:15:41,072 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:15:41,072 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:15:41,073 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:15:41,074 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:15:41,074 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:15:41,075 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:15:41,076 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:15:41,076 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:15:41,077 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:15:41,077 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:15:41,078 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem2
04-22-2013 07:15:41,192 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:15:41,204 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 07:15:41,206 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 07:15:41,260 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 07:15:41,261 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 07:15:41,271 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:15:41,271 AM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem2
04-22-2013 07:15:41,281 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 07:15:41,298 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 07:15:41,298 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 07:15:41,340 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 07:15:41,353 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 07:15:41,408 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:15:41,408 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:15:41,414 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 07:15:41,455 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:15:41,459 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:15:41,471 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 07:15:41,477 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 07:15:41,532 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,538 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 07:15:41,543 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 07:15:41,546 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 07:15:41,551 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,552 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 07:15:41,553 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 07:15:41,553 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 07:15:41,554 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,555 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 07:15:41,556 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 07:15:41,556 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 07:15:41,557 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,558 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 07:15:41,558 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 07:15:41,559 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 07:15:41,559 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,560 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 07:15:41,561 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 07:15:41,561 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 07:15:41,562 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,563 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 07:15:41,563 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 07:15:41,564 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 07:15:41,565 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,566 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 07:15:41,566 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 07:15:41,567 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 07:15:41,567 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,568 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 07:15:41,569 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 07:15:41,569 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 07:15:41,570 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,571 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 07:15:41,571 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 07:15:41,572 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 07:15:41,573 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,573 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 07:15:41,574 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 07:15:41,574 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 07:15:41,575 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,576 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 07:15:41,577 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 07:15:41,577 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 07:15:41,578 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,579 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 07:15:41,579 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 07:15:41,580 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 07:15:41,581 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,582 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 07:15:41,582 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 07:15:41,583 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 07:15:41,583 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,584 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 07:15:41,585 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 07:15:41,585 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 07:15:41,586 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,587 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 07:15:41,587 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 07:15:41,588 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 07:15:41,589 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,589 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 07:15:41,590 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 07:15:41,591 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 07:15:41,591 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,592 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 07:15:41,593 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 07:15:41,593 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 07:15:41,594 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,595 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 07:15:41,595 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 07:15:41,596 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 07:15:41,597 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,597 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 07:15:41,598 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 07:15:41,599 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 07:15:41,599 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 07:15:41,600 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 07:15:41,601 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 07:15:41,601 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 07:15:41,605 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 07:15:41,606 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 07:15:41,606 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 07:15:41,607 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 07:15:41,607 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 07:15:41,608 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 07:15:41,608 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 07:15:41,609 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 07:15:41,609 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 07:15:41,610 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 07:15:41,610 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 07:15:41,611 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 07:15:41,611 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 07:15:41,612 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 07:15:41,612 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 07:15:41,613 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 07:15:41,613 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 07:15:41,614 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 07:15:41,614 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 07:15:41,615 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 07:15:41,616 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:15:41,618 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:15:41,619 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:15:41,619 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:15:41,619 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:15:41,620 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:15:41,620 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:15:41,642 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 07:15:41,762 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 07:15:41,762 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 07:15:41,763 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 07:15:41,764 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 07:15:41,796 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 07:15:45,360 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 07:15:45,362 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 07:15:45,363 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 07:15:45,365 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 07:15:46,454 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 07:15:46,979 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 07:15:46,980 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 07:15:46,980 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 07:15:46,981 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 07:15:46,981 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 07:15:46,982 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 07:15:46,982 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 07:15:46,983 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 07:15:46,983 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 07:15:46,988 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 07:15:46,989 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 07:15:46,989 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 07:15:46,990 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 07:15:46,990 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 07:15:46,995 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 07:15:46,995 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 07:15:46,996 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 07:15:46,996 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 07:15:46,997 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 07:15:46,997 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 07:15:46,999 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 07:15:47,000 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 07:15:47,001 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 07:15:47,001 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 07:15:47,002 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 07:15:47,002 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 07:15:47,003 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 07:15:47,003 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 07:15:47,004 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 07:15:47,019 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 07:15:47,033 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 07:15:47,034 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.rmi.server.randomIDs=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, user.name=Harris, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 07:15:47,173 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:15:47,327 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 07:15:47,327 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 07:15:47,328 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 07:15:47,329 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 07:15:47,330 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 07:15:47,331 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 07:15:47,355 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:15:47,358 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:15:47,361 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:15:47,364 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:15:47,367 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:15:47,369 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:15:47,372 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:15:47,375 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:15:47,378 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:15:47,381 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:15:47,394 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:15:47,396 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:15:47,401 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@35489ea3
04-22-2013 07:15:47,405 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 371a9d0b-6e98-42b0-ab68-2d2ec0465b7d (<unnamed>)
04-22-2013 07:15:47,406 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 07:15:47,406 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 07:15:47,414 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 07:15:47,415 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 07:15:48,000 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 07:15:48,002 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:15:48,003 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:15:48,003 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:15:48,004 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:15:48,005 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:15:48,006 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:15:48,007 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:15:48,008 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:15:48,008 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:15:53,856 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 07:15:53,857 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 07:15:53,859 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 07:15:53,860 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 07:15:53,862 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:15:53,864 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 07:15:53,866 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 07:15:53,867 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 07:15:53,878 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 07:15:53,938 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@714fdb76
04-22-2013 07:15:53,938 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem2 
04-22-2013 07:15:55,039 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665861550
04-22-2013 07:15:55,458 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 07:15:55,459 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 07:15:55,467 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 07:15:55,471 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 07:15:59,715 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 07:15:59,732 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:16:00,033 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 07:16:00,033 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 07:16:00,040 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 07:16:00,042 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 07:16:00,042 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 07:16:00,042 AM DEBUG Loader:2070 - Done entity load
04-22-2013 07:47:33,825 AM  INFO TestMain:12 - demo begins...
04-22-2013 07:47:38,619 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 07:47:38,994 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@584a5c78
04-22-2013 07:47:38,996 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@584a5c78
04-22-2013 07:47:38,996 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@584a5c78
04-22-2013 07:47:38,999 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a4fe91e
04-22-2013 07:47:39,004 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e1263db
04-22-2013 07:47:39,006 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@45389b3f
04-22-2013 07:47:39,011 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@32830122
04-22-2013 07:47:39,012 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@32830122
04-22-2013 07:47:39,012 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32830122
04-22-2013 07:47:39,015 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@26c1186f
04-22-2013 07:47:39,016 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@26c1186f
04-22-2013 07:47:39,016 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26c1186f
04-22-2013 07:47:39,021 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-22-2013 07:47:39,021 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-22-2013 07:47:39,023 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db6235b
04-22-2013 07:47:39,026 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@962522b
04-22-2013 07:47:39,026 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@962522b
04-22-2013 07:47:39,026 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@962522b
04-22-2013 07:47:39,030 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@11d13272
04-22-2013 07:47:39,030 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@11d13272
04-22-2013 07:47:39,030 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11d13272
04-22-2013 07:47:39,032 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@4c538974
04-22-2013 07:47:39,032 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@4c538974
04-22-2013 07:47:39,033 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c538974
04-22-2013 07:47:39,035 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@27958cc2
04-22-2013 07:47:39,035 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@27958cc2
04-22-2013 07:47:39,035 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27958cc2
04-22-2013 07:47:39,037 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@340523df
04-22-2013 07:47:39,038 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@340523df
04-22-2013 07:47:39,039 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ca68fd8
04-22-2013 07:47:39,039 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ca68fd8
04-22-2013 07:47:39,041 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@e96b5c2
04-22-2013 07:47:39,041 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@e96b5c2
04-22-2013 07:47:39,042 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7e5db5ae
04-22-2013 07:47:39,042 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7e5db5ae
04-22-2013 07:47:39,073 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@99d12cc
04-22-2013 07:47:39,073 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@99d12cc
04-22-2013 07:47:39,076 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@40bb2bc3
04-22-2013 07:47:39,076 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@40bb2bc3
04-22-2013 07:47:39,078 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@616fdac
04-22-2013 07:47:39,078 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@616fdac
04-22-2013 07:47:39,078 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@616fdac
04-22-2013 07:47:39,094 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a9224
04-22-2013 07:47:39,096 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@66fdfc58
04-22-2013 07:47:39,097 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66fdfc58
04-22-2013 07:47:39,097 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66fdfc58
04-22-2013 07:47:39,099 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56f449b8
04-22-2013 07:47:39,102 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@734b84c7
04-22-2013 07:47:39,102 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@734b84c7
04-22-2013 07:47:39,104 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@bc794cc
04-22-2013 07:47:39,105 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bc794cc
04-22-2013 07:47:39,107 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5809fdee
04-22-2013 07:47:39,107 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5809fdee
04-22-2013 07:47:39,110 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5b0d95cd
04-22-2013 07:47:39,111 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b0d95cd
04-22-2013 07:47:39,114 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30dc9065
04-22-2013 07:47:39,114 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30dc9065
04-22-2013 07:47:39,115 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5918cb3a
04-22-2013 07:47:39,116 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@756f70a4
04-22-2013 07:47:39,118 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@528a52b6
04-22-2013 07:47:39,118 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@528a52b6
04-22-2013 07:47:39,118 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@528a52b6
04-22-2013 07:47:39,120 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@242da5a6
04-22-2013 07:47:39,120 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@242da5a6
04-22-2013 07:47:39,120 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@242da5a6
04-22-2013 07:47:39,122 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@60a415a3
04-22-2013 07:47:39,123 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@27a36a2
04-22-2013 07:47:39,123 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@27a36a2
04-22-2013 07:47:39,124 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@27a36a2
04-22-2013 07:47:39,125 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d716fa0
04-22-2013 07:47:39,126 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d716fa0
04-22-2013 07:47:39,126 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d716fa0
04-22-2013 07:47:39,127 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@77b5c22f
04-22-2013 07:47:39,133 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@2e694f12
04-22-2013 07:47:39,134 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e694f12
04-22-2013 07:47:39,134 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@153b2cb
04-22-2013 07:47:39,139 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f758cd1
04-22-2013 07:47:39,140 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f758cd1
04-22-2013 07:47:39,141 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@466d1750
04-22-2013 07:47:39,142 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@465ff916
04-22-2013 07:47:39,145 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@5374a6e2
04-22-2013 07:47:39,145 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5374a6e2
04-22-2013 07:47:39,146 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689e8c34
04-22-2013 07:47:39,146 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@106df95
04-22-2013 07:47:39,146 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a40afb9
04-22-2013 07:47:39,146 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cd0d12e
04-22-2013 07:47:39,147 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31554233
04-22-2013 07:47:39,147 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@546d3b92
04-22-2013 07:47:39,147 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f62198b
04-22-2013 07:47:39,147 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@317b1d64
04-22-2013 07:47:39,260 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 07:47:39,328 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 07:47:39,332 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 07:47:39,335 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 07:47:39,478 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:47:39,479 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:47:39,487 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:47:39,488 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:47:39,500 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:47:39,501 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:47:39,504 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:47:39,506 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:47:39,507 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:47:39,509 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:47:39,510 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:47:39,511 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:47:39,512 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:47:39,519 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:47:39,522 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:47:39,566 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@584a5c78
04-22-2013 07:47:39,566 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@584a5c78
04-22-2013 07:47:39,567 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@584a5c78
04-22-2013 07:47:39,567 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a4fe91e
04-22-2013 07:47:39,567 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e1263db
04-22-2013 07:47:39,568 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@45389b3f
04-22-2013 07:47:39,568 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@32830122
04-22-2013 07:47:39,568 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@32830122
04-22-2013 07:47:39,569 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32830122
04-22-2013 07:47:39,569 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@26c1186f
04-22-2013 07:47:39,569 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@26c1186f
04-22-2013 07:47:39,570 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26c1186f
04-22-2013 07:47:39,570 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-22-2013 07:47:39,571 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2db6235b
04-22-2013 07:47:39,571 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db6235b
04-22-2013 07:47:39,571 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@962522b
04-22-2013 07:47:39,572 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@962522b
04-22-2013 07:47:39,572 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@962522b
04-22-2013 07:47:39,572 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@11d13272
04-22-2013 07:47:39,573 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@11d13272
04-22-2013 07:47:39,573 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11d13272
04-22-2013 07:47:39,573 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@4c538974
04-22-2013 07:47:39,574 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@4c538974
04-22-2013 07:47:39,574 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c538974
04-22-2013 07:47:39,574 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@27958cc2
04-22-2013 07:47:39,575 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@27958cc2
04-22-2013 07:47:39,575 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27958cc2
04-22-2013 07:47:39,575 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@340523df
04-22-2013 07:47:39,576 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@340523df
04-22-2013 07:47:39,576 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ca68fd8
04-22-2013 07:47:39,576 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ca68fd8
04-22-2013 07:47:39,577 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@e96b5c2
04-22-2013 07:47:39,577 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@e96b5c2
04-22-2013 07:47:39,577 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7e5db5ae
04-22-2013 07:47:39,578 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7e5db5ae
04-22-2013 07:47:39,578 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@99d12cc
04-22-2013 07:47:39,578 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@99d12cc
04-22-2013 07:47:39,579 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@40bb2bc3
04-22-2013 07:47:39,579 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@40bb2bc3
04-22-2013 07:47:39,580 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@616fdac
04-22-2013 07:47:39,580 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@616fdac
04-22-2013 07:47:39,581 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@616fdac
04-22-2013 07:47:39,581 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a9224
04-22-2013 07:47:39,582 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@66fdfc58
04-22-2013 07:47:39,582 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66fdfc58
04-22-2013 07:47:39,582 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66fdfc58
04-22-2013 07:47:39,583 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56f449b8
04-22-2013 07:47:39,583 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@734b84c7
04-22-2013 07:47:39,584 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@734b84c7
04-22-2013 07:47:39,584 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@bc794cc
04-22-2013 07:47:39,584 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bc794cc
04-22-2013 07:47:39,585 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5809fdee
04-22-2013 07:47:39,585 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5809fdee
04-22-2013 07:47:39,586 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@5b0d95cd
04-22-2013 07:47:39,586 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b0d95cd
04-22-2013 07:47:39,586 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30dc9065
04-22-2013 07:47:39,587 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30dc9065
04-22-2013 07:47:39,587 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5918cb3a
04-22-2013 07:47:39,587 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@756f70a4
04-22-2013 07:47:39,588 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@528a52b6
04-22-2013 07:47:39,588 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@528a52b6
04-22-2013 07:47:39,589 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@528a52b6
04-22-2013 07:47:39,589 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@242da5a6
04-22-2013 07:47:39,589 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@242da5a6
04-22-2013 07:47:39,590 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@242da5a6
04-22-2013 07:47:39,590 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@60a415a3
04-22-2013 07:47:39,590 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@27a36a2
04-22-2013 07:47:39,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@27a36a2
04-22-2013 07:47:39,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@27a36a2
04-22-2013 07:47:39,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d716fa0
04-22-2013 07:47:39,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d716fa0
04-22-2013 07:47:39,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d716fa0
04-22-2013 07:47:39,591 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@77b5c22f
04-22-2013 07:47:39,592 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@2e694f12
04-22-2013 07:47:39,592 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e694f12
04-22-2013 07:47:39,592 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@153b2cb
04-22-2013 07:47:39,592 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@1f758cd1
04-22-2013 07:47:39,592 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f758cd1
04-22-2013 07:47:39,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@466d1750
04-22-2013 07:47:39,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@465ff916
04-22-2013 07:47:39,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@5374a6e2
04-22-2013 07:47:39,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5374a6e2
04-22-2013 07:47:39,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3003e926
04-22-2013 07:47:39,593 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@50bfd66a
04-22-2013 07:47:39,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6295f290
04-22-2013 07:47:39,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6267fe80
04-22-2013 07:47:39,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1975b7f9
04-22-2013 07:47:39,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f81497d
04-22-2013 07:47:39,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ffeef1
04-22-2013 07:47:39,594 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22a010ba
04-22-2013 07:47:39,595 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 07:47:39,595 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 07:47:39,595 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:47:39,595 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 07:47:39,595 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 07:47:39,596 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 07:47:39,596 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 07:47:39,596 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 07:47:39,596 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 07:47:39,596 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 07:47:39,596 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 07:47:39,597 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 07:47:39,597 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 07:47:39,597 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 07:47:39,597 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 07:47:39,597 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: demosystem1
04-22-2013 07:47:39,898 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:47:39,904 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 07:47:39,905 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 07:47:40,058 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 07:47:40,066 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 07:47:40,067 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 07:47:40,068 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 07:47:40,074 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 07:47:40,085 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 07:47:40,086 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 07:47:40,087 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 07:47:40,119 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 07:47:40,119 AM DEBUG Ejb3Configuration:201 - Creating Factory: demosystem1
04-22-2013 07:47:40,179 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 07:47:40,234 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 07:47:40,235 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 07:47:40,390 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 07:47:40,416 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 07:47:40,539 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:47:40,539 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:47:40,552 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 07:47:40,627 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 07:47:40,642 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 07:47:40,648 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 07:47:40,651 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 07:47:40,679 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,704 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 07:47:40,706 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 07:47:40,707 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 07:47:40,735 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,735 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 07:47:40,735 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 07:47:40,736 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 07:47:40,736 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,736 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 07:47:40,736 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 07:47:40,736 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 07:47:40,737 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,737 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 07:47:40,737 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 07:47:40,737 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 07:47:40,737 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,738 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 07:47:40,738 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 07:47:40,738 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 07:47:40,738 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,738 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 07:47:40,739 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 07:47:40,739 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 07:47:40,739 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,739 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 07:47:40,740 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 07:47:40,740 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 07:47:40,740 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,740 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 07:47:40,740 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 07:47:40,741 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 07:47:40,741 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,741 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 07:47:40,741 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 07:47:40,741 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 07:47:40,742 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,742 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 07:47:40,742 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 07:47:40,742 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 07:47:40,743 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,743 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 07:47:40,743 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 07:47:40,743 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 07:47:40,743 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,743 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 07:47:40,744 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 07:47:40,744 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 07:47:40,744 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,744 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 07:47:40,744 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 07:47:40,745 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 07:47:40,745 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,745 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 07:47:40,745 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 07:47:40,745 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 07:47:40,745 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,746 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 07:47:40,746 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 07:47:40,746 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 07:47:40,746 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,746 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 07:47:40,747 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 07:47:40,747 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 07:47:40,747 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,747 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 07:47:40,747 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 07:47:40,747 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 07:47:40,748 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,748 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 07:47:40,748 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 07:47:40,748 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 07:47:40,748 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,749 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 07:47:40,749 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 07:47:40,749 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 07:47:40,749 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 07:47:40,749 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 07:47:40,749 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 07:47:40,750 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 07:47:40,752 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 07:47:40,752 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 07:47:40,752 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 07:47:40,752 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 07:47:40,752 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 07:47:40,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 07:47:40,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 07:47:40,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 07:47:40,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 07:47:40,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 07:47:40,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 07:47:40,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 07:47:40,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 07:47:40,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 07:47:40,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 07:47:40,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 07:47:40,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 07:47:40,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 07:47:40,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 07:47:40,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 07:47:40,755 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:47:40,756 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:47:40,757 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:47:40,757 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:47:40,757 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:47:40,757 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:47:40,757 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:47:40,862 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 07:47:41,146 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 07:47:41,146 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 07:47:41,147 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 07:47:41,148 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 07:47:41,245 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 07:47:44,401 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 07:47:44,402 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 07:47:44,403 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 07:47:44,403 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 07:47:45,616 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 07:47:46,144 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 07:47:46,145 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 07:47:46,145 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 07:47:46,146 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 07:47:46,146 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 07:47:46,146 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 07:47:46,147 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 07:47:46,147 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 07:47:46,147 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 07:47:46,167 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 07:47:46,168 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 07:47:46,168 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 07:47:46,168 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 07:47:46,169 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 07:47:46,196 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 07:47:46,197 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 07:47:46,197 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 07:47:46,198 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 07:47:46,198 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 07:47:46,198 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 07:47:46,200 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 07:47:46,200 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 07:47:46,200 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 07:47:46,201 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 07:47:46,201 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 07:47:46,201 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 07:47:46,202 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 07:47:46,202 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 07:47:46,202 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 07:47:46,281 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 07:47:46,368 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 07:47:46,369 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.rmi.server.randomIDs=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, user.name=Harris, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 07:47:46,589 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:47:47,098 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 07:47:47,098 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 07:47:47,098 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 07:47:47,099 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 07:47:47,099 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 07:47:47,100 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 07:47:47,161 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:47:47,162 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:47:47,163 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:47:47,164 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:47:47,165 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:47:47,166 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:47:47,167 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 07:47:47,168 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 07:47:47,169 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:47:47,169 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:47:47,179 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:47:47,180 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:47:47,203 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f45d7f2
04-22-2013 07:47:47,245 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: edd93333-9316-44e7-b5f1-b6b1fb754a53 (<unnamed>)
04-22-2013 07:47:47,245 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 07:47:47,246 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 07:47:47,281 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 07:47:47,281 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 07:47:47,861 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 07:47:47,861 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 07:47:47,861 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 07:47:47,862 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 07:47:47,862 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 07:47:47,862 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 07:47:47,862 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 07:47:47,863 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 07:47:47,863 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 07:47:47,863 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 07:48:10,860 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 07:48:10,861 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 07:48:10,861 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 07:48:10,862 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 07:48:10,862 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 07:48:10,863 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 07:48:10,864 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 07:48:10,864 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 07:48:10,887 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 07:48:10,938 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@7595ddb5
04-22-2013 07:48:10,939 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: demosystem1 
04-22-2013 07:48:11,164 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665880910
04-22-2013 07:48:11,171 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 07:48:11,204 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 07:48:11,204 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 07:48:11,208 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:48:11,490 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 07:48:11,490 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 07:48:11,499 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 07:48:11,501 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 07:48:11,501 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 07:48:11,501 AM DEBUG Loader:2070 - Done entity load
04-22-2013 07:48:11,502 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 07:48:11,502 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 07:48:11,502 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 07:48:18,474 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665880984
04-22-2013 07:48:18,475 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 07:48:18,476 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 07:48:18,477 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 07:48:18,479 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 07:48:18,708 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 07:48:18,709 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 07:48:18,713 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 07:48:18,714 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 07:48:18,715 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 07:48:18,716 AM DEBUG Loader:2070 - Done entity load
04-22-2013 07:48:18,717 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 07:48:18,718 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 07:48:18,719 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:05:44,489 AM  INFO TestMain:12 - demo begins...
04-22-2013 09:07:50,963 AM  INFO TestMain:12 - demo begins...
04-22-2013 09:08:20,734 AM  INFO TestMain:12 - demo begins...
04-22-2013 09:11:27,695 AM  INFO TestMain:12 - demo begins...
04-22-2013 09:11:32,171 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:11:32,201 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@595e2ccd
04-22-2013 09:11:32,203 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@595e2ccd
04-22-2013 09:11:32,203 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@595e2ccd
04-22-2013 09:11:32,204 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b86f247
04-22-2013 09:11:32,205 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7eb1cc87
04-22-2013 09:11:32,206 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e5d391d
04-22-2013 09:11:32,208 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@65efb4be
04-22-2013 09:11:32,208 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@65efb4be
04-22-2013 09:11:32,208 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65efb4be
04-22-2013 09:11:32,209 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5df4e571
04-22-2013 09:11:32,209 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5df4e571
04-22-2013 09:11:32,210 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5df4e571
04-22-2013 09:11:32,211 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@d4dd758
04-22-2013 09:11:32,212 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@d4dd758
04-22-2013 09:11:32,213 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d4dd758
04-22-2013 09:11:32,214 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@6f9ec4ed
04-22-2013 09:11:32,215 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@6f9ec4ed
04-22-2013 09:11:32,215 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f9ec4ed
04-22-2013 09:11:32,216 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2b12e7f7
04-22-2013 09:11:32,217 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2b12e7f7
04-22-2013 09:11:32,217 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2b12e7f7
04-22-2013 09:11:32,218 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@540984b
04-22-2013 09:11:32,219 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@540984b
04-22-2013 09:11:32,219 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@540984b
04-22-2013 09:11:32,220 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7eb05acd
04-22-2013 09:11:32,220 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7eb05acd
04-22-2013 09:11:32,221 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7eb05acd
04-22-2013 09:11:32,223 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4934ce4a
04-22-2013 09:11:32,223 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4934ce4a
04-22-2013 09:11:32,224 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26afa68a
04-22-2013 09:11:32,224 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26afa68a
04-22-2013 09:11:32,225 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@52458f41
04-22-2013 09:11:32,226 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@52458f41
04-22-2013 09:11:32,227 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@5c001eb0
04-22-2013 09:11:32,227 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c001eb0
04-22-2013 09:11:32,229 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@44cbbe
04-22-2013 09:11:32,229 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44cbbe
04-22-2013 09:11:32,231 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@6cf1f051
04-22-2013 09:11:32,231 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cf1f051
04-22-2013 09:11:32,233 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@f4d5bc9
04-22-2013 09:11:32,233 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f4d5bc9
04-22-2013 09:11:32,233 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f4d5bc9
04-22-2013 09:11:32,235 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a7cd37a
04-22-2013 09:11:32,236 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@6548f8c8
04-22-2013 09:11:32,237 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6548f8c8
04-22-2013 09:11:32,237 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6548f8c8
04-22-2013 09:11:32,238 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d7e845a
04-22-2013 09:11:32,239 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@26b496d
04-22-2013 09:11:32,239 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26b496d
04-22-2013 09:11:32,241 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@6f1f23e5
04-22-2013 09:11:32,241 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f1f23e5
04-22-2013 09:11:32,242 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e81a197
04-22-2013 09:11:32,243 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e81a197
04-22-2013 09:11:32,244 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@427eb6e2
04-22-2013 09:11:32,244 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@427eb6e2
04-22-2013 09:11:32,247 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6fe78c96
04-22-2013 09:11:32,247 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6fe78c96
04-22-2013 09:11:32,248 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18330bf
04-22-2013 09:11:32,249 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1dd49247
04-22-2013 09:11:32,250 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@ad4d66b
04-22-2013 09:11:32,250 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@ad4d66b
04-22-2013 09:11:32,250 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@ad4d66b
04-22-2013 09:11:32,251 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@219ba640
04-22-2013 09:11:32,252 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@219ba640
04-22-2013 09:11:32,252 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@219ba640
04-22-2013 09:11:32,253 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@3909ea96
04-22-2013 09:11:32,254 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@6ad3c65d
04-22-2013 09:11:32,254 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ad3c65d
04-22-2013 09:11:32,254 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@6ad3c65d
04-22-2013 09:11:32,255 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70e35d5
04-22-2013 09:11:32,255 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70e35d5
04-22-2013 09:11:32,256 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70e35d5
04-22-2013 09:11:32,256 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2339e351
04-22-2013 09:11:32,261 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@5470be88
04-22-2013 09:11:32,261 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5470be88
04-22-2013 09:11:32,261 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@469a9b65
04-22-2013 09:11:32,265 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@28bb494b
04-22-2013 09:11:32,265 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28bb494b
04-22-2013 09:11:32,266 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f636e4e
04-22-2013 09:11:32,267 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b552b76
04-22-2013 09:11:32,269 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a5f2db0
04-22-2013 09:11:32,269 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a5f2db0
04-22-2013 09:11:32,270 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e6214f5
04-22-2013 09:11:32,270 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@794e113b
04-22-2013 09:11:32,270 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@744d76b4
04-22-2013 09:11:32,270 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9ac5f13
04-22-2013 09:11:32,271 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1395dd5b
04-22-2013 09:11:32,271 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53f78b68
04-22-2013 09:11:32,271 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@20e183e9
04-22-2013 09:11:32,271 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359b46dc
04-22-2013 09:11:32,290 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:11:32,296 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:11:32,297 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:11:32,299 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:11:32,310 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:11:32,311 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:11:32,312 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:11:32,312 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:11:32,313 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:11:32,314 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:11:32,315 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:11:32,315 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:11:32,316 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:11:32,316 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:11:32,317 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:11:32,318 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:11:32,318 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:11:32,319 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:11:32,319 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:11:32,321 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@595e2ccd
04-22-2013 09:11:32,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@595e2ccd
04-22-2013 09:11:32,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@595e2ccd
04-22-2013 09:11:32,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b86f247
04-22-2013 09:11:32,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7eb1cc87
04-22-2013 09:11:32,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e5d391d
04-22-2013 09:11:32,323 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@65efb4be
04-22-2013 09:11:32,323 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@65efb4be
04-22-2013 09:11:32,323 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65efb4be
04-22-2013 09:11:32,323 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@5df4e571
04-22-2013 09:11:32,323 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@5df4e571
04-22-2013 09:11:32,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5df4e571
04-22-2013 09:11:32,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@d4dd758
04-22-2013 09:11:32,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@d4dd758
04-22-2013 09:11:32,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d4dd758
04-22-2013 09:11:32,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@6f9ec4ed
04-22-2013 09:11:32,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@6f9ec4ed
04-22-2013 09:11:32,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f9ec4ed
04-22-2013 09:11:32,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2b12e7f7
04-22-2013 09:11:32,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2b12e7f7
04-22-2013 09:11:32,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2b12e7f7
04-22-2013 09:11:32,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@540984b
04-22-2013 09:11:32,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@540984b
04-22-2013 09:11:32,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@540984b
04-22-2013 09:11:32,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7eb05acd
04-22-2013 09:11:32,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@7eb05acd
04-22-2013 09:11:32,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7eb05acd
04-22-2013 09:11:32,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4934ce4a
04-22-2013 09:11:32,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4934ce4a
04-22-2013 09:11:32,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26afa68a
04-22-2013 09:11:32,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26afa68a
04-22-2013 09:11:32,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@52458f41
04-22-2013 09:11:32,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@52458f41
04-22-2013 09:11:32,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@5c001eb0
04-22-2013 09:11:32,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c001eb0
04-22-2013 09:11:32,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@44cbbe
04-22-2013 09:11:32,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44cbbe
04-22-2013 09:11:32,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@6cf1f051
04-22-2013 09:11:32,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cf1f051
04-22-2013 09:11:32,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@f4d5bc9
04-22-2013 09:11:32,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f4d5bc9
04-22-2013 09:11:32,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f4d5bc9
04-22-2013 09:11:32,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a7cd37a
04-22-2013 09:11:32,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@6548f8c8
04-22-2013 09:11:32,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6548f8c8
04-22-2013 09:11:32,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6548f8c8
04-22-2013 09:11:32,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d7e845a
04-22-2013 09:11:32,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@26b496d
04-22-2013 09:11:32,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26b496d
04-22-2013 09:11:32,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@6f1f23e5
04-22-2013 09:11:32,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f1f23e5
04-22-2013 09:11:32,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e81a197
04-22-2013 09:11:32,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e81a197
04-22-2013 09:11:32,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@427eb6e2
04-22-2013 09:11:32,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@427eb6e2
04-22-2013 09:11:32,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6fe78c96
04-22-2013 09:11:32,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6fe78c96
04-22-2013 09:11:32,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18330bf
04-22-2013 09:11:32,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1dd49247
04-22-2013 09:11:32,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@ad4d66b
04-22-2013 09:11:32,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@ad4d66b
04-22-2013 09:11:32,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@ad4d66b
04-22-2013 09:11:32,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@219ba640
04-22-2013 09:11:32,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@219ba640
04-22-2013 09:11:32,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@219ba640
04-22-2013 09:11:32,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@3909ea96
04-22-2013 09:11:32,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@6ad3c65d
04-22-2013 09:11:32,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ad3c65d
04-22-2013 09:11:32,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@6ad3c65d
04-22-2013 09:11:32,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70e35d5
04-22-2013 09:11:32,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70e35d5
04-22-2013 09:11:32,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70e35d5
04-22-2013 09:11:32,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@2339e351
04-22-2013 09:11:32,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@5470be88
04-22-2013 09:11:32,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5470be88
04-22-2013 09:11:32,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@469a9b65
04-22-2013 09:11:32,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@28bb494b
04-22-2013 09:11:32,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28bb494b
04-22-2013 09:11:32,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f636e4e
04-22-2013 09:11:32,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b552b76
04-22-2013 09:11:32,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@4a5f2db0
04-22-2013 09:11:32,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a5f2db0
04-22-2013 09:11:32,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-22-2013 09:11:32,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-22-2013 09:11:32,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f90ef12
04-22-2013 09:11:32,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@643f96ee
04-22-2013 09:11:32,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ace16ad
04-22-2013 09:11:32,339 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6032bd65
04-22-2013 09:11:32,339 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2330633a
04-22-2013 09:11:32,339 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3dc286e2
04-22-2013 09:11:32,339 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:11:32,339 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:11:32,339 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:11:32,340 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:11:32,340 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:11:32,340 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:11:32,340 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:11:32,340 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:11:32,341 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:11:32,341 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:11:32,341 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:11:32,341 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:11:32,341 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:11:32,341 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:11:32,342 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:11:32,342 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:11:32,409 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:11:32,416 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:11:32,417 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:11:32,441 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:11:32,443 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:11:32,444 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:11:32,445 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:11:32,445 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:11:32,446 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:11:32,446 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:11:32,448 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:11:32,456 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:11:32,457 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:11:32,457 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:11:32,458 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:11:32,459 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:11:32,460 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 09:11:32,461 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:11:32,473 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:11:32,473 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:11:32,486 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:11:32,496 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:11:32,496 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:11:32,516 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:11:32,522 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:11:32,551 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:11:32,551 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:11:32,555 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:11:32,575 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:11:32,577 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:11:32,583 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:11:32,586 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:11:32,608 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,612 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:11:32,616 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:11:32,617 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:11:32,620 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,620 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:11:32,620 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:11:32,620 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:11:32,621 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,621 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:11:32,621 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:11:32,621 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:11:32,621 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,622 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:11:32,622 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:11:32,622 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:11:32,622 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,622 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:11:32,622 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:11:32,623 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:11:32,623 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,623 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:11:32,623 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:11:32,623 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:11:32,624 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,624 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:11:32,624 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:11:32,624 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:11:32,624 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,625 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:11:32,625 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:11:32,625 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:11:32,625 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,625 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:11:32,625 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:11:32,626 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:11:32,626 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,626 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:11:32,626 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:11:32,626 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:11:32,627 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,627 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:11:32,627 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:11:32,627 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:11:32,627 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,628 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:11:32,628 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:11:32,628 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:11:32,628 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,628 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:11:32,629 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:11:32,629 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:11:32,629 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,629 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:11:32,629 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:11:32,629 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:11:32,630 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,630 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:11:32,630 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:11:32,630 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:11:32,631 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,631 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:11:32,631 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:11:32,631 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:11:32,631 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,632 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:11:32,632 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:11:32,632 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:11:32,632 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,632 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:11:32,632 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:11:32,633 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:11:32,633 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,633 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:11:32,633 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:11:32,633 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:11:32,633 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:11:32,634 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:11:32,634 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:11:32,634 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:11:32,636 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:11:32,636 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:11:32,636 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:11:32,636 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:11:32,637 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:11:32,637 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:11:32,637 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:11:32,637 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:11:32,637 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:11:32,637 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:11:32,637 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:11:32,638 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:11:32,638 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:11:32,638 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:11:32,638 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:11:32,638 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:11:32,638 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:11:32,638 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:11:32,639 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:11:32,639 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:11:32,639 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:11:32,640 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:11:32,640 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:11:32,641 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:11:32,641 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:11:32,641 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:11:32,641 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:11:32,650 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:11:32,716 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:11:32,716 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:11:32,717 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:11:32,717 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:11:32,739 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:11:36,012 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 09:11:36,013 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 09:11:36,014 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 09:11:36,014 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 09:11:37,007 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 09:11:37,483 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 09:11:37,484 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 09:11:37,484 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 09:11:37,484 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 09:11:37,485 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 09:11:37,485 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 09:11:37,485 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 09:11:37,486 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 09:11:37,486 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 09:11:37,490 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 09:11:37,491 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 09:11:37,491 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 09:11:37,492 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 09:11:37,492 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 09:11:37,495 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 09:11:37,495 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 09:11:37,496 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 09:11:37,496 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 09:11:37,496 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 09:11:37,497 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 09:11:37,498 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 09:11:37,499 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 09:11:37,499 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 09:11:37,499 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 09:11:37,500 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 09:11:37,500 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 09:11:37,500 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 09:11:37,501 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 09:11:37,501 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 09:11:37,515 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 09:11:37,524 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 09:11:37,525 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Harris, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 09:11:37,582 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:11:37,648 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 09:11:37,649 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 09:11:37,649 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 09:11:37,649 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:11:37,650 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:11:37,650 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 09:11:37,664 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:37,664 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:37,665 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:11:37,666 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:11:37,666 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:11:37,667 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:11:37,667 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:11:37,667 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:11:37,668 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:37,668 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:37,673 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:37,674 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:37,676 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e18ff27
04-22-2013 09:11:37,677 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: cfd9510f-1452-45c7-bbaa-e30d25a38a70 (<unnamed>)
04-22-2013 09:11:37,678 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 09:11:37,678 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 09:11:37,682 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 09:11:37,682 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 09:11:38,275 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 09:11:38,275 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:11:38,276 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:11:38,276 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:11:38,276 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:11:38,276 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:11:38,277 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:11:38,277 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:11:38,277 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:11:38,277 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:11:44,080 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 09:11:44,080 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 09:11:44,081 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 09:11:44,081 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 09:11:44,082 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:11:44,083 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 09:11:44,083 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 09:11:44,084 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 09:11:44,090 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 09:11:44,129 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@4532b038
04-22-2013 09:11:44,129 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: VZWDB01 
04-22-2013 09:11:44,161 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665931041
04-22-2013 09:11:44,165 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:11:44,179 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:11:44,179 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:11:44,181 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:44,473 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:11:44,473 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:11:44,480 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:11:44,482 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:11:44,482 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:11:44,482 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:11:44,483 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:11:44,483 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:11:44,483 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:11:48,275 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665931082
04-22-2013 09:11:48,275 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:11:48,276 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:11:48,276 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:11:48,284 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:11:48,509 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:11:48,509 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:11:48,510 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:11:48,511 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:11:48,511 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:11:48,511 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:11:48,512 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:11:48,512 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:11:48,512 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:28:06,679 AM  INFO TestMain:15 - demo begins...
04-22-2013 09:28:11,207 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:28:11,258 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@62c3e9e9
04-22-2013 09:28:11,261 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@62c3e9e9
04-22-2013 09:28:11,262 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62c3e9e9
04-22-2013 09:28:11,264 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a383118
04-22-2013 09:28:11,266 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5097d026
04-22-2013 09:28:11,267 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@18987a33
04-22-2013 09:28:11,271 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@5c6ed322
04-22-2013 09:28:11,271 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@5c6ed322
04-22-2013 09:28:11,272 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c6ed322
04-22-2013 09:28:11,274 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@556917ee
04-22-2013 09:28:11,275 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@556917ee
04-22-2013 09:28:11,275 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@556917ee
04-22-2013 09:28:11,279 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@ad4d66b
04-22-2013 09:28:11,279 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@ad4d66b
04-22-2013 09:28:11,284 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ad4d66b
04-22-2013 09:28:11,287 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@3c1a1399
04-22-2013 09:28:11,287 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@3c1a1399
04-22-2013 09:28:11,288 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c1a1399
04-22-2013 09:28:11,290 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@27b03c1a
04-22-2013 09:28:11,291 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@27b03c1a
04-22-2013 09:28:11,292 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@27b03c1a
04-22-2013 09:28:11,295 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@21cc5069
04-22-2013 09:28:11,295 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@21cc5069
04-22-2013 09:28:11,296 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21cc5069
04-22-2013 09:28:11,299 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@62a2220f
04-22-2013 09:28:11,299 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@62a2220f
04-22-2013 09:28:11,300 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62a2220f
04-22-2013 09:28:11,303 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a199939
04-22-2013 09:28:11,304 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a199939
04-22-2013 09:28:11,306 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@178aab40
04-22-2013 09:28:11,307 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@178aab40
04-22-2013 09:28:11,309 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@68a0864f
04-22-2013 09:28:11,310 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@68a0864f
04-22-2013 09:28:11,312 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@4a6397eb
04-22-2013 09:28:11,313 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a6397eb
04-22-2013 09:28:11,317 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@5d2412e7
04-22-2013 09:28:11,318 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d2412e7
04-22-2013 09:28:11,320 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4a738d08
04-22-2013 09:28:11,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a738d08
04-22-2013 09:28:11,325 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2830ae41
04-22-2013 09:28:11,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2830ae41
04-22-2013 09:28:11,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2830ae41
04-22-2013 09:28:11,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@552c8fa8
04-22-2013 09:28:11,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@4dbb9a58
04-22-2013 09:28:11,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4dbb9a58
04-22-2013 09:28:11,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4dbb9a58
04-22-2013 09:28:11,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3fe2670b
04-22-2013 09:28:11,340 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@fc54796
04-22-2013 09:28:11,341 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fc54796
04-22-2013 09:28:11,343 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@1c778255
04-22-2013 09:28:11,343 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c778255
04-22-2013 09:28:11,345 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@784a7df6
04-22-2013 09:28:11,346 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@784a7df6
04-22-2013 09:28:11,348 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@a0b1cd0
04-22-2013 09:28:11,349 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a0b1cd0
04-22-2013 09:28:11,352 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@606e1dec
04-22-2013 09:28:11,353 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@606e1dec
04-22-2013 09:28:11,354 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6602e323
04-22-2013 09:28:11,356 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@59e184cb
04-22-2013 09:28:11,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@27b4c1d7
04-22-2013 09:28:11,359 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@27b4c1d7
04-22-2013 09:28:11,359 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@27b4c1d7
04-22-2013 09:28:11,361 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ba99347
04-22-2013 09:28:11,362 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ba99347
04-22-2013 09:28:11,362 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ba99347
04-22-2013 09:28:11,364 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@83e96cf
04-22-2013 09:28:11,366 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@4b9a0203
04-22-2013 09:28:11,367 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4b9a0203
04-22-2013 09:28:11,368 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@4b9a0203
04-22-2013 09:28:11,370 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@527f58ef
04-22-2013 09:28:11,370 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@527f58ef
04-22-2013 09:28:11,371 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@527f58ef
04-22-2013 09:28:11,373 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@1af0b4a3
04-22-2013 09:28:11,382 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@720e4245
04-22-2013 09:28:11,383 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@720e4245
04-22-2013 09:28:11,384 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@581de498
04-22-2013 09:28:11,391 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@47f08ed8
04-22-2013 09:28:11,391 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47f08ed8
04-22-2013 09:28:11,393 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6da5db4b
04-22-2013 09:28:11,395 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@561557c0
04-22-2013 09:28:11,400 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@435db13f
04-22-2013 09:28:11,400 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@435db13f
04-22-2013 09:28:11,402 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@14718242
04-22-2013 09:28:11,402 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@281ec58a
04-22-2013 09:28:11,403 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c3afb99
04-22-2013 09:28:11,404 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45c3987
04-22-2013 09:28:11,405 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-22-2013 09:28:11,405 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@747917a
04-22-2013 09:28:11,406 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-22-2013 09:28:11,407 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-22-2013 09:28:11,440 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:28:11,453 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:28:11,456 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:28:11,459 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:28:11,481 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:28:11,482 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:28:11,484 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:28:11,485 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:28:11,487 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:28:11,489 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:28:11,492 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:28:11,493 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:28:11,494 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:28:11,495 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:28:11,497 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:28:11,498 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:28:11,500 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:28:11,501 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:28:11,503 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:28:11,507 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@62c3e9e9
04-22-2013 09:28:11,507 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@62c3e9e9
04-22-2013 09:28:11,508 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62c3e9e9
04-22-2013 09:28:11,509 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a383118
04-22-2013 09:28:11,509 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5097d026
04-22-2013 09:28:11,510 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@18987a33
04-22-2013 09:28:11,510 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@5c6ed322
04-22-2013 09:28:11,511 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@5c6ed322
04-22-2013 09:28:11,512 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c6ed322
04-22-2013 09:28:11,512 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@556917ee
04-22-2013 09:28:11,513 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@556917ee
04-22-2013 09:28:11,514 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@556917ee
04-22-2013 09:28:11,514 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@ad4d66b
04-22-2013 09:28:11,515 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@ad4d66b
04-22-2013 09:28:11,516 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ad4d66b
04-22-2013 09:28:11,516 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@3c1a1399
04-22-2013 09:28:11,517 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@3c1a1399
04-22-2013 09:28:11,517 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c1a1399
04-22-2013 09:28:11,518 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@27b03c1a
04-22-2013 09:28:11,519 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@27b03c1a
04-22-2013 09:28:11,519 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@27b03c1a
04-22-2013 09:28:11,520 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@21cc5069
04-22-2013 09:28:11,520 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@21cc5069
04-22-2013 09:28:11,521 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21cc5069
04-22-2013 09:28:11,522 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@62a2220f
04-22-2013 09:28:11,523 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@62a2220f
04-22-2013 09:28:11,523 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62a2220f
04-22-2013 09:28:11,524 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a199939
04-22-2013 09:28:11,525 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a199939
04-22-2013 09:28:11,525 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@178aab40
04-22-2013 09:28:11,526 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@178aab40
04-22-2013 09:28:11,527 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@68a0864f
04-22-2013 09:28:11,527 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@68a0864f
04-22-2013 09:28:11,528 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@4a6397eb
04-22-2013 09:28:11,528 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a6397eb
04-22-2013 09:28:11,529 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@5d2412e7
04-22-2013 09:28:11,530 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d2412e7
04-22-2013 09:28:11,531 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@4a738d08
04-22-2013 09:28:11,531 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a738d08
04-22-2013 09:28:11,532 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2830ae41
04-22-2013 09:28:11,533 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2830ae41
04-22-2013 09:28:11,533 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2830ae41
04-22-2013 09:28:11,534 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@552c8fa8
04-22-2013 09:28:11,534 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@4dbb9a58
04-22-2013 09:28:11,535 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4dbb9a58
04-22-2013 09:28:11,536 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4dbb9a58
04-22-2013 09:28:11,536 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3fe2670b
04-22-2013 09:28:11,537 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@fc54796
04-22-2013 09:28:11,537 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fc54796
04-22-2013 09:28:11,538 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@1c778255
04-22-2013 09:28:11,539 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c778255
04-22-2013 09:28:11,539 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@784a7df6
04-22-2013 09:28:11,540 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@784a7df6
04-22-2013 09:28:11,540 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@a0b1cd0
04-22-2013 09:28:11,541 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a0b1cd0
04-22-2013 09:28:11,542 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@606e1dec
04-22-2013 09:28:11,542 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@606e1dec
04-22-2013 09:28:11,543 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6602e323
04-22-2013 09:28:11,543 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@59e184cb
04-22-2013 09:28:11,544 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@27b4c1d7
04-22-2013 09:28:11,544 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@27b4c1d7
04-22-2013 09:28:11,545 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@27b4c1d7
04-22-2013 09:28:11,546 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ba99347
04-22-2013 09:28:11,546 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ba99347
04-22-2013 09:28:11,547 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ba99347
04-22-2013 09:28:11,548 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@83e96cf
04-22-2013 09:28:11,548 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@4b9a0203
04-22-2013 09:28:11,549 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4b9a0203
04-22-2013 09:28:11,549 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@4b9a0203
04-22-2013 09:28:11,550 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@527f58ef
04-22-2013 09:28:11,551 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@527f58ef
04-22-2013 09:28:11,551 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@527f58ef
04-22-2013 09:28:11,552 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@1af0b4a3
04-22-2013 09:28:11,552 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@720e4245
04-22-2013 09:28:11,553 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@720e4245
04-22-2013 09:28:11,553 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@581de498
04-22-2013 09:28:11,554 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@47f08ed8
04-22-2013 09:28:11,555 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47f08ed8
04-22-2013 09:28:11,556 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6da5db4b
04-22-2013 09:28:11,556 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@561557c0
04-22-2013 09:28:11,557 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@435db13f
04-22-2013 09:28:11,557 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@435db13f
04-22-2013 09:28:11,558 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7215fb38
04-22-2013 09:28:11,559 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@120540c
04-22-2013 09:28:11,559 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@716de067
04-22-2013 09:28:11,560 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64a7c45e
04-22-2013 09:28:11,561 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@424d2af2
04-22-2013 09:28:11,561 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@583e97df
04-22-2013 09:28:11,562 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7564debb
04-22-2013 09:28:11,562 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@315b0333
04-22-2013 09:28:11,563 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:28:11,564 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:28:11,565 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:28:11,565 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:28:11,566 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:28:11,567 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:28:11,567 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:28:11,568 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:28:11,568 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:28:11,569 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:28:11,570 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:28:11,570 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:28:11,571 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:28:11,572 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:28:11,572 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:28:11,573 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:28:11,682 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:28:11,695 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:28:11,697 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:28:11,738 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:28:11,742 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:28:11,745 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:28:11,746 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:28:11,747 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:28:11,748 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:28:11,750 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:28:11,753 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:28:11,769 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:28:11,771 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:28:11,772 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:28:11,774 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:28:11,775 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:28:11,777 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 09:28:11,781 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:28:11,798 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:28:11,799 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:28:11,814 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:28:11,831 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:28:11,832 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:28:11,874 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:28:11,887 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:28:11,946 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:28:11,946 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:28:11,953 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:28:11,990 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:28:11,994 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:28:12,005 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:28:12,012 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:28:12,069 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,075 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:28:12,080 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:28:12,083 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:28:12,088 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,089 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:28:12,090 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:28:12,091 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:28:12,091 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,092 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:28:12,093 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:28:12,093 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:28:12,094 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,095 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:28:12,096 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:28:12,096 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:28:12,097 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,098 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:28:12,098 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:28:12,099 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:28:12,100 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,100 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:28:12,101 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:28:12,102 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:28:12,102 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,103 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:28:12,104 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:28:12,105 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:28:12,106 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,107 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:28:12,107 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:28:12,108 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:28:12,108 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,109 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:28:12,110 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:28:12,110 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:28:12,111 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,112 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:28:12,112 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:28:12,113 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:28:12,114 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,114 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:28:12,115 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:28:12,116 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:28:12,116 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,117 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:28:12,118 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:28:12,118 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:28:12,119 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,120 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:28:12,120 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:28:12,121 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:28:12,121 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,122 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:28:12,123 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:28:12,123 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:28:12,124 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,125 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:28:12,125 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:28:12,126 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:28:12,127 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,127 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:28:12,128 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:28:12,129 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:28:12,129 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,130 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:28:12,131 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:28:12,131 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:28:12,132 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,133 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:28:12,133 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:28:12,134 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:28:12,135 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,135 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:28:12,136 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:28:12,136 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:28:12,137 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:28:12,138 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:28:12,140 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:28:12,141 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:28:12,144 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:28:12,145 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:28:12,146 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:28:12,146 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:28:12,147 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:28:12,147 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:28:12,148 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:28:12,148 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:28:12,149 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:28:12,149 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:28:12,150 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:28:12,150 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:28:12,151 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:28:12,151 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:28:12,152 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:28:12,152 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:28:12,153 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:28:12,153 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:28:12,154 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:28:12,154 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:28:12,156 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:28:12,158 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:28:12,158 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:28:12,158 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:28:12,159 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:28:12,159 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:28:12,159 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:28:12,186 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:28:12,345 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:28:12,346 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:28:12,347 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:28:12,348 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:28:12,382 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:28:16,123 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 09:28:16,125 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 09:28:16,127 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 09:28:16,128 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 09:28:17,212 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 09:28:17,734 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 09:28:17,735 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 09:28:17,735 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 09:28:17,736 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 09:28:17,737 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 09:28:17,737 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 09:28:17,738 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 09:28:17,738 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 09:28:17,739 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 09:28:17,745 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 09:28:17,745 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 09:28:17,746 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 09:28:17,747 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 09:28:17,747 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 09:28:17,752 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 09:28:17,753 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 09:28:17,753 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 09:28:17,754 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 09:28:17,755 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 09:28:17,755 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 09:28:17,757 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 09:28:17,758 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 09:28:17,759 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 09:28:17,760 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 09:28:17,760 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 09:28:17,761 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 09:28:17,761 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 09:28:17,762 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 09:28:17,763 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 09:28:17,780 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 09:28:17,795 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 09:28:17,796 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Harris, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 09:28:17,928 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:28:18,076 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 09:28:18,077 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 09:28:18,078 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 09:28:18,079 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:28:18,080 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:28:18,081 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 09:28:18,104 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:28:18,107 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:28:18,110 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:28:18,113 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:28:18,115 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:28:18,118 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:28:18,121 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:28:18,123 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:28:18,126 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:28:18,129 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:28:18,141 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:28:18,144 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:28:18,148 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@32554189
04-22-2013 09:28:18,152 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 49e4167b-044a-49c9-9499-bc26e5f8f5d0 (<unnamed>)
04-22-2013 09:28:18,153 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 09:28:18,153 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 09:28:18,161 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 09:28:18,162 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 09:28:18,712 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 09:28:18,713 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:28:18,714 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:28:18,714 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:28:18,715 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:28:18,716 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:28:18,717 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:28:18,718 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:28:18,719 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:28:18,719 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:28:24,640 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 09:28:24,642 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 09:28:24,643 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 09:28:24,645 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 09:28:24,647 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:28:24,649 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 09:28:24,650 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 09:28:24,651 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 09:28:24,664 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 09:28:24,730 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@40f23491
04-22-2013 09:28:24,730 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: VZWDB01 
04-22-2013 09:28:24,800 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665941047
04-22-2013 09:28:24,805 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 09:28:24,805 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:28:24,806 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:28:24,807 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 09:28:24,816 AM DEBUG AbstractSaveEventListener:133 - Generated identifier: 000005, using strategy: org.hibernate.id.Assigned
04-22-2013 09:28:24,833 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:28:24,835 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:28:24,838 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
04-22-2013 09:28:24,839 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:28:24,842 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:28:24,845 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=testpartyType, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=testLAst, address2=testAdd2, address3=testAdd3, firstname=testFname, type=Business, postcode=4234, suburb=Comp, partyId=000005, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:28:24,903 AM DEBUG SQL:104 - insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:28:25,516 AM DEBUG SqlExceptionHelper:139 - ORA-12899: value too large for column "VZWMME"."CONTACT"."PARTYTYPE" (actual: 13, maximum: 8)
 [n/a]
java.sql.SQLException: ORA-12899: value too large for column "VZWMME"."CONTACT"."PARTYTYPE" (actual: 13, maximum: 8)

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:445)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:879)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:450)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:192)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1044)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1329)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3584)
	at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3665)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1352)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractStatementProxyHandler.continueInvocation(AbstractStatementProxyHandler.java:122)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at com.sun.proxy.$Proxy7.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:56)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2849)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3290)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:80)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:264)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:186)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:326)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:52)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1081)
	at org.hibernate.ejb.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:973)
	at com.mme.model.dao.impl.GenericDaoImpl.save(GenericDaoImpl.java:73)
	at com.mme.test.TestMain.main(TestMain.java:40)
04-22-2013 09:28:25,547 AM  WARN SqlExceptionHelper:143 - SQL Error: 12899, SQLState: 72000
04-22-2013 09:28:25,548 AM ERROR SqlExceptionHelper:144 - ORA-12899: value too large for column "VZWMME"."CONTACT"."PARTYTYPE" (actual: 13, maximum: 8)

04-22-2013 09:28:25,553 AM DEBUG AbstractTransactionImpl:203 - rolling back
04-22-2013 09:28:25,784 AM DEBUG JdbcTransaction:164 - rolled JDBC Connection
04-22-2013 09:28:25,802 AM DEBUG JdbcCoordinatorImpl:138 - HHH000420: Closing un-released batch
04-22-2013 09:28:25,803 AM  INFO AbstractBatchImpl:205 - HHH000010: On release of batch it still contained JDBC statements
04-22-2013 09:28:25,804 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:28:25,805 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:28:25,806 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:28:59,636 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665941396
04-22-2013 09:28:59,640 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:28:59,660 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:28:59,660 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:28:59,661 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:28:59,943 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:28:59,943 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:28:59,948 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:28:59,948 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:28:59,948 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:28:59,949 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:28:59,949 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:28:59,949 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:28:59,949 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:29:13,582 AM  INFO TestMain:15 - demo begins...
04-22-2013 09:29:47,850 AM  INFO TestMain:15 - demo begins...
04-22-2013 09:29:51,723 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:29:51,778 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@331c89c
04-22-2013 09:29:51,781 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@331c89c
04-22-2013 09:29:51,782 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@331c89c
04-22-2013 09:29:51,784 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@656dc861
04-22-2013 09:29:51,787 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e716cb7
04-22-2013 09:29:51,788 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@d18d189
04-22-2013 09:29:51,792 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@4abf053f
04-22-2013 09:29:51,793 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@4abf053f
04-22-2013 09:29:51,794 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4abf053f
04-22-2013 09:29:51,796 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@238b8914
04-22-2013 09:29:51,797 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@238b8914
04-22-2013 09:29:51,797 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@238b8914
04-22-2013 09:29:51,801 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@59d0d45b
04-22-2013 09:29:51,802 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@59d0d45b
04-22-2013 09:29:51,807 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59d0d45b
04-22-2013 09:29:51,810 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@76caf6c1
04-22-2013 09:29:51,810 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@76caf6c1
04-22-2013 09:29:51,811 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@76caf6c1
04-22-2013 09:29:51,814 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2d7aece8
04-22-2013 09:29:51,815 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2d7aece8
04-22-2013 09:29:51,815 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d7aece8
04-22-2013 09:29:51,819 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@67c7980c
04-22-2013 09:29:51,819 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@67c7980c
04-22-2013 09:29:51,820 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67c7980c
04-22-2013 09:29:51,823 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@bdccedd
04-22-2013 09:29:51,824 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@bdccedd
04-22-2013 09:29:51,824 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@bdccedd
04-22-2013 09:29:51,828 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@50502819
04-22-2013 09:29:51,829 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@50502819
04-22-2013 09:29:51,833 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ef07355
04-22-2013 09:29:51,834 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ef07355
04-22-2013 09:29:51,836 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@215983b7
04-22-2013 09:29:51,837 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@215983b7
04-22-2013 09:29:51,839 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@506835fb
04-22-2013 09:29:51,840 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@506835fb
04-22-2013 09:29:51,843 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@24988707
04-22-2013 09:29:51,844 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@24988707
04-22-2013 09:29:51,847 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@3336a1a1
04-22-2013 09:29:51,849 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3336a1a1
04-22-2013 09:29:51,854 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1cee1ede
04-22-2013 09:29:51,858 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cee1ede
04-22-2013 09:29:51,859 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cee1ede
04-22-2013 09:29:51,861 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69236cd5
04-22-2013 09:29:51,865 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e5dc994
04-22-2013 09:29:51,865 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e5dc994
04-22-2013 09:29:51,866 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e5dc994
04-22-2013 09:29:51,867 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b14b82b
04-22-2013 09:29:51,869 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@44676e3f
04-22-2013 09:29:51,870 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44676e3f
04-22-2013 09:29:51,872 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26d58939
04-22-2013 09:29:51,873 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26d58939
04-22-2013 09:29:51,875 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a20f443
04-22-2013 09:29:51,875 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a20f443
04-22-2013 09:29:51,877 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@102f729e
04-22-2013 09:29:51,878 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@102f729e
04-22-2013 09:29:51,881 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a68cb6b
04-22-2013 09:29:51,882 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a68cb6b
04-22-2013 09:29:51,883 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4cdada24
04-22-2013 09:29:51,885 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@72e8a021
04-22-2013 09:29:51,888 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@54083e1e
04-22-2013 09:29:51,889 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@54083e1e
04-22-2013 09:29:51,890 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@54083e1e
04-22-2013 09:29:51,892 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@191a01dd
04-22-2013 09:29:51,892 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@191a01dd
04-22-2013 09:29:51,893 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@191a01dd
04-22-2013 09:29:51,895 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@73367e28
04-22-2013 09:29:51,897 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@78e45b5e
04-22-2013 09:29:51,898 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@78e45b5e
04-22-2013 09:29:51,898 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@78e45b5e
04-22-2013 09:29:51,900 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56acdd02
04-22-2013 09:29:51,901 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56acdd02
04-22-2013 09:29:51,902 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56acdd02
04-22-2013 09:29:51,903 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@195428dd
04-22-2013 09:29:51,912 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@5f1eb199
04-22-2013 09:29:51,913 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f1eb199
04-22-2013 09:29:51,914 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c95da38
04-22-2013 09:29:51,921 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2bd9e282
04-22-2013 09:29:51,922 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2bd9e282
04-22-2013 09:29:51,923 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5bf0aecc
04-22-2013 09:29:51,925 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@45cbda0a
04-22-2013 09:29:51,931 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@48e29820
04-22-2013 09:29:51,932 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@48e29820
04-22-2013 09:29:51,934 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c3afb99
04-22-2013 09:29:51,934 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45c3987
04-22-2013 09:29:51,935 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@42c4d04d
04-22-2013 09:29:51,936 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@747917a
04-22-2013 09:29:51,936 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6b9fe451
04-22-2013 09:29:51,937 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e46b90a
04-22-2013 09:29:51,939 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51e67ac
04-22-2013 09:29:51,940 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f284fd4
04-22-2013 09:29:51,990 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:29:52,005 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:29:52,010 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:29:52,014 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:29:52,047 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:29:52,050 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:29:52,054 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:29:52,055 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:29:52,060 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:29:52,062 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:29:52,068 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:29:52,070 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:29:52,071 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:29:52,073 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:29:52,075 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:29:52,077 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:29:52,079 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:29:52,080 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:29:52,082 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:29:52,087 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@331c89c
04-22-2013 09:29:52,088 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@331c89c
04-22-2013 09:29:52,089 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@331c89c
04-22-2013 09:29:52,090 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@656dc861
04-22-2013 09:29:52,091 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e716cb7
04-22-2013 09:29:52,092 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@d18d189
04-22-2013 09:29:52,092 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@4abf053f
04-22-2013 09:29:52,093 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@4abf053f
04-22-2013 09:29:52,094 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4abf053f
04-22-2013 09:29:52,095 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@238b8914
04-22-2013 09:29:52,096 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@238b8914
04-22-2013 09:29:52,098 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@238b8914
04-22-2013 09:29:52,099 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@59d0d45b
04-22-2013 09:29:52,100 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@59d0d45b
04-22-2013 09:29:52,100 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59d0d45b
04-22-2013 09:29:52,101 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@76caf6c1
04-22-2013 09:29:52,102 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@76caf6c1
04-22-2013 09:29:52,103 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@76caf6c1
04-22-2013 09:29:52,105 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2d7aece8
04-22-2013 09:29:52,106 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@2d7aece8
04-22-2013 09:29:52,108 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d7aece8
04-22-2013 09:29:52,109 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@67c7980c
04-22-2013 09:29:52,109 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@67c7980c
04-22-2013 09:29:52,110 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67c7980c
04-22-2013 09:29:52,111 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@bdccedd
04-22-2013 09:29:52,111 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@bdccedd
04-22-2013 09:29:52,112 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@bdccedd
04-22-2013 09:29:52,113 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@50502819
04-22-2013 09:29:52,113 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@50502819
04-22-2013 09:29:52,114 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ef07355
04-22-2013 09:29:52,115 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ef07355
04-22-2013 09:29:52,115 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@215983b7
04-22-2013 09:29:52,116 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@215983b7
04-22-2013 09:29:52,117 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@506835fb
04-22-2013 09:29:52,117 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@506835fb
04-22-2013 09:29:52,118 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@24988707
04-22-2013 09:29:52,119 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@24988707
04-22-2013 09:29:52,119 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@3336a1a1
04-22-2013 09:29:52,120 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3336a1a1
04-22-2013 09:29:52,120 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1cee1ede
04-22-2013 09:29:52,121 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cee1ede
04-22-2013 09:29:52,122 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cee1ede
04-22-2013 09:29:52,122 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69236cd5
04-22-2013 09:29:52,123 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e5dc994
04-22-2013 09:29:52,124 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e5dc994
04-22-2013 09:29:52,125 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e5dc994
04-22-2013 09:29:52,125 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b14b82b
04-22-2013 09:29:52,126 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@44676e3f
04-22-2013 09:29:52,126 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44676e3f
04-22-2013 09:29:52,127 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@26d58939
04-22-2013 09:29:52,128 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26d58939
04-22-2013 09:29:52,129 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a20f443
04-22-2013 09:29:52,130 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a20f443
04-22-2013 09:29:52,131 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@102f729e
04-22-2013 09:29:52,131 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@102f729e
04-22-2013 09:29:52,132 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a68cb6b
04-22-2013 09:29:52,133 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a68cb6b
04-22-2013 09:29:52,133 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4cdada24
04-22-2013 09:29:52,134 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@72e8a021
04-22-2013 09:29:52,135 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@54083e1e
04-22-2013 09:29:52,136 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@54083e1e
04-22-2013 09:29:52,137 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@54083e1e
04-22-2013 09:29:52,138 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@191a01dd
04-22-2013 09:29:52,139 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@191a01dd
04-22-2013 09:29:52,140 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@191a01dd
04-22-2013 09:29:52,141 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@73367e28
04-22-2013 09:29:52,142 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@78e45b5e
04-22-2013 09:29:52,143 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@78e45b5e
04-22-2013 09:29:52,146 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@78e45b5e
04-22-2013 09:29:52,148 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56acdd02
04-22-2013 09:29:52,149 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56acdd02
04-22-2013 09:29:52,150 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56acdd02
04-22-2013 09:29:52,151 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@195428dd
04-22-2013 09:29:52,153 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@5f1eb199
04-22-2013 09:29:52,154 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f1eb199
04-22-2013 09:29:52,155 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c95da38
04-22-2013 09:29:52,156 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2bd9e282
04-22-2013 09:29:52,158 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2bd9e282
04-22-2013 09:29:52,159 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5bf0aecc
04-22-2013 09:29:52,161 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@45cbda0a
04-22-2013 09:29:52,162 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@48e29820
04-22-2013 09:29:52,163 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@48e29820
04-22-2013 09:29:52,165 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@716de067
04-22-2013 09:29:52,166 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@64a7c45e
04-22-2013 09:29:52,167 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@424d2af2
04-22-2013 09:29:52,168 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@583e97df
04-22-2013 09:29:52,169 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7564debb
04-22-2013 09:29:52,170 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@315b0333
04-22-2013 09:29:52,171 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e2f2295
04-22-2013 09:29:52,172 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@78878c4c
04-22-2013 09:29:52,174 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:29:52,175 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:29:52,176 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:29:52,177 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:29:52,178 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:29:52,179 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:29:52,180 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:29:52,181 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:29:52,182 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:29:52,183 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:29:52,183 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:29:52,184 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:29:52,186 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:29:52,187 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:29:52,188 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:29:52,189 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:29:52,351 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:29:52,369 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:29:52,373 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:29:52,430 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:29:52,435 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:29:52,440 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:29:52,442 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:29:52,444 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:29:52,446 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:29:52,447 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:29:52,451 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:29:52,478 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:29:52,481 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:29:52,483 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:29:52,486 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:29:52,488 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:29:52,492 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 09:29:52,498 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:29:52,527 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:29:52,527 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:29:52,555 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:29:52,576 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:29:52,577 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:29:52,631 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:29:52,649 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:29:52,737 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:29:52,738 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:29:52,745 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:29:52,802 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:29:52,808 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:29:52,830 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:29:52,842 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:29:52,910 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,919 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:29:52,925 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:29:52,927 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:29:52,934 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,936 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:29:52,937 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:29:52,937 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:29:52,939 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,940 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:29:52,941 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:29:52,942 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:29:52,944 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,945 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:29:52,946 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:29:52,947 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:29:52,948 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,950 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:29:52,951 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:29:52,952 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:29:52,953 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,954 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:29:52,955 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:29:52,956 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:29:52,957 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,959 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:29:52,960 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:29:52,960 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:29:52,961 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,962 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:29:52,963 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:29:52,963 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:29:52,964 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,965 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:29:52,965 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:29:52,966 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:29:52,966 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,967 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:29:52,968 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:29:52,968 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:29:52,969 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,970 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:29:52,970 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:29:52,971 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:29:52,972 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,972 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:29:52,973 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:29:52,974 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:29:52,974 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,975 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:29:52,976 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:29:52,976 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:29:52,977 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,978 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:29:52,978 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:29:52,979 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:29:52,979 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,980 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:29:52,981 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:29:52,981 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:29:52,982 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,983 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:29:52,983 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:29:52,984 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:29:52,985 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,985 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:29:52,986 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:29:52,986 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:29:52,987 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,988 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:29:52,988 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:29:52,989 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:29:52,990 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,991 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:29:52,991 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:29:52,992 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:29:52,992 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:29:52,993 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:29:52,994 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:29:52,995 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:29:52,998 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:29:52,999 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:29:52,999 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:29:53,000 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:29:53,000 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:29:53,001 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:29:53,001 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:29:53,002 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:29:53,002 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:29:53,003 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:29:53,003 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:29:53,004 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:29:53,004 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:29:53,005 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:29:53,005 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:29:53,006 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:29:53,006 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:29:53,007 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:29:53,007 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:29:53,008 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:29:53,009 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:29:53,012 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:29:53,012 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:29:53,013 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:29:53,014 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:29:53,015 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:29:53,015 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:29:53,039 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:29:53,251 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:29:53,252 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:29:53,254 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:29:53,255 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:29:53,314 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:29:56,022 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 09:29:56,024 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 09:29:56,026 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 09:29:56,027 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 09:29:57,106 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 09:29:57,633 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 09:29:57,634 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 09:29:57,634 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 09:29:57,635 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 09:29:57,636 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 09:29:57,636 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 09:29:57,637 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 09:29:57,638 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 09:29:57,638 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 09:29:57,645 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 09:29:57,645 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 09:29:57,646 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 09:29:57,647 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 09:29:57,647 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 09:29:57,652 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 09:29:57,653 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 09:29:57,653 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 09:29:57,654 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 09:29:57,654 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 09:29:57,655 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 09:29:57,657 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 09:29:57,657 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 09:29:57,658 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 09:29:57,658 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 09:29:57,659 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 09:29:57,659 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 09:29:57,660 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 09:29:57,660 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 09:29:57,661 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 09:29:57,676 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 09:29:57,691 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 09:29:57,693 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Harris, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 09:29:57,827 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:29:57,976 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 09:29:57,977 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 09:29:57,977 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 09:29:57,978 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:29:57,979 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:29:57,980 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 09:29:58,003 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:29:58,006 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:29:58,008 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:29:58,011 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:29:58,014 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:29:58,017 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:29:58,019 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:29:58,022 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:29:58,025 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:29:58,028 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:29:58,043 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:29:58,046 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:29:58,051 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b756456
04-22-2013 09:29:58,057 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: c7053714-9d4f-4598-b13d-3078621c1609 (<unnamed>)
04-22-2013 09:29:58,057 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 09:29:58,058 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 09:29:58,067 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 09:29:58,068 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 09:29:58,685 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 09:29:58,686 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:29:58,687 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:29:58,688 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:29:58,689 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:29:58,690 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:29:58,691 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:29:58,692 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:29:58,693 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:29:58,694 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:30:04,715 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 09:30:04,716 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 09:30:04,718 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 09:30:04,719 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 09:30:04,721 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:30:04,723 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 09:30:04,725 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 09:30:04,726 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 09:30:04,736 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 09:30:04,799 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@6406aade
04-22-2013 09:30:04,800 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: VZWDB01 
04-22-2013 09:30:04,869 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665942048
04-22-2013 09:30:04,874 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 09:30:04,874 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:30:04,875 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:30:04,876 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 09:30:04,885 AM DEBUG AbstractSaveEventListener:133 - Generated identifier: 000005, using strategy: org.hibernate.id.Assigned
04-22-2013 09:30:04,902 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:30:04,903 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:30:04,906 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
04-22-2013 09:30:04,907 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:30:04,910 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:30:04,913 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=test, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=testLAst, address2=testAdd2, address3=testAdd3, firstname=testFname, type=Business, postcode=4234, suburb=Comp, partyId=000005, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:30:04,969 AM DEBUG SQL:104 - insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:30:05,288 AM DEBUG AbstractTransactionImpl:173 - committing
04-22-2013 09:30:05,290 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:30:05,292 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:30:05,294 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
04-22-2013 09:30:05,295 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:30:05,296 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:30:05,297 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=test, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=testLAst, address2=testAdd2, address3=testAdd3, firstname=testFname, type=Business, postcode=4234, suburb=Comp, partyId=000005, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:30:05,531 AM DEBUG JdbcTransaction:113 - committed JDBC Connection
04-22-2013 09:30:05,534 AM DEBUG JdbcCoordinatorImpl:138 - HHH000420: Closing un-released batch
04-22-2013 09:30:05,535 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:30:05,536 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:30:05,537 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:30:31,508 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665942315
04-22-2013 09:30:31,515 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:30:31,528 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:30:31,529 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:30:31,532 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:30:31,918 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:30:31,919 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:30:31,931 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:30:31,932 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:30:31,933 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:30:31,933 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:30:31,934 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:30:31,934 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:30:31,935 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:30:38,524 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665942385
04-22-2013 09:30:38,624 AM DEBUG QueryTranslatorImpl:265 - parse() - HQL: select * from com.mme.model.entity.Contact c where c.partyId = "000001"
04-22-2013 09:30:38,630 AM ERROR ErrorCounter:54 - line 1:8: unexpected token: *
04-22-2013 09:30:38,632 AM ERROR ErrorCounter:50 - line 1:8: unexpected token: *
line 1:8: unexpected token: *
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectClause(HqlBaseParser.java:1256)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom(HqlBaseParser.java:1030)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:700)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:294)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:157)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:266)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:180)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:136)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:101)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:119)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:214)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:192)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1537)
	at org.hibernate.ejb.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:285)
	at com.mme.model.dao.impl.GenericDaoImpl.findAll(GenericDaoImpl.java:51)
	at com.mme.test.TestMain.main(TestMain.java:51)
04-22-2013 09:34:05,161 AM  INFO TestMain:15 - demo begins...
04-22-2013 09:34:08,176 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:34:08,227 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@722b9406
04-22-2013 09:34:08,230 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@722b9406
04-22-2013 09:34:08,230 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@722b9406
04-22-2013 09:34:08,233 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@da0225b
04-22-2013 09:34:08,235 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@20968fda
04-22-2013 09:34:08,237 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@75bc16f0
04-22-2013 09:34:08,240 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9ba6076
04-22-2013 09:34:08,241 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9ba6076
04-22-2013 09:34:08,241 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@9ba6076
04-22-2013 09:34:08,243 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@7ca522a6
04-22-2013 09:34:08,244 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@7ca522a6
04-22-2013 09:34:08,245 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ca522a6
04-22-2013 09:34:08,248 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@6cd24e3f
04-22-2013 09:34:08,248 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@6cd24e3f
04-22-2013 09:34:08,253 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cd24e3f
04-22-2013 09:34:08,255 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@37722456
04-22-2013 09:34:08,256 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@37722456
04-22-2013 09:34:08,257 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37722456
04-22-2013 09:34:08,259 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@54c01e99
04-22-2013 09:34:08,260 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@54c01e99
04-22-2013 09:34:08,261 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54c01e99
04-22-2013 09:34:08,264 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@1eb3319f
04-22-2013 09:34:08,264 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@1eb3319f
04-22-2013 09:34:08,265 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1eb3319f
04-22-2013 09:34:08,268 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@44cbbe
04-22-2013 09:34:08,268 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@44cbbe
04-22-2013 09:34:08,269 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44cbbe
04-22-2013 09:34:08,272 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7fd88db7
04-22-2013 09:34:08,273 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7fd88db7
04-22-2013 09:34:08,275 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c24c4a3
04-22-2013 09:34:08,276 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c24c4a3
04-22-2013 09:34:08,278 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@627a4489
04-22-2013 09:34:08,279 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@627a4489
04-22-2013 09:34:08,281 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1fc4f0f8
04-22-2013 09:34:08,281 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fc4f0f8
04-22-2013 09:34:08,285 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6d7e845a
04-22-2013 09:34:08,286 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6d7e845a
04-22-2013 09:34:08,289 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@a383118
04-22-2013 09:34:08,290 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a383118
04-22-2013 09:34:08,294 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c391c3
04-22-2013 09:34:08,297 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c391c3
04-22-2013 09:34:08,298 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c391c3
04-22-2013 09:34:08,301 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f758500
04-22-2013 09:34:08,304 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bf54c5f
04-22-2013 09:34:08,305 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bf54c5f
04-22-2013 09:34:08,305 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bf54c5f
04-22-2013 09:34:08,307 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1dd49247
04-22-2013 09:34:08,309 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5fe8ce8
04-22-2013 09:34:08,309 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5fe8ce8
04-22-2013 09:34:08,311 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@1d96f4b5
04-22-2013 09:34:08,312 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d96f4b5
04-22-2013 09:34:08,314 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@69fe571f
04-22-2013 09:34:08,315 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@69fe571f
04-22-2013 09:34:08,317 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@44d6b059
04-22-2013 09:34:08,317 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44d6b059
04-22-2013 09:34:08,321 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27b03c1a
04-22-2013 09:34:08,321 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27b03c1a
04-22-2013 09:34:08,323 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61578aab
04-22-2013 09:34:08,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d2bf892
04-22-2013 09:34:08,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@11568fb5
04-22-2013 09:34:08,327 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11568fb5
04-22-2013 09:34:08,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@11568fb5
04-22-2013 09:34:08,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d911540
04-22-2013 09:34:08,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d911540
04-22-2013 09:34:08,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d911540
04-22-2013 09:34:08,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@5470be88
04-22-2013 09:34:08,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3e78aa80
04-22-2013 09:34:08,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e78aa80
04-22-2013 09:34:08,336 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3e78aa80
04-22-2013 09:34:08,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ef07355
04-22-2013 09:34:08,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ef07355
04-22-2013 09:34:08,339 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ef07355
04-22-2013 09:34:08,341 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@215983b7
04-22-2013 09:34:08,349 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@7052c6b4
04-22-2013 09:34:08,350 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7052c6b4
04-22-2013 09:34:08,351 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3336a1a1
04-22-2013 09:34:08,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@69236cd5
04-22-2013 09:34:08,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69236cd5
04-22-2013 09:34:08,359 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67dacccc
04-22-2013 09:34:08,362 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@28db23f1
04-22-2013 09:34:08,367 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@d24111a
04-22-2013 09:34:08,367 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d24111a
04-22-2013 09:34:08,369 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6293df2c
04-22-2013 09:34:08,369 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a20f443
04-22-2013 09:34:08,370 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@298488ef
04-22-2013 09:34:08,370 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c3a1834
04-22-2013 09:34:08,371 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a0b1cd0
04-22-2013 09:34:08,372 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f90a0d6
04-22-2013 09:34:08,372 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@102f729e
04-22-2013 09:34:08,373 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b0deb5f
04-22-2013 09:34:08,409 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:34:08,421 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:34:08,424 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:34:08,428 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:34:08,447 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:34:08,449 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:34:08,450 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:34:08,451 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:34:08,454 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:34:08,455 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:34:08,458 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:34:08,459 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:34:08,460 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:34:08,461 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:34:08,463 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:34:08,464 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:34:08,465 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:34:08,467 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:34:08,468 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:34:08,472 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@722b9406
04-22-2013 09:34:08,473 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@722b9406
04-22-2013 09:34:08,474 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@722b9406
04-22-2013 09:34:08,474 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@da0225b
04-22-2013 09:34:08,475 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@20968fda
04-22-2013 09:34:08,476 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@75bc16f0
04-22-2013 09:34:08,476 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9ba6076
04-22-2013 09:34:08,477 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9ba6076
04-22-2013 09:34:08,477 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@9ba6076
04-22-2013 09:34:08,478 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@7ca522a6
04-22-2013 09:34:08,479 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@7ca522a6
04-22-2013 09:34:08,479 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ca522a6
04-22-2013 09:34:08,480 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@6cd24e3f
04-22-2013 09:34:08,480 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@6cd24e3f
04-22-2013 09:34:08,481 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cd24e3f
04-22-2013 09:34:08,482 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@37722456
04-22-2013 09:34:08,483 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@37722456
04-22-2013 09:34:08,484 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37722456
04-22-2013 09:34:08,485 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@54c01e99
04-22-2013 09:34:08,486 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@54c01e99
04-22-2013 09:34:08,487 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54c01e99
04-22-2013 09:34:08,488 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@1eb3319f
04-22-2013 09:34:08,488 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@1eb3319f
04-22-2013 09:34:08,489 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1eb3319f
04-22-2013 09:34:08,490 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@44cbbe
04-22-2013 09:34:08,491 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@44cbbe
04-22-2013 09:34:08,492 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44cbbe
04-22-2013 09:34:08,492 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7fd88db7
04-22-2013 09:34:08,493 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7fd88db7
04-22-2013 09:34:08,494 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c24c4a3
04-22-2013 09:34:08,494 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c24c4a3
04-22-2013 09:34:08,495 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@627a4489
04-22-2013 09:34:08,495 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@627a4489
04-22-2013 09:34:08,496 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@1fc4f0f8
04-22-2013 09:34:08,497 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fc4f0f8
04-22-2013 09:34:08,497 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6d7e845a
04-22-2013 09:34:08,498 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6d7e845a
04-22-2013 09:34:08,498 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@a383118
04-22-2013 09:34:08,499 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a383118
04-22-2013 09:34:08,500 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c391c3
04-22-2013 09:34:08,500 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c391c3
04-22-2013 09:34:08,501 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c391c3
04-22-2013 09:34:08,501 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f758500
04-22-2013 09:34:08,502 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bf54c5f
04-22-2013 09:34:08,502 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bf54c5f
04-22-2013 09:34:08,503 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bf54c5f
04-22-2013 09:34:08,504 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1dd49247
04-22-2013 09:34:08,504 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@5fe8ce8
04-22-2013 09:34:08,505 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5fe8ce8
04-22-2013 09:34:08,505 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@1d96f4b5
04-22-2013 09:34:08,506 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d96f4b5
04-22-2013 09:34:08,507 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@69fe571f
04-22-2013 09:34:08,508 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@69fe571f
04-22-2013 09:34:08,508 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@44d6b059
04-22-2013 09:34:08,509 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44d6b059
04-22-2013 09:34:08,509 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27b03c1a
04-22-2013 09:34:08,510 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27b03c1a
04-22-2013 09:34:08,511 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61578aab
04-22-2013 09:34:08,511 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d2bf892
04-22-2013 09:34:08,512 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@11568fb5
04-22-2013 09:34:08,512 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11568fb5
04-22-2013 09:34:08,513 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@11568fb5
04-22-2013 09:34:08,514 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d911540
04-22-2013 09:34:08,514 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d911540
04-22-2013 09:34:08,515 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d911540
04-22-2013 09:34:08,516 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@5470be88
04-22-2013 09:34:08,516 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@3e78aa80
04-22-2013 09:34:08,517 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e78aa80
04-22-2013 09:34:08,517 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@3e78aa80
04-22-2013 09:34:08,518 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ef07355
04-22-2013 09:34:08,519 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ef07355
04-22-2013 09:34:08,519 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ef07355
04-22-2013 09:34:08,520 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@215983b7
04-22-2013 09:34:08,520 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@7052c6b4
04-22-2013 09:34:08,521 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7052c6b4
04-22-2013 09:34:08,522 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3336a1a1
04-22-2013 09:34:08,522 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@69236cd5
04-22-2013 09:34:08,523 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69236cd5
04-22-2013 09:34:08,523 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67dacccc
04-22-2013 09:34:08,524 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@28db23f1
04-22-2013 09:34:08,525 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@d24111a
04-22-2013 09:34:08,525 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d24111a
04-22-2013 09:34:08,526 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19958bf9
04-22-2013 09:34:08,526 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2918958e
04-22-2013 09:34:08,527 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d02b2b6
04-22-2013 09:34:08,528 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c22d166
04-22-2013 09:34:08,528 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21e1962d
04-22-2013 09:34:08,529 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@614a75bb
04-22-2013 09:34:08,529 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f7779e3
04-22-2013 09:34:08,530 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ce3570c
04-22-2013 09:34:08,531 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:34:08,532 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:34:08,532 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:34:08,533 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:34:08,534 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:34:08,534 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:34:08,535 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:34:08,535 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:34:08,536 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:34:08,537 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:34:08,537 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:34:08,538 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:34:08,539 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:34:08,539 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:34:08,540 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:34:08,540 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:34:08,654 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:34:08,665 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:34:08,668 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:34:08,709 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:34:08,712 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:34:08,715 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:34:08,716 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:34:08,718 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:34:08,719 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:34:08,720 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:34:08,723 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:34:08,740 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:34:08,742 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:34:08,743 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:34:08,745 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:34:08,746 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:34:08,748 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 09:34:08,751 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:34:08,780 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:34:08,781 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:34:08,793 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:34:08,810 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:34:08,810 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:34:08,850 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:34:08,863 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:34:08,922 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:34:08,923 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:34:08,929 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:34:08,967 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:34:08,971 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:34:08,983 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:34:08,989 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:34:09,042 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,048 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:34:09,052 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:34:09,054 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:34:09,060 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,061 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:34:09,061 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:34:09,062 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:34:09,063 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,064 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:34:09,064 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:34:09,065 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:34:09,065 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,066 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:34:09,067 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:34:09,067 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:34:09,068 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,069 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:34:09,069 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:34:09,070 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:34:09,071 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,071 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:34:09,072 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:34:09,073 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:34:09,074 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,075 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:34:09,076 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:34:09,077 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:34:09,079 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,079 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:34:09,080 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:34:09,081 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:34:09,081 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,082 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:34:09,083 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:34:09,083 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:34:09,084 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,085 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:34:09,086 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:34:09,086 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:34:09,087 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,088 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:34:09,088 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:34:09,089 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:34:09,089 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,090 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:34:09,091 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:34:09,091 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:34:09,092 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,093 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:34:09,093 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:34:09,094 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:34:09,095 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,095 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:34:09,096 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:34:09,097 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:34:09,097 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,098 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:34:09,099 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:34:09,099 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:34:09,100 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,101 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:34:09,102 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:34:09,102 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:34:09,103 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,104 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:34:09,104 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:34:09,105 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:34:09,105 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,106 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:34:09,107 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:34:09,107 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:34:09,108 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,109 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:34:09,109 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:34:09,110 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:34:09,111 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:34:09,111 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:34:09,112 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:34:09,113 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:34:09,117 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:34:09,117 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:34:09,118 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:34:09,118 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:34:09,119 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:34:09,120 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:34:09,120 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:34:09,121 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:34:09,121 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:34:09,122 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:34:09,122 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:34:09,123 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:34:09,123 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:34:09,124 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:34:09,124 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:34:09,125 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:34:09,125 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:34:09,126 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:34:09,126 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:34:09,127 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:34:09,128 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:34:09,130 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:34:09,130 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:34:09,130 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:34:09,131 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:34:09,131 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:34:09,132 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:34:09,152 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:34:09,333 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:34:09,334 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:34:09,335 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:34:09,335 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:34:09,368 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:34:12,103 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 09:34:12,105 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 09:34:12,106 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 09:34:12,108 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 09:34:13,177 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 09:34:13,693 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 09:34:13,695 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 09:34:13,696 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 09:34:13,697 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 09:34:13,698 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 09:34:13,699 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 09:34:13,700 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 09:34:13,701 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 09:34:13,702 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 09:34:13,708 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 09:34:13,709 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 09:34:13,710 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 09:34:13,710 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 09:34:13,711 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 09:34:13,716 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 09:34:13,717 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 09:34:13,718 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 09:34:13,719 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 09:34:13,719 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 09:34:13,720 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 09:34:13,723 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 09:34:13,724 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 09:34:13,724 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 09:34:13,725 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 09:34:13,726 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 09:34:13,727 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 09:34:13,727 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 09:34:13,728 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 09:34:13,729 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 09:34:13,745 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 09:34:13,759 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 09:34:13,760 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Harris, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 09:34:13,890 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:34:14,039 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 09:34:14,039 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 09:34:14,040 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 09:34:14,041 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:34:14,042 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:34:14,043 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 09:34:14,066 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:34:14,069 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:34:14,071 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:34:14,074 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:34:14,077 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:34:14,079 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:34:14,082 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:34:14,085 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:34:14,088 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:34:14,090 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:34:14,106 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:34:14,109 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:34:14,114 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e731e90
04-22-2013 09:34:14,119 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: b5ad385c-ecf4-42eb-846e-cf46b2524c3c (<unnamed>)
04-22-2013 09:34:14,120 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 09:34:14,120 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 09:34:14,128 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 09:34:14,129 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 09:34:14,689 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 09:34:14,690 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:34:14,691 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:34:14,692 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:34:14,693 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:34:14,693 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:34:14,694 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:34:14,695 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:34:14,696 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:34:14,697 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:34:20,363 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 09:34:20,365 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 09:34:20,366 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 09:34:20,368 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 09:34:20,370 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:34:20,372 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 09:34:20,373 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 09:34:20,374 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 09:34:20,387 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 09:34:20,451 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@2875ca3e
04-22-2013 09:34:20,452 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: VZWDB01 
04-22-2013 09:34:20,524 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665944604
04-22-2013 09:34:20,588 AM DEBUG QueryTranslatorImpl:265 - parse() - HQL: select c from com.mme.model.entity.Contact c where c.partyId = "null"
04-22-2013 09:34:58,378 AM  INFO TestMain:15 - demo begins...
04-22-2013 09:35:03,679 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:35:03,731 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@42ef83d3
04-22-2013 09:35:03,734 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@42ef83d3
04-22-2013 09:35:03,735 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42ef83d3
04-22-2013 09:35:03,737 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@49d8c528
04-22-2013 09:35:03,739 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5983e7de
04-22-2013 09:35:03,740 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@43ee148b
04-22-2013 09:35:03,744 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2c78bc3b
04-22-2013 09:35:03,744 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2c78bc3b
04-22-2013 09:35:03,745 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c78bc3b
04-22-2013 09:35:03,747 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@75bc16f0
04-22-2013 09:35:03,748 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@75bc16f0
04-22-2013 09:35:03,748 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@75bc16f0
04-22-2013 09:35:03,752 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@e3a1ec6
04-22-2013 09:35:03,752 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@e3a1ec6
04-22-2013 09:35:03,757 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e3a1ec6
04-22-2013 09:35:03,759 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@630f41e9
04-22-2013 09:35:03,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@630f41e9
04-22-2013 09:35:03,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@630f41e9
04-22-2013 09:35:03,763 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4fa4ded3
04-22-2013 09:35:03,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4fa4ded3
04-22-2013 09:35:03,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fa4ded3
04-22-2013 09:35:03,767 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@37722456
04-22-2013 09:35:03,768 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@37722456
04-22-2013 09:35:03,769 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37722456
04-22-2013 09:35:03,771 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@54c01e99
04-22-2013 09:35:03,772 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@54c01e99
04-22-2013 09:35:03,773 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c01e99
04-22-2013 09:35:03,776 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67ecd78
04-22-2013 09:35:03,776 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67ecd78
04-22-2013 09:35:03,779 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44cbbe
04-22-2013 09:35:03,779 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44cbbe
04-22-2013 09:35:03,782 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@4816ef71
04-22-2013 09:35:03,782 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4816ef71
04-22-2013 09:35:03,784 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7fd88db7
04-22-2013 09:35:03,785 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7fd88db7
04-22-2013 09:35:03,790 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@4929b0e1
04-22-2013 09:35:03,790 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4929b0e1
04-22-2013 09:35:03,793 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@7aa89ce3
04-22-2013 09:35:03,794 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7aa89ce3
04-22-2013 09:35:03,798 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@a383118
04-22-2013 09:35:03,801 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a383118
04-22-2013 09:35:03,802 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a383118
04-22-2013 09:35:03,805 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a7e8c4d
04-22-2013 09:35:03,807 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@2e716cb7
04-22-2013 09:35:03,808 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e716cb7
04-22-2013 09:35:03,809 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e716cb7
04-22-2013 09:35:03,811 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58648016
04-22-2013 09:35:03,813 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@45e67e6a
04-22-2013 09:35:03,813 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45e67e6a
04-22-2013 09:35:03,815 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@42f1916f
04-22-2013 09:35:03,816 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42f1916f
04-22-2013 09:35:03,818 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@238b8914
04-22-2013 09:35:03,819 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@238b8914
04-22-2013 09:35:03,821 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@6b9cd75a
04-22-2013 09:35:03,821 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b9cd75a
04-22-2013 09:35:03,825 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7e2da
04-22-2013 09:35:03,825 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7e2da
04-22-2013 09:35:03,826 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a083b1b
04-22-2013 09:35:03,828 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@75843a75
04-22-2013 09:35:03,830 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@2d8e8541
04-22-2013 09:35:03,831 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d8e8541
04-22-2013 09:35:03,832 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@2d8e8541
04-22-2013 09:35:03,833 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61578aab
04-22-2013 09:35:03,834 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61578aab
04-22-2013 09:35:03,835 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61578aab
04-22-2013 09:35:03,837 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@2d2bf892
04-22-2013 09:35:03,838 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@53077fc9
04-22-2013 09:35:03,839 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@53077fc9
04-22-2013 09:35:03,840 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@53077fc9
04-22-2013 09:35:03,842 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bdccedd
04-22-2013 09:35:03,843 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bdccedd
04-22-2013 09:35:03,843 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bdccedd
04-22-2013 09:35:03,845 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@309ff0a8
04-22-2013 09:35:03,853 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@28bb494b
04-22-2013 09:35:03,854 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bb494b
04-22-2013 09:35:03,855 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f636e4e
04-22-2013 09:35:03,862 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2eb0a3f5
04-22-2013 09:35:03,863 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eb0a3f5
04-22-2013 09:35:03,864 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@794e113b
04-22-2013 09:35:03,866 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@359b46dc
04-22-2013 09:35:03,871 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@57922f46
04-22-2013 09:35:03,872 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57922f46
04-22-2013 09:35:03,873 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3fe2670b
04-22-2013 09:35:03,874 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28db23f1
04-22-2013 09:35:03,875 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b14b82b
04-22-2013 09:35:03,875 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d47358f
04-22-2013 09:35:03,876 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e0d5eb7
04-22-2013 09:35:03,876 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@fc54796
04-22-2013 09:35:03,877 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60ded0f0
04-22-2013 09:35:03,878 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44676e3f
04-22-2013 09:35:03,909 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:35:03,921 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:35:03,924 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:35:03,927 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:35:03,947 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:35:03,948 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:35:03,950 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:35:03,951 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:35:03,954 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:35:03,955 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:35:03,958 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:35:03,959 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:35:03,960 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:35:03,961 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:35:03,963 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:35:03,964 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:35:03,965 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:35:03,967 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:35:03,968 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:35:03,972 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@42ef83d3
04-22-2013 09:35:03,973 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@42ef83d3
04-22-2013 09:35:03,974 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42ef83d3
04-22-2013 09:35:03,974 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@49d8c528
04-22-2013 09:35:03,975 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5983e7de
04-22-2013 09:35:03,975 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@43ee148b
04-22-2013 09:35:03,976 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2c78bc3b
04-22-2013 09:35:03,977 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@2c78bc3b
04-22-2013 09:35:03,977 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c78bc3b
04-22-2013 09:35:03,978 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@75bc16f0
04-22-2013 09:35:03,979 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@75bc16f0
04-22-2013 09:35:03,979 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@75bc16f0
04-22-2013 09:35:03,980 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@e3a1ec6
04-22-2013 09:35:03,981 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@e3a1ec6
04-22-2013 09:35:03,981 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e3a1ec6
04-22-2013 09:35:03,982 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@630f41e9
04-22-2013 09:35:03,983 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@630f41e9
04-22-2013 09:35:03,983 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@630f41e9
04-22-2013 09:35:03,984 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4fa4ded3
04-22-2013 09:35:03,985 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4fa4ded3
04-22-2013 09:35:03,985 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fa4ded3
04-22-2013 09:35:03,986 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@37722456
04-22-2013 09:35:03,987 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@37722456
04-22-2013 09:35:03,987 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37722456
04-22-2013 09:35:03,988 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@54c01e99
04-22-2013 09:35:03,988 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@54c01e99
04-22-2013 09:35:03,989 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c01e99
04-22-2013 09:35:03,990 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67ecd78
04-22-2013 09:35:03,990 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67ecd78
04-22-2013 09:35:03,991 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44cbbe
04-22-2013 09:35:03,991 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44cbbe
04-22-2013 09:35:03,992 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@4816ef71
04-22-2013 09:35:03,993 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4816ef71
04-22-2013 09:35:03,993 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@7fd88db7
04-22-2013 09:35:03,994 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7fd88db7
04-22-2013 09:35:03,994 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@4929b0e1
04-22-2013 09:35:03,995 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4929b0e1
04-22-2013 09:35:03,996 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@7aa89ce3
04-22-2013 09:35:03,996 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7aa89ce3
04-22-2013 09:35:03,997 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@a383118
04-22-2013 09:35:03,997 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a383118
04-22-2013 09:35:03,998 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a383118
04-22-2013 09:35:03,999 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a7e8c4d
04-22-2013 09:35:03,999 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@2e716cb7
04-22-2013 09:35:04,000 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e716cb7
04-22-2013 09:35:04,000 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e716cb7
04-22-2013 09:35:04,001 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58648016
04-22-2013 09:35:04,002 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@45e67e6a
04-22-2013 09:35:04,002 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45e67e6a
04-22-2013 09:35:04,004 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@42f1916f
04-22-2013 09:35:04,004 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42f1916f
04-22-2013 09:35:04,005 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@238b8914
04-22-2013 09:35:04,005 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@238b8914
04-22-2013 09:35:04,006 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@6b9cd75a
04-22-2013 09:35:04,007 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b9cd75a
04-22-2013 09:35:04,007 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7e2da
04-22-2013 09:35:04,008 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7e2da
04-22-2013 09:35:04,009 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a083b1b
04-22-2013 09:35:04,009 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@75843a75
04-22-2013 09:35:04,010 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@2d8e8541
04-22-2013 09:35:04,010 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d8e8541
04-22-2013 09:35:04,011 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@2d8e8541
04-22-2013 09:35:04,012 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61578aab
04-22-2013 09:35:04,012 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61578aab
04-22-2013 09:35:04,013 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61578aab
04-22-2013 09:35:04,013 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@2d2bf892
04-22-2013 09:35:04,014 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@53077fc9
04-22-2013 09:35:04,015 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@53077fc9
04-22-2013 09:35:04,015 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@53077fc9
04-22-2013 09:35:04,016 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bdccedd
04-22-2013 09:35:04,016 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bdccedd
04-22-2013 09:35:04,017 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bdccedd
04-22-2013 09:35:04,018 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@309ff0a8
04-22-2013 09:35:04,018 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@28bb494b
04-22-2013 09:35:04,019 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bb494b
04-22-2013 09:35:04,019 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f636e4e
04-22-2013 09:35:04,020 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2eb0a3f5
04-22-2013 09:35:04,021 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eb0a3f5
04-22-2013 09:35:04,021 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@794e113b
04-22-2013 09:35:04,022 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@359b46dc
04-22-2013 09:35:04,022 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@57922f46
04-22-2013 09:35:04,023 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57922f46
04-22-2013 09:35:04,024 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5dd2b9b7
04-22-2013 09:35:04,024 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@359ecd80
04-22-2013 09:35:04,025 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4cc5aa00
04-22-2013 09:35:04,025 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@451c0d60
04-22-2013 09:35:04,026 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@34b23d12
04-22-2013 09:35:04,027 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21c783c5
04-22-2013 09:35:04,027 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@319c0bd6
04-22-2013 09:35:04,028 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7bcd280b
04-22-2013 09:35:04,029 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:35:04,029 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:35:04,030 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:35:04,031 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:35:04,031 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:35:04,032 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:35:04,033 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:35:04,033 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:35:04,034 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:35:04,035 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:35:04,035 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:35:04,036 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:35:04,036 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:35:04,037 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:35:04,038 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:35:04,038 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:35:04,154 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:35:04,166 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:35:04,168 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:35:04,210 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:35:04,213 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:35:04,216 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:35:04,217 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:35:04,218 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:35:04,220 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:35:04,221 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:35:04,224 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:35:04,241 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:35:04,243 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:35:04,244 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:35:04,246 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:35:04,247 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:35:04,249 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 09:35:04,252 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:35:04,270 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:35:04,270 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:35:04,288 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:35:04,305 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:35:04,305 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:35:04,347 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:35:04,359 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:35:04,419 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:35:04,419 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:35:04,426 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:35:04,463 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:35:04,467 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:35:04,479 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:35:04,488 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:35:04,543 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,549 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:35:04,554 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:35:04,556 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:35:04,562 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,563 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:35:04,563 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:35:04,564 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:35:04,565 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,566 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:35:04,566 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:35:04,567 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:35:04,567 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,568 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:35:04,569 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:35:04,570 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:35:04,570 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,571 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:35:04,572 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:35:04,573 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:35:04,573 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,574 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:35:04,575 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:35:04,576 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:35:04,576 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,577 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:35:04,578 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:35:04,578 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:35:04,579 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,580 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:35:04,580 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:35:04,581 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:35:04,581 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,582 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:35:04,583 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:35:04,583 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:35:04,584 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,585 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:35:04,586 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:35:04,586 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:35:04,587 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,588 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:35:04,588 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:35:04,589 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:35:04,589 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,590 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:35:04,591 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:35:04,591 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:35:04,592 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,593 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:35:04,593 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:35:04,594 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:35:04,595 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,595 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:35:04,596 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:35:04,596 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:35:04,597 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,598 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:35:04,599 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:35:04,599 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:35:04,600 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,601 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:35:04,601 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:35:04,602 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:35:04,603 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,603 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:35:04,604 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:35:04,605 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:35:04,605 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,606 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:35:04,607 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:35:04,607 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:35:04,608 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,609 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:35:04,609 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:35:04,610 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:35:04,611 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:35:04,612 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:35:04,613 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:35:04,614 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:35:04,618 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:35:04,618 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:35:04,619 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:35:04,619 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:35:04,620 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:35:04,620 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:35:04,621 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:35:04,621 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:35:04,622 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:35:04,622 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:35:04,623 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:35:04,623 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:35:04,624 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:35:04,624 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:35:04,625 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:35:04,625 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:35:04,626 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:35:04,626 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:35:04,627 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:35:04,627 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:35:04,628 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:35:04,630 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:35:04,631 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:35:04,631 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:35:04,631 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:35:04,632 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:35:04,632 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:35:04,653 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:35:04,809 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:35:04,810 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:35:04,811 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:35:04,812 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:35:04,844 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:35:07,223 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 09:35:07,225 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 09:35:07,227 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 09:35:07,229 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 09:35:08,298 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 09:35:08,813 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 09:35:08,814 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 09:35:08,815 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 09:35:08,816 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 09:35:08,817 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 09:35:08,818 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 09:35:08,819 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 09:35:08,820 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 09:35:08,821 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 09:35:08,830 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 09:35:08,831 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 09:35:08,832 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 09:35:08,833 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 09:35:08,834 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 09:35:08,841 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 09:35:08,842 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 09:35:08,843 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 09:35:08,843 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 09:35:08,844 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 09:35:08,844 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 09:35:08,846 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 09:35:08,847 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 09:35:08,848 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 09:35:08,848 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 09:35:08,849 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 09:35:08,849 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 09:35:08,850 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 09:35:08,850 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 09:35:08,851 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 09:35:08,867 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 09:35:08,881 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 09:35:08,882 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Harris, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 09:35:09,014 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:35:09,169 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 09:35:09,170 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 09:35:09,170 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 09:35:09,171 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:35:09,172 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:35:09,173 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 09:35:09,197 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:35:09,200 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:35:09,203 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:35:09,205 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:35:09,208 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:35:09,211 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:35:09,213 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:35:09,216 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:35:09,219 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:35:09,221 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:35:09,233 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:35:09,236 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:35:09,241 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1330b13c
04-22-2013 09:35:09,245 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: d65d3547-f510-43a4-bcac-558504803abe (<unnamed>)
04-22-2013 09:35:09,245 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 09:35:09,246 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 09:35:09,254 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 09:35:09,254 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 09:35:09,816 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 09:35:09,817 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:35:09,818 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:35:09,819 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:35:09,820 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:35:09,821 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:35:09,821 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:35:09,822 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:35:09,823 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:35:09,824 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:35:15,548 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 09:35:15,550 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 09:35:15,551 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 09:35:15,552 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 09:35:15,554 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:35:15,557 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 09:35:15,558 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 09:35:15,559 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 09:35:15,572 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 09:35:15,644 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@7e6a60d5
04-22-2013 09:35:15,644 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: VZWDB01 
04-22-2013 09:35:15,714 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665945156
04-22-2013 09:35:15,723 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:35:15,768 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:35:15,768 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:35:15,773 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:35:16,225 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:35:16,225 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:35:16,242 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:35:16,246 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:35:16,246 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:35:16,247 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:35:16,247 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:35:16,248 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:35:16,248 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:35:19,035 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665945190
04-22-2013 09:35:19,113 AM DEBUG QueryTranslatorImpl:265 - parse() - HQL: select c from com.mme.model.entity.Contact c where c.partyId = "000001"
04-22-2013 09:36:55,193 AM  INFO TestMain:15 - demo begins...
04-22-2013 09:36:56,573 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:36:56,625 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f64b09c
04-22-2013 09:36:56,628 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f64b09c
04-22-2013 09:36:56,628 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f64b09c
04-22-2013 09:36:56,631 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48ea48be
04-22-2013 09:36:56,633 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d2aea3e
04-22-2013 09:36:56,634 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@477a1767
04-22-2013 09:36:56,638 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9e1be92
04-22-2013 09:36:56,638 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9e1be92
04-22-2013 09:36:56,639 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@9e1be92
04-22-2013 09:36:56,641 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@663b1f38
04-22-2013 09:36:56,642 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@663b1f38
04-22-2013 09:36:56,642 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@663b1f38
04-22-2013 09:36:56,645 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@53ce669e
04-22-2013 09:36:56,646 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@53ce669e
04-22-2013 09:36:56,651 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@53ce669e
04-22-2013 09:36:56,653 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@29d381d2
04-22-2013 09:36:56,654 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@29d381d2
04-22-2013 09:36:56,655 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29d381d2
04-22-2013 09:36:56,657 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@1389c036
04-22-2013 09:36:56,658 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@1389c036
04-22-2013 09:36:56,658 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1389c036
04-22-2013 09:36:56,662 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@bdee400
04-22-2013 09:36:56,662 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@bdee400
04-22-2013 09:36:56,663 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bdee400
04-22-2013 09:36:56,666 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@1b1756a4
04-22-2013 09:36:56,666 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@1b1756a4
04-22-2013 09:36:56,667 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b1756a4
04-22-2013 09:36:56,670 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59c208b0
04-22-2013 09:36:56,671 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59c208b0
04-22-2013 09:36:56,674 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62c3e9e9
04-22-2013 09:36:56,675 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62c3e9e9
04-22-2013 09:36:56,679 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@11e9c82e
04-22-2013 09:36:56,680 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@11e9c82e
04-22-2013 09:36:56,683 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@4929b0e1
04-22-2013 09:36:56,684 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4929b0e1
04-22-2013 09:36:56,688 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6548f8c8
04-22-2013 09:36:56,688 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6548f8c8
04-22-2013 09:36:56,691 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@26b496d
04-22-2013 09:36:56,692 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@26b496d
04-22-2013 09:36:56,696 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d18d189
04-22-2013 09:36:56,697 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d18d189
04-22-2013 09:36:56,698 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d18d189
04-22-2013 09:36:56,702 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79a61172
04-22-2013 09:36:56,704 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@6fe78c96
04-22-2013 09:36:56,705 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6fe78c96
04-22-2013 09:36:56,706 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6fe78c96
04-22-2013 09:36:56,708 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf54c5f
04-22-2013 09:36:56,710 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6ecf829d
04-22-2013 09:36:56,710 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ecf829d
04-22-2013 09:36:56,713 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ad4d66b
04-22-2013 09:36:56,713 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ad4d66b
04-22-2013 09:36:56,715 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@219ba640
04-22-2013 09:36:56,716 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@219ba640
04-22-2013 09:36:56,718 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@3909ea96
04-22-2013 09:36:56,719 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3909ea96
04-22-2013 09:36:56,722 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70e35d5
04-22-2013 09:36:56,723 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70e35d5
04-22-2013 09:36:56,724 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@67ce85c4
04-22-2013 09:36:56,726 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3a51127a
04-22-2013 09:36:56,728 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6cb32ed4
04-22-2013 09:36:56,729 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6cb32ed4
04-22-2013 09:36:56,729 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6cb32ed4
04-22-2013 09:36:56,731 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@49f4bcf7
04-22-2013 09:36:56,732 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@49f4bcf7
04-22-2013 09:36:56,733 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@49f4bcf7
04-22-2013 09:36:56,735 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@700a4488
04-22-2013 09:36:56,737 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@35ecfe07
04-22-2013 09:36:56,737 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35ecfe07
04-22-2013 09:36:56,738 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@35ecfe07
04-22-2013 09:36:56,740 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6401d98a
04-22-2013 09:36:56,740 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6401d98a
04-22-2013 09:36:56,741 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6401d98a
04-22-2013 09:36:56,743 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@1c23f1bb
04-22-2013 09:36:56,752 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@56d90453
04-22-2013 09:36:56,752 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56d90453
04-22-2013 09:36:56,754 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@65d0d124
04-22-2013 09:36:56,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@14004204
04-22-2013 09:36:56,761 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14004204
04-22-2013 09:36:56,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@608b8a47
04-22-2013 09:36:56,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@57922f46
04-22-2013 09:36:56,769 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@76027982
04-22-2013 09:36:56,770 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76027982
04-22-2013 09:36:56,771 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26d58939
04-22-2013 09:36:56,772 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d24111a
04-22-2013 09:36:56,773 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3adec8b3
04-22-2013 09:36:56,773 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@784a7df6
04-22-2013 09:36:56,774 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6293df2c
04-22-2013 09:36:56,775 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a20f443
04-22-2013 09:36:56,775 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298488ef
04-22-2013 09:36:56,776 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c3a1834
04-22-2013 09:36:56,809 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:36:56,821 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:36:56,825 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:36:56,828 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:36:56,848 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:36:56,849 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:36:56,851 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:36:56,851 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:36:56,854 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:36:56,855 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:36:56,858 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:36:56,860 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:36:56,861 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:36:56,862 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:36:56,864 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:36:56,865 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:36:56,866 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:36:56,868 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:36:56,869 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:36:56,873 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f64b09c
04-22-2013 09:36:56,874 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f64b09c
04-22-2013 09:36:56,875 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f64b09c
04-22-2013 09:36:56,875 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48ea48be
04-22-2013 09:36:56,876 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d2aea3e
04-22-2013 09:36:56,876 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@477a1767
04-22-2013 09:36:56,877 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9e1be92
04-22-2013 09:36:56,878 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@9e1be92
04-22-2013 09:36:56,878 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@9e1be92
04-22-2013 09:36:56,879 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@663b1f38
04-22-2013 09:36:56,879 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@663b1f38
04-22-2013 09:36:56,880 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@663b1f38
04-22-2013 09:36:56,881 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@53ce669e
04-22-2013 09:36:56,881 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@53ce669e
04-22-2013 09:36:56,882 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@53ce669e
04-22-2013 09:36:56,882 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@29d381d2
04-22-2013 09:36:56,883 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@29d381d2
04-22-2013 09:36:56,884 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29d381d2
04-22-2013 09:36:56,884 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@1389c036
04-22-2013 09:36:56,885 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@1389c036
04-22-2013 09:36:56,886 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1389c036
04-22-2013 09:36:56,886 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@bdee400
04-22-2013 09:36:56,887 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@bdee400
04-22-2013 09:36:56,887 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bdee400
04-22-2013 09:36:56,888 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@1b1756a4
04-22-2013 09:36:56,889 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@1b1756a4
04-22-2013 09:36:56,889 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b1756a4
04-22-2013 09:36:56,890 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59c208b0
04-22-2013 09:36:56,891 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59c208b0
04-22-2013 09:36:56,892 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62c3e9e9
04-22-2013 09:36:56,892 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62c3e9e9
04-22-2013 09:36:56,893 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@11e9c82e
04-22-2013 09:36:56,894 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@11e9c82e
04-22-2013 09:36:56,894 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@4929b0e1
04-22-2013 09:36:56,895 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4929b0e1
04-22-2013 09:36:56,896 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@6548f8c8
04-22-2013 09:36:56,896 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6548f8c8
04-22-2013 09:36:56,897 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@26b496d
04-22-2013 09:36:56,897 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@26b496d
04-22-2013 09:36:56,898 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d18d189
04-22-2013 09:36:56,899 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d18d189
04-22-2013 09:36:56,899 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d18d189
04-22-2013 09:36:56,900 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79a61172
04-22-2013 09:36:56,901 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@6fe78c96
04-22-2013 09:36:56,901 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6fe78c96
04-22-2013 09:36:56,902 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6fe78c96
04-22-2013 09:36:56,903 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bf54c5f
04-22-2013 09:36:56,903 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@6ecf829d
04-22-2013 09:36:56,904 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ecf829d
04-22-2013 09:36:56,905 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@ad4d66b
04-22-2013 09:36:56,905 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ad4d66b
04-22-2013 09:36:56,906 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@219ba640
04-22-2013 09:36:56,906 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@219ba640
04-22-2013 09:36:56,907 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@3909ea96
04-22-2013 09:36:56,908 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3909ea96
04-22-2013 09:36:56,908 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70e35d5
04-22-2013 09:36:56,909 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70e35d5
04-22-2013 09:36:56,909 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@67ce85c4
04-22-2013 09:36:56,910 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3a51127a
04-22-2013 09:36:56,911 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@6cb32ed4
04-22-2013 09:36:56,911 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6cb32ed4
04-22-2013 09:36:56,912 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@6cb32ed4
04-22-2013 09:36:56,912 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@49f4bcf7
04-22-2013 09:36:56,913 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@49f4bcf7
04-22-2013 09:36:56,914 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@49f4bcf7
04-22-2013 09:36:56,914 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@700a4488
04-22-2013 09:36:56,915 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@35ecfe07
04-22-2013 09:36:56,916 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35ecfe07
04-22-2013 09:36:56,916 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@35ecfe07
04-22-2013 09:36:56,917 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6401d98a
04-22-2013 09:36:56,917 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6401d98a
04-22-2013 09:36:56,918 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6401d98a
04-22-2013 09:36:56,919 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@1c23f1bb
04-22-2013 09:36:56,919 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@56d90453
04-22-2013 09:36:56,920 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56d90453
04-22-2013 09:36:56,920 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@65d0d124
04-22-2013 09:36:56,921 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@14004204
04-22-2013 09:36:56,922 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14004204
04-22-2013 09:36:56,922 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@608b8a47
04-22-2013 09:36:56,923 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@57922f46
04-22-2013 09:36:56,923 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@76027982
04-22-2013 09:36:56,924 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76027982
04-22-2013 09:36:56,925 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5dde45e2
04-22-2013 09:36:56,925 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2bbe2893
04-22-2013 09:36:56,926 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5159e154
04-22-2013 09:36:56,927 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63d87b85
04-22-2013 09:36:56,927 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19958bf9
04-22-2013 09:36:56,928 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2918958e
04-22-2013 09:36:56,928 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d02b2b6
04-22-2013 09:36:56,929 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c22d166
04-22-2013 09:36:56,930 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:36:56,931 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:36:56,931 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:36:56,932 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:36:56,933 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:36:56,933 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:36:56,934 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:36:56,935 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:36:56,935 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:36:56,936 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:36:56,936 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:36:56,937 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:36:56,938 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:36:56,938 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:36:56,939 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:36:56,940 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:36:57,050 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:36:57,063 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:36:57,065 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:36:57,107 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:36:57,110 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:36:57,113 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:36:57,114 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:36:57,116 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:36:57,117 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:36:57,118 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:36:57,122 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:36:57,139 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:36:57,141 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:36:57,142 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:36:57,144 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:36:57,145 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:36:57,148 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestMain
04-22-2013 09:36:57,150 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:36:57,171 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:36:57,172 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:36:57,186 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:36:57,202 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:36:57,203 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:36:57,245 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:36:57,258 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:36:57,315 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:36:57,316 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:36:57,322 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:36:57,361 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:36:57,365 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:36:57,376 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:36:57,383 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:36:57,433 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,439 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:36:57,444 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:36:57,446 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:36:57,452 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,453 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:36:57,454 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:36:57,454 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:36:57,455 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,456 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:36:57,456 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:36:57,457 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:36:57,458 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,459 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:36:57,459 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:36:57,460 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:36:57,460 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,461 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:36:57,462 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:36:57,462 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:36:57,463 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,464 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:36:57,464 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:36:57,465 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:36:57,466 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,467 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:36:57,467 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:36:57,468 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:36:57,468 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,469 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:36:57,470 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:36:57,470 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:36:57,471 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,472 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:36:57,473 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:36:57,473 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:36:57,474 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,475 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:36:57,475 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:36:57,476 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:36:57,476 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,477 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:36:57,478 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:36:57,478 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:36:57,479 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,480 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:36:57,480 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:36:57,481 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:36:57,482 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,483 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:36:57,483 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:36:57,484 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:36:57,484 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,485 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:36:57,486 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:36:57,486 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:36:57,487 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,488 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:36:57,488 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:36:57,489 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:36:57,490 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,491 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:36:57,491 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:36:57,492 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:36:57,492 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,493 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:36:57,494 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:36:57,494 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:36:57,495 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,496 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:36:57,496 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:36:57,497 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:36:57,498 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,499 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:36:57,499 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:36:57,500 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:36:57,500 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:36:57,501 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:36:57,503 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:36:57,504 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:36:57,508 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:36:57,508 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:36:57,509 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:36:57,509 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:36:57,510 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:36:57,510 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:36:57,511 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:36:57,511 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:36:57,512 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:36:57,513 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:36:57,513 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:36:57,514 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:36:57,514 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:36:57,515 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:36:57,515 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:36:57,516 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:36:57,516 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:36:57,517 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:36:57,517 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:36:57,518 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:36:57,519 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:36:57,521 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:36:57,521 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:36:57,522 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:36:57,522 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:36:57,522 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:36:57,523 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:36:57,545 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:36:57,705 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:36:57,706 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:36:57,707 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:36:57,707 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:36:57,741 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:37:03,408 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 09:37:03,410 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 09:37:03,412 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 09:37:03,413 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 09:37:04,511 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 09:37:05,040 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 09:37:05,041 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 09:37:05,041 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 09:37:05,042 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 09:37:05,042 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 09:37:05,043 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 09:37:05,044 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 09:37:05,044 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 09:37:05,045 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 09:37:05,050 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 09:37:05,051 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 09:37:05,052 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 09:37:05,052 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 09:37:05,053 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 09:37:05,058 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 09:37:05,058 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 09:37:05,059 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 09:37:05,059 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 09:37:05,060 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 09:37:05,061 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 09:37:05,063 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 09:37:05,063 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 09:37:05,064 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 09:37:05,065 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 09:37:05,065 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 09:37:05,066 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 09:37:05,066 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 09:37:05,067 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 09:37:05,067 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 09:37:05,084 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 09:37:05,098 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 09:37:05,099 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\jdk1.6.0_43\jre\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Harris, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestMain, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 09:37:05,233 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:37:05,396 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 09:37:05,397 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 09:37:05,397 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 09:37:05,398 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:37:05,399 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:37:05,400 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 09:37:05,424 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:05,426 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:05,429 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:37:05,432 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:37:05,435 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:37:05,437 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:37:05,440 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:37:05,443 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:37:05,446 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:05,449 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:05,461 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:05,464 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:05,469 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6517a4c6
04-22-2013 09:37:05,473 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 17bbaaa9-a109-47df-8f31-31099699f22b (<unnamed>)
04-22-2013 09:37:05,474 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 09:37:05,474 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 09:37:05,482 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 09:37:05,483 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 09:37:06,083 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 09:37:06,084 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:37:06,085 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:37:06,085 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:37:06,086 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:37:06,087 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:37:06,088 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:37:06,089 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:37:06,090 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:37:06,090 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:37:12,024 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 09:37:12,026 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 09:37:12,027 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 09:37:12,028 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 09:37:12,031 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:37:12,033 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 09:37:12,034 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 09:37:12,035 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 09:37:12,048 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 09:37:12,108 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@695e0163
04-22-2013 09:37:12,109 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: VZWDB01 
04-22-2013 09:37:12,182 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665946321
04-22-2013 09:37:12,191 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:12,237 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:37:12,238 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:37:12,242 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:12,713 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:37:12,714 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:37:12,730 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:12,734 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:12,735 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:37:12,735 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:37:12,736 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:37:12,736 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:37:12,737 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:37:15,904 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665946359
04-22-2013 09:37:15,987 AM DEBUG QueryTranslatorImpl:265 - parse() - HQL: SELECT c FROM com.mme.model.entity.Contact c ORDER BY firstname
04-22-2013 09:37:16,026 AM DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'mme'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Contact'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[ORDER] Node: 'ORDER'
       \-[IDENT] Node: 'firstname'

04-22-2013 09:37:16,027 AM DEBUG ErrorCounter:82 - throwQueryException() : no errors
04-22-2013 09:37:16,059 AM DEBUG HqlSqlBaseWalker:109 - select << begin [level=1, statement=select]
04-22-2013 09:37:16,083 AM DEBUG FromElement:157 - FromClause{level=1} : com.mme.model.entity.Contact (c) -> contact0_
04-22-2013 09:37:16,085 AM DEBUG FromReferenceNode:74 - Resolved : c -> contact0_.partyId
04-22-2013 09:37:16,088 AM DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
04-22-2013 09:37:16,090 AM DEBUG DotNode:599 - getDataType() : firstname -> org.hibernate.type.StringType@11e9c82e
04-22-2013 09:37:16,092 AM DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.firstname -> contact0_.firstname
04-22-2013 09:37:16,093 AM DEBUG HqlSqlBaseWalker:113 - select : finishing up [level=1, statement=select]
04-22-2013 09:37:16,094 AM DEBUG HqlSqlWalker:631 - processQuery() :  ( SELECT ( {select clause} contact0_.partyId ) ( FromClause{level=1} Contact contact0_ ) ( ORDER ( contact0_.firstname {synthetic-alias} firstname ) ) )
04-22-2013 09:37:16,105 AM DEBUG JoinProcessor:175 - Using FROM fragment [Contact contact0_]
04-22-2013 09:37:16,106 AM DEBUG HqlSqlBaseWalker:117 - select >> end [level=1, statement=select]
04-22-2013 09:37:16,111 AM DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Contact)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contact0_.partyId as partyId0_' {alias=c, className=com.mme.model.entity.Contact, tableAlias=contact0_}
    |  \-[SQL_TOKEN] SqlFragment: 'contact0_.address1 as address2_0_, contact0_.address2 as address3_0_, contact0_.address3 as address4_0_, contact0_.channel as channel0_, contact0_.countryCode as countryC6_0_, contact0_.email as email0_, contact0_.fax as fax0_, contact0_.firstname as firstname0_, contact0_.lastname as lastname0_, contact0_.login as login0_, contact0_.mobile as mobile0_, contact0_.organisation as organis13_0_, contact0_.partyType as partyType0_, contact0_.phone as phone0_, contact0_.postcode as postcode0_, contact0_.state as state0_, contact0_.status as status0_, contact0_.suburb as suburb0_, contact0_.type as type0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Contact contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Contact,tableAlias=contact0_,origin=null,columns={,className=com.mme.model.entity.Contact}}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'contact0_.firstname' {propertyName=firstname,dereferenceType=ALL,propertyPath=firstname,path={synthetic-alias}.firstname,tableAlias=contact0_,className=com.mme.model.entity.Contact,classAlias=c}
          +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          \-[IDENT] IdentNode: 'firstname' {originalText=firstname}

04-22-2013 09:37:16,114 AM DEBUG ErrorCounter:82 - throwQueryException() : no errors
04-22-2013 09:37:16,124 AM DEBUG QueryTranslatorImpl:235 - HQL: SELECT c FROM com.mme.model.entity.Contact c ORDER BY firstname
04-22-2013 09:37:16,125 AM DEBUG QueryTranslatorImpl:236 - SQL: select contact0_.partyId as partyId0_, contact0_.address1 as address2_0_, contact0_.address2 as address3_0_, contact0_.address3 as address4_0_, contact0_.channel as channel0_, contact0_.countryCode as countryC6_0_, contact0_.email as email0_, contact0_.fax as fax0_, contact0_.firstname as firstname0_, contact0_.lastname as lastname0_, contact0_.login as login0_, contact0_.mobile as mobile0_, contact0_.organisation as organis13_0_, contact0_.partyType as partyType0_, contact0_.phone as phone0_, contact0_.postcode as postcode0_, contact0_.state as state0_, contact0_.status as status0_, contact0_.suburb as suburb0_, contact0_.type as type0_ from Contact contact0_ order by contact0_.firstname
04-22-2013 09:37:16,126 AM DEBUG ErrorCounter:82 - throwQueryException() : no errors
04-22-2013 09:37:16,138 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:37:16,138 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:37:16,139 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_, contact0_.address1 as address2_0_, contact0_.address2 as address3_0_, contact0_.address3 as address4_0_, contact0_.channel as channel0_, contact0_.countryCode as countryC6_0_, contact0_.email as email0_, contact0_.fax as fax0_, contact0_.firstname as firstname0_, contact0_.lastname as lastname0_, contact0_.login as login0_, contact0_.mobile as mobile0_, contact0_.organisation as organis13_0_, contact0_.partyType as partyType0_, contact0_.phone as phone0_, contact0_.postcode as postcode0_, contact0_.state as state0_, contact0_.status as status0_, contact0_.suburb as suburb0_, contact0_.type as type0_ from Contact contact0_ order by contact0_.firstname
04-22-2013 09:37:16,382 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:37:16,384 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:37:16,387 AM DEBUG Loader:854 - Result set row: 1
04-22-2013 09:37:16,388 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000003]
04-22-2013 09:37:16,392 AM DEBUG Loader:854 - Result set row: 2
04-22-2013 09:37:16,393 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000005]
04-22-2013 09:37:16,397 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:16,398 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:16,400 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000003]
04-22-2013 09:37:16,400 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000003]
04-22-2013 09:37:16,401 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000005]
04-22-2013 09:37:16,402 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000005]
04-22-2013 09:37:16,402 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:37:16,404 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:37:16,405 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:37:16,405 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:37:27,049 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665946470
04-22-2013 09:37:27,050 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 09:37:27,051 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:37:27,052 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:37:27,054 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 09:37:27,064 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:27,066 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:37:27,307 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:37:27,308 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:37:27,312 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:27,314 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:37:27,315 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:37:27,316 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:37:27,328 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:37:27,330 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:37:27,343 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
04-22-2013 09:37:27,345 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:37:27,349 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:37:27,351 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=024334546, partyType=10, fax=024334546, status=active, organisation=Test Org, state=CA, countryCode=US, address1=test address1, lastname=UpdatedLNAME, address2=test address2, address3=test address3, firstname=UpdatedFNAME, type=Business, postcode=3001, suburb=Test Company, partyId=000001, email=testMaualAccnt@testmail.com, login=testMaualAccnt, channel=RETAIL, mobile=+6309223456789}
04-22-2013 09:37:27,368 AM DEBUG SQL:104 - update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:37:27,634 AM DEBUG AbstractTransactionImpl:173 - committing
04-22-2013 09:37:27,635 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:37:27,636 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:37:27,638 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
04-22-2013 09:37:27,639 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:37:27,640 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:37:27,642 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=024334546, partyType=10, fax=024334546, status=active, organisation=Test Org, state=CA, countryCode=US, address1=test address1, lastname=UpdatedLNAME, address2=test address2, address3=test address3, firstname=UpdatedFNAME, type=Business, postcode=3001, suburb=Test Company, partyId=000001, email=testMaualAccnt@testmail.com, login=testMaualAccnt, channel=RETAIL, mobile=+6309223456789}
04-22-2013 09:37:27,875 AM DEBUG JdbcTransaction:113 - committed JDBC Connection
04-22-2013 09:37:27,878 AM DEBUG JdbcCoordinatorImpl:138 - HHH000420: Closing un-released batch
04-22-2013 09:37:27,879 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:37:27,880 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:37:27,881 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:38:19,376 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665946993
04-22-2013 09:38:19,378 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 09:38:19,378 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:38:19,379 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:38:19,380 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 09:38:19,382 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#000001]
04-22-2013 09:38:19,383 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:38:19,624 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:38:19,626 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000001]
04-22-2013 09:38:19,630 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000001]
04-22-2013 09:38:19,631 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000001]
04-22-2013 09:38:19,632 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:38:19,633 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:38:19,640 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:38:19,640 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:38:19,641 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
04-22-2013 09:38:19,642 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:38:19,643 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:38:19,644 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=024334546, partyType=10, fax=024334546, status=active, organisation=Test Org, state=CA, countryCode=US, address1=test address1, lastname=UpdatedLNAME, address2=test address2, address3=test address3, firstname=UpdatedFNAME, type=Business, postcode=3001, suburb=Test Company, partyId=000001, email=testMaualAccnt@testmail.com, login=testMaualAccnt, channel=RETAIL, mobile=+6309223456789}
04-22-2013 09:38:19,645 AM DEBUG SQL:104 - delete from Contact where partyId=?
04-22-2013 09:38:19,881 AM DEBUG AbstractTransactionImpl:173 - committing
04-22-2013 09:38:20,115 AM DEBUG JdbcTransaction:113 - committed JDBC Connection
04-22-2013 09:38:20,116 AM DEBUG JdbcCoordinatorImpl:138 - HHH000420: Closing un-released batch
04-22-2013 09:38:20,117 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:38:20,118 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:38:20,119 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:39:27,566 AM  INFO TestContact:15 - demo begins...
04-22-2013 09:39:27,613 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:39:27,641 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@e4ac00c
04-22-2013 09:39:27,643 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@e4ac00c
04-22-2013 09:39:27,644 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e4ac00c
04-22-2013 09:39:27,645 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79a5f739
04-22-2013 09:39:27,646 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@29e97f9f
04-22-2013 09:39:27,647 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@288051
04-22-2013 09:39:27,648 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@1be1a408
04-22-2013 09:39:27,649 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@1be1a408
04-22-2013 09:39:27,649 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1be1a408
04-22-2013 09:39:27,650 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@7d26f75b
04-22-2013 09:39:27,650 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@7d26f75b
04-22-2013 09:39:27,650 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d26f75b
04-22-2013 09:39:27,652 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2fb3f8f6
04-22-2013 09:39:27,652 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2fb3f8f6
04-22-2013 09:39:27,654 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2fb3f8f6
04-22-2013 09:39:27,655 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@3c1d332b
04-22-2013 09:39:27,655 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@3c1d332b
04-22-2013 09:39:27,655 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c1d332b
04-22-2013 09:39:27,657 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4229ab3e
04-22-2013 09:39:27,657 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4229ab3e
04-22-2013 09:39:27,657 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4229ab3e
04-22-2013 09:39:27,658 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@44b01d43
04-22-2013 09:39:27,659 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@44b01d43
04-22-2013 09:39:27,659 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44b01d43
04-22-2013 09:39:27,660 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@423e5d1
04-22-2013 09:39:27,660 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@423e5d1
04-22-2013 09:39:27,661 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@423e5d1
04-22-2013 09:39:27,662 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d8d9850
04-22-2013 09:39:27,663 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d8d9850
04-22-2013 09:39:27,664 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@332611a7
04-22-2013 09:39:27,664 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@332611a7
04-22-2013 09:39:27,665 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@54281d4b
04-22-2013 09:39:27,665 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@54281d4b
04-22-2013 09:39:27,666 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@19e3118a
04-22-2013 09:39:27,666 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@19e3118a
04-22-2013 09:39:27,668 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@603b1d04
04-22-2013 09:39:27,668 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@603b1d04
04-22-2013 09:39:27,670 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@70cb6009
04-22-2013 09:39:27,670 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70cb6009
04-22-2013 09:39:27,671 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2abe0e27
04-22-2013 09:39:27,672 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2abe0e27
04-22-2013 09:39:27,672 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2abe0e27
04-22-2013 09:39:27,673 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@165973ea
04-22-2013 09:39:27,674 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@38dda25b
04-22-2013 09:39:27,675 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@38dda25b
04-22-2013 09:39:27,675 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@38dda25b
04-22-2013 09:39:27,676 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2efb56b1
04-22-2013 09:39:27,677 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@2d5253d5
04-22-2013 09:39:27,677 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d5253d5
04-22-2013 09:39:27,678 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2a9df354
04-22-2013 09:39:27,679 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a9df354
04-22-2013 09:39:27,680 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:27,680 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:27,681 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:27,681 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:27,683 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:27,683 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:27,684 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21a80a69
04-22-2013 09:39:27,685 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@58ecb281
04-22-2013 09:39:27,686 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:27,686 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:27,687 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:27,688 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:27,688 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:27,688 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:27,689 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@3d9360e2
04-22-2013 09:39:27,691 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:27,692 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:27,692 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:27,693 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:27,693 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:27,694 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:27,694 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@38b5dac4
04-22-2013 09:39:27,699 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:27,699 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:27,699 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11bbf1ca
04-22-2013 09:39:27,702 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:27,703 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:27,703 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@199836ed
04-22-2013 09:39:27,704 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dafae45
04-22-2013 09:39:27,706 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:27,707 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:27,707 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e811c88
04-22-2013 09:39:27,707 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e785d65
04-22-2013 09:39:27,708 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@303bc257
04-22-2013 09:39:27,708 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2353f67e
04-22-2013 09:39:27,708 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d5bdc50
04-22-2013 09:39:27,708 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39dd3812
04-22-2013 09:39:27,708 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a8c436b
04-22-2013 09:39:27,708 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e9e5c73
04-22-2013 09:39:27,724 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:39:27,729 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:39:27,730 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:39:27,732 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:39:27,742 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:39:27,743 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:39:27,744 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:27,744 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:27,745 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:39:27,745 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:39:27,747 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:39:27,747 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:39:27,748 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:39:27,748 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:39:27,749 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:39:27,749 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:39:27,750 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:39:27,751 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:39:27,751 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:39:27,753 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@e4ac00c
04-22-2013 09:39:27,753 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@e4ac00c
04-22-2013 09:39:27,754 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e4ac00c
04-22-2013 09:39:27,754 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79a5f739
04-22-2013 09:39:27,754 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@29e97f9f
04-22-2013 09:39:27,754 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@288051
04-22-2013 09:39:27,754 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@1be1a408
04-22-2013 09:39:27,755 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@1be1a408
04-22-2013 09:39:27,755 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1be1a408
04-22-2013 09:39:27,755 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@7d26f75b
04-22-2013 09:39:27,755 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@7d26f75b
04-22-2013 09:39:27,755 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d26f75b
04-22-2013 09:39:27,755 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2fb3f8f6
04-22-2013 09:39:27,756 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@2fb3f8f6
04-22-2013 09:39:27,756 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2fb3f8f6
04-22-2013 09:39:27,756 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@3c1d332b
04-22-2013 09:39:27,756 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@3c1d332b
04-22-2013 09:39:27,756 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c1d332b
04-22-2013 09:39:27,756 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4229ab3e
04-22-2013 09:39:27,757 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@4229ab3e
04-22-2013 09:39:27,757 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4229ab3e
04-22-2013 09:39:27,757 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@44b01d43
04-22-2013 09:39:27,757 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@44b01d43
04-22-2013 09:39:27,757 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44b01d43
04-22-2013 09:39:27,758 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@423e5d1
04-22-2013 09:39:27,758 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@423e5d1
04-22-2013 09:39:27,758 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@423e5d1
04-22-2013 09:39:27,758 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d8d9850
04-22-2013 09:39:27,758 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d8d9850
04-22-2013 09:39:27,758 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@332611a7
04-22-2013 09:39:27,759 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@332611a7
04-22-2013 09:39:27,759 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@54281d4b
04-22-2013 09:39:27,759 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@54281d4b
04-22-2013 09:39:27,759 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@19e3118a
04-22-2013 09:39:27,759 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@19e3118a
04-22-2013 09:39:27,759 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@603b1d04
04-22-2013 09:39:27,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@603b1d04
04-22-2013 09:39:27,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@70cb6009
04-22-2013 09:39:27,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70cb6009
04-22-2013 09:39:27,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2abe0e27
04-22-2013 09:39:27,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2abe0e27
04-22-2013 09:39:27,760 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2abe0e27
04-22-2013 09:39:27,761 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@165973ea
04-22-2013 09:39:27,761 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@38dda25b
04-22-2013 09:39:27,761 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@38dda25b
04-22-2013 09:39:27,761 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@38dda25b
04-22-2013 09:39:27,761 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2efb56b1
04-22-2013 09:39:27,761 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@2d5253d5
04-22-2013 09:39:27,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d5253d5
04-22-2013 09:39:27,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@2a9df354
04-22-2013 09:39:27,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a9df354
04-22-2013 09:39:27,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:27,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:27,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:27,762 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:27,763 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:27,763 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:27,763 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21a80a69
04-22-2013 09:39:27,763 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@58ecb281
04-22-2013 09:39:27,763 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:27,763 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:27,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:27,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:27,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:27,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:27,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@3d9360e2
04-22-2013 09:39:27,764 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:27,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:27,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:27,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:27,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:27,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:27,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@38b5dac4
04-22-2013 09:39:27,765 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:27,766 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:27,766 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11bbf1ca
04-22-2013 09:39:27,766 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:27,766 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:27,766 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@199836ed
04-22-2013 09:39:27,766 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dafae45
04-22-2013 09:39:27,767 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:27,767 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:27,767 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3598cb3d
04-22-2013 09:39:27,767 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42472d48
04-22-2013 09:39:27,767 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eedf3f6
04-22-2013 09:39:27,768 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@682bc3f5
04-22-2013 09:39:27,768 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@114e3f41
04-22-2013 09:39:27,768 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@281acd47
04-22-2013 09:39:27,768 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@779b04e2
04-22-2013 09:39:27,768 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@625dcec6
04-22-2013 09:39:27,768 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:39:27,769 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:39:27,769 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:27,769 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:27,769 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:39:27,769 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:39:27,769 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:39:27,770 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:39:27,770 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:39:27,770 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:39:27,770 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:39:27,770 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:39:27,770 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:39:27,771 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:39:27,771 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:39:27,771 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:39:27,841 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:39:27,847 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:39:27,848 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:39:27,870 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:39:27,872 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:39:27,873 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:39:27,874 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:39:27,874 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:39:27,875 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:39:27,876 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:39:27,877 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:39:27,885 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:39:27,886 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:39:27,887 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:39:27,887 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:39:27,888 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:39:27,889 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestContact
04-22-2013 09:39:27,890 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:39:27,901 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:39:27,902 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:39:27,908 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:39:27,918 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:39:27,919 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:39:27,936 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:39:27,941 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:39:27,969 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:39:27,970 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:39:27,973 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:39:27,992 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:39:27,994 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:39:28,003 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:39:28,007 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:39:28,029 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,032 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:39:28,034 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:39:28,036 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:39:28,038 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,038 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:39:28,038 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:39:28,039 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:39:28,039 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,039 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:39:28,039 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:39:28,039 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:39:28,040 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,040 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:39:28,040 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:39:28,040 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:39:28,040 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,040 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:39:28,041 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:39:28,041 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:39:28,041 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,041 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:39:28,041 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:39:28,041 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:39:28,042 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,042 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:39:28,042 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:39:28,042 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:39:28,042 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,043 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:39:28,043 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:39:28,043 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:39:28,043 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,043 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:39:28,043 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:39:28,044 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:39:28,044 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,044 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:39:28,044 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:39:28,044 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:39:28,045 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,045 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:39:28,045 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:39:28,045 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:39:28,045 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,046 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:39:28,046 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:39:28,046 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:39:28,046 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,046 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:39:28,046 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:39:28,047 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:39:28,047 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,047 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:39:28,047 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:39:28,047 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:39:28,047 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,048 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:39:28,048 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:39:28,048 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:39:28,048 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,048 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:39:28,048 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:39:28,049 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:39:28,049 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,049 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:39:28,049 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:39:28,049 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:39:28,049 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,050 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:39:28,050 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:39:28,050 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:39:28,050 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,050 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:39:28,050 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:39:28,051 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:39:28,051 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:28,051 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:39:28,051 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:39:28,051 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:39:28,053 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:39:28,053 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:39:28,053 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:39:28,054 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:39:28,054 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:39:28,054 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:39:28,054 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:39:28,054 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:39:28,054 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:39:28,054 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:39:28,055 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:39:28,056 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:39:28,056 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:39:28,056 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:39:28,057 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:39:28,057 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:39:28,057 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:39:28,057 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:39:28,058 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:39:28,058 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:39:28,066 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:39:28,143 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:39:28,144 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:39:28,144 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:39:28,145 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:39:28,160 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:39:56,236 AM  INFO TestContact:15 - demo begins...
04-22-2013 09:39:56,280 AM DEBUG logging:141 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
04-22-2013 09:39:56,307 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6bdab91
04-22-2013 09:39:56,309 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6bdab91
04-22-2013 09:39:56,309 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6bdab91
04-22-2013 09:39:56,310 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7df17e77
04-22-2013 09:39:56,312 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1572e449
04-22-2013 09:39:56,312 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@20b9b538
04-22-2013 09:39:56,314 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6cb8
04-22-2013 09:39:56,314 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6cb8
04-22-2013 09:39:56,314 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cb8
04-22-2013 09:39:56,315 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@1342a80d
04-22-2013 09:39:56,316 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@1342a80d
04-22-2013 09:39:56,316 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1342a80d
04-22-2013 09:39:56,317 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@16ba8602
04-22-2013 09:39:56,318 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@16ba8602
04-22-2013 09:39:56,319 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16ba8602
04-22-2013 09:39:56,320 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2d342ba4
04-22-2013 09:39:56,320 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2d342ba4
04-22-2013 09:39:56,321 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d342ba4
04-22-2013 09:39:56,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@744a6cbf
04-22-2013 09:39:56,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@744a6cbf
04-22-2013 09:39:56,322 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@744a6cbf
04-22-2013 09:39:56,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@c0b76fa
04-22-2013 09:39:56,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@c0b76fa
04-22-2013 09:39:56,324 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c0b76fa
04-22-2013 09:39:56,325 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@4bbd7848
04-22-2013 09:39:56,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@4bbd7848
04-22-2013 09:39:56,326 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bbd7848
04-22-2013 09:39:56,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46b8c8e6
04-22-2013 09:39:56,328 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46b8c8e6
04-22-2013 09:39:56,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ac980c9
04-22-2013 09:39:56,329 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ac980c9
04-22-2013 09:39:56,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@7f2ad19e
04-22-2013 09:39:56,330 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f2ad19e
04-22-2013 09:39:56,331 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@82a6f16
04-22-2013 09:39:56,332 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@82a6f16
04-22-2013 09:39:56,333 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1d3c468a
04-22-2013 09:39:56,334 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1d3c468a
04-22-2013 09:39:56,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@2705d88a
04-22-2013 09:39:56,335 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2705d88a
04-22-2013 09:39:56,337 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ece2187
04-22-2013 09:39:56,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ece2187
04-22-2013 09:39:56,338 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ece2187
04-22-2013 09:39:56,340 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76f8968f
04-22-2013 09:39:56,342 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@77fddc31
04-22-2013 09:39:56,343 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77fddc31
04-22-2013 09:39:56,343 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77fddc31
04-22-2013 09:39:56,345 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a9df354
04-22-2013 09:39:56,346 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@509f5011
04-22-2013 09:39:56,347 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@509f5011
04-22-2013 09:39:56,349 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@39e87719
04-22-2013 09:39:56,349 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@39e87719
04-22-2013 09:39:56,350 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:56,350 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:56,351 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:56,352 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:56,353 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:56,354 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:56,354 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21a80a69
04-22-2013 09:39:56,355 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@58ecb281
04-22-2013 09:39:56,356 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:56,356 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:56,356 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:56,357 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:56,357 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:56,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:56,358 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@3d9360e2
04-22-2013 09:39:56,359 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:56,359 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:56,360 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:56,361 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:56,361 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:56,361 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:56,362 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@38b5dac4
04-22-2013 09:39:56,366 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:56,366 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:56,367 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11bbf1ca
04-22-2013 09:39:56,370 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:56,370 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:56,371 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@199836ed
04-22-2013 09:39:56,372 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dafae45
04-22-2013 09:39:56,374 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:56,374 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:56,375 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e811c88
04-22-2013 09:39:56,375 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e785d65
04-22-2013 09:39:56,375 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@303bc257
04-22-2013 09:39:56,375 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2353f67e
04-22-2013 09:39:56,375 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d5bdc50
04-22-2013 09:39:56,376 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39dd3812
04-22-2013 09:39:56,376 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a8c436b
04-22-2013 09:39:56,376 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e9e5c73
04-22-2013 09:39:56,391 AM  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
04-22-2013 09:39:56,397 AM  INFO Version:41 - HHH000412: Hibernate Core {4.0.1.Final}
04-22-2013 09:39:56,398 AM  INFO Environment:239 - HHH000206: hibernate.properties not found
04-22-2013 09:39:56,400 AM  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
04-22-2013 09:39:56,410 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:39:56,410 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:39:56,411 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:56,412 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:56,413 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:39:56,413 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:39:56,414 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:39:56,415 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:39:56,415 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:39:56,416 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:39:56,417 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:39:56,417 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:39:56,418 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:39:56,418 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:39:56,419 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:39:56,421 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6bdab91
04-22-2013 09:39:56,421 AM DEBUG BasicTypeRegistry:143 - Adding type registration boolean -> org.hibernate.type.BooleanType@6bdab91
04-22-2013 09:39:56,421 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6bdab91
04-22-2013 09:39:56,422 AM DEBUG BasicTypeRegistry:143 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7df17e77
04-22-2013 09:39:56,422 AM DEBUG BasicTypeRegistry:143 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1572e449
04-22-2013 09:39:56,422 AM DEBUG BasicTypeRegistry:143 - Adding type registration yes_no -> org.hibernate.type.YesNoType@20b9b538
04-22-2013 09:39:56,422 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6cb8
04-22-2013 09:39:56,422 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte -> org.hibernate.type.ByteType@6cb8
04-22-2013 09:39:56,422 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cb8
04-22-2013 09:39:56,423 AM DEBUG BasicTypeRegistry:143 - Adding type registration character -> org.hibernate.type.CharacterType@1342a80d
04-22-2013 09:39:56,423 AM DEBUG BasicTypeRegistry:143 - Adding type registration char -> org.hibernate.type.CharacterType@1342a80d
04-22-2013 09:39:56,423 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1342a80d
04-22-2013 09:39:56,423 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@16ba8602
04-22-2013 09:39:56,423 AM DEBUG BasicTypeRegistry:143 - Adding type registration short -> org.hibernate.type.ShortType@16ba8602
04-22-2013 09:39:56,423 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16ba8602
04-22-2013 09:39:56,424 AM DEBUG BasicTypeRegistry:143 - Adding type registration integer -> org.hibernate.type.IntegerType@2d342ba4
04-22-2013 09:39:56,424 AM DEBUG BasicTypeRegistry:143 - Adding type registration int -> org.hibernate.type.IntegerType@2d342ba4
04-22-2013 09:39:56,424 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d342ba4
04-22-2013 09:39:56,424 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@744a6cbf
04-22-2013 09:39:56,424 AM DEBUG BasicTypeRegistry:143 - Adding type registration long -> org.hibernate.type.LongType@744a6cbf
04-22-2013 09:39:56,424 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@744a6cbf
04-22-2013 09:39:56,425 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@c0b76fa
04-22-2013 09:39:56,425 AM DEBUG BasicTypeRegistry:143 - Adding type registration float -> org.hibernate.type.FloatType@c0b76fa
04-22-2013 09:39:56,425 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c0b76fa
04-22-2013 09:39:56,425 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@4bbd7848
04-22-2013 09:39:56,425 AM DEBUG BasicTypeRegistry:143 - Adding type registration double -> org.hibernate.type.DoubleType@4bbd7848
04-22-2013 09:39:56,425 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bbd7848
04-22-2013 09:39:56,426 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46b8c8e6
04-22-2013 09:39:56,426 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46b8c8e6
04-22-2013 09:39:56,426 AM DEBUG BasicTypeRegistry:143 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ac980c9
04-22-2013 09:39:56,426 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ac980c9
04-22-2013 09:39:56,426 AM DEBUG BasicTypeRegistry:143 - Adding type registration string -> org.hibernate.type.StringType@7f2ad19e
04-22-2013 09:39:56,426 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f2ad19e
04-22-2013 09:39:56,427 AM DEBUG BasicTypeRegistry:143 - Adding type registration url -> org.hibernate.type.UrlType@82a6f16
04-22-2013 09:39:56,427 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@82a6f16
04-22-2013 09:39:56,427 AM DEBUG BasicTypeRegistry:143 - Adding type registration date -> org.hibernate.type.DateType@1d3c468a
04-22-2013 09:39:56,427 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1d3c468a
04-22-2013 09:39:56,427 AM DEBUG BasicTypeRegistry:143 - Adding type registration time -> org.hibernate.type.TimeType@2705d88a
04-22-2013 09:39:56,427 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2705d88a
04-22-2013 09:39:56,427 AM DEBUG BasicTypeRegistry:143 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ece2187
04-22-2013 09:39:56,428 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ece2187
04-22-2013 09:39:56,428 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ece2187
04-22-2013 09:39:56,428 AM DEBUG BasicTypeRegistry:143 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76f8968f
04-22-2013 09:39:56,428 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar -> org.hibernate.type.CalendarType@77fddc31
04-22-2013 09:39:56,428 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77fddc31
04-22-2013 09:39:56,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77fddc31
04-22-2013 09:39:56,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a9df354
04-22-2013 09:39:56,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration locale -> org.hibernate.type.LocaleType@509f5011
04-22-2013 09:39:56,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@509f5011
04-22-2013 09:39:56,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration currency -> org.hibernate.type.CurrencyType@39e87719
04-22-2013 09:39:56,429 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@39e87719
04-22-2013 09:39:56,430 AM DEBUG BasicTypeRegistry:143 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:56,430 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74b23210
04-22-2013 09:39:56,430 AM DEBUG BasicTypeRegistry:143 - Adding type registration class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:56,430 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@464c4975
04-22-2013 09:39:56,430 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:56,430 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76497934
04-22-2013 09:39:56,430 AM DEBUG BasicTypeRegistry:143 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21a80a69
04-22-2013 09:39:56,431 AM DEBUG BasicTypeRegistry:143 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@58ecb281
04-22-2013 09:39:56,431 AM DEBUG BasicTypeRegistry:143 - Adding type registration binary -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:56,431 AM DEBUG BasicTypeRegistry:143 - Adding type registration byte[] -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:56,431 AM DEBUG BasicTypeRegistry:143 - Adding type registration [B -> org.hibernate.type.BinaryType@25fa1bb6
04-22-2013 09:39:56,431 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:56,431 AM DEBUG BasicTypeRegistry:143 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:56,432 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@676bd8ea
04-22-2013 09:39:56,432 AM DEBUG BasicTypeRegistry:143 - Adding type registration image -> org.hibernate.type.ImageType@3d9360e2
04-22-2013 09:39:56,432 AM DEBUG BasicTypeRegistry:143 - Adding type registration characters -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:56,432 AM DEBUG BasicTypeRegistry:143 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:56,432 AM DEBUG BasicTypeRegistry:143 - Adding type registration [C -> org.hibernate.type.CharArrayType@6719dc16
04-22-2013 09:39:56,432 AM DEBUG BasicTypeRegistry:143 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:56,433 AM DEBUG BasicTypeRegistry:143 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:56,433 AM DEBUG BasicTypeRegistry:143 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266bade9
04-22-2013 09:39:56,433 AM DEBUG BasicTypeRegistry:143 - Adding type registration text -> org.hibernate.type.TextType@38b5dac4
04-22-2013 09:39:56,433 AM DEBUG BasicTypeRegistry:143 - Adding type registration blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:56,433 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f66cff
04-22-2013 09:39:56,433 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11bbf1ca
04-22-2013 09:39:56,434 AM DEBUG BasicTypeRegistry:143 - Adding type registration clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:56,434 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b20bf2c
04-22-2013 09:39:56,434 AM DEBUG BasicTypeRegistry:143 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@199836ed
04-22-2013 09:39:56,434 AM DEBUG BasicTypeRegistry:143 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dafae45
04-22-2013 09:39:56,434 AM DEBUG BasicTypeRegistry:143 - Adding type registration object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:56,434 AM DEBUG BasicTypeRegistry:143 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@664883c
04-22-2013 09:39:56,434 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3598cb3d
04-22-2013 09:39:56,435 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42472d48
04-22-2013 09:39:56,435 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4eedf3f6
04-22-2013 09:39:56,435 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@682bc3f5
04-22-2013 09:39:56,435 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@114e3f41
04-22-2013 09:39:56,435 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@281acd47
04-22-2013 09:39:56,435 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@779b04e2
04-22-2013 09:39:56,436 AM DEBUG BasicTypeRegistry:143 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@625dcec6
04-22-2013 09:39:56,436 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
04-22-2013 09:39:56,436 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
04-22-2013 09:39:56,436 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:56,436 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
04-22-2013 09:39:56,437 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
04-22-2013 09:39:56,437 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
04-22-2013 09:39:56,437 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
04-22-2013 09:39:56,437 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
04-22-2013 09:39:56,437 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
04-22-2013 09:39:56,437 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
04-22-2013 09:39:56,438 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
04-22-2013 09:39:56,438 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
04-22-2013 09:39:56,438 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
04-22-2013 09:39:56,438 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
04-22-2013 09:39:56,438 AM DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
04-22-2013 09:39:56,438 AM DEBUG Ejb3Configuration:312 - Look up for persistence unit: VZWDB01
04-22-2013 09:39:56,508 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:39:56,515 AM DEBUG AbstractJarVisitor:125 - Searching mapped entities in jar/par: file:/C:/Development/workspace/com-mme-hbmjpa/target/classes/
04-22-2013 09:39:56,516 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.DBSchema
04-22-2013 09:39:56,539 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence$1
04-22-2013 09:39:56,540 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.constant.Persistence
04-22-2013 09:39:56,542 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.ContactDao
04-22-2013 09:39:56,542 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.DaoFactory
04-22-2013 09:39:56,543 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.GenericDao
04-22-2013 09:39:56,544 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.ContactDaoImpl
04-22-2013 09:39:56,544 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.dao.impl.GenericDaoImpl
04-22-2013 09:39:56,546 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.Contact
04-22-2013 09:39:56,554 AM DEBUG AbstractJarVisitor:222 - Java element filter matched for com.mme.model.entity.Contact
04-22-2013 09:39:56,555 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.entity.GenericEnt
04-22-2013 09:39:56,555 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBONEPersistenceManager
04-22-2013 09:39:56,556 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.DBTWOPersistenceManager
04-22-2013 09:39:56,557 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.model.manager.PersistenceManager
04-22-2013 09:39:56,557 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.test.TestContact
04-22-2013 09:39:56,559 AM DEBUG AbstractJarVisitor:171 - Filtering: com.mme.util.StringUtil
04-22-2013 09:39:56,566 AM DEBUG Ejb3Configuration:841 - Detect class: true; detect hbm: true
04-22-2013 09:39:56,567 AM DEBUG Ejb3Configuration:201 - Creating Factory: VZWDB01
04-22-2013 09:39:56,572 AM  WARN Ejb3Configuration:1131 - HHH000144: hibernate.connection.autocommit = false breaks the EJB3 specification
04-22-2013 09:39:56,583 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
04-22-2013 09:39:56,583 AM DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
04-22-2013 09:39:56,601 AM DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
04-22-2013 09:39:56,607 AM DEBUG Configuration:1722 - Preparing to build session factory with filters : {}
04-22-2013 09:39:56,639 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:39:56,639 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:39:56,643 AM DEBUG AnnotationBinder:528 - Binding entity from annotated class: com.mme.model.entity.Contact
04-22-2013 09:39:56,673 AM DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
04-22-2013 09:39:56,676 AM DEBUG AnnotationBinder:988 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
04-22-2013 09:39:56,685 AM DEBUG EntityBinder:354 - Import with entity name Contact
04-22-2013 09:39:56,690 AM DEBUG EntityBinder:524 - Bind entity com.mme.model.entity.Contact on table Contact
04-22-2013 09:39:56,721 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyId, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,725 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyId with lazy=false
04-22-2013 09:39:56,728 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyId
04-22-2013 09:39:56,730 AM DEBUG PropertyBinder:256 - Building property partyId
04-22-2013 09:39:56,734 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address1, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,734 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address1 with lazy=false
04-22-2013 09:39:56,734 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address1
04-22-2013 09:39:56,735 AM DEBUG PropertyBinder:256 - Building property address1
04-22-2013 09:39:56,735 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address2, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,735 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address2 with lazy=false
04-22-2013 09:39:56,736 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address2
04-22-2013 09:39:56,736 AM DEBUG PropertyBinder:256 - Building property address2
04-22-2013 09:39:56,736 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=address3, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,737 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property address3 with lazy=false
04-22-2013 09:39:56,737 AM DEBUG SimpleValueBinder:304 - building SimpleValue for address3
04-22-2013 09:39:56,737 AM DEBUG PropertyBinder:256 - Building property address3
04-22-2013 09:39:56,737 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=channel, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,738 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property channel with lazy=false
04-22-2013 09:39:56,738 AM DEBUG SimpleValueBinder:304 - building SimpleValue for channel
04-22-2013 09:39:56,738 AM DEBUG PropertyBinder:256 - Building property channel
04-22-2013 09:39:56,739 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,739 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property countryCode with lazy=false
04-22-2013 09:39:56,739 AM DEBUG SimpleValueBinder:304 - building SimpleValue for countryCode
04-22-2013 09:39:56,740 AM DEBUG PropertyBinder:256 - Building property countryCode
04-22-2013 09:39:56,740 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,740 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property email with lazy=false
04-22-2013 09:39:56,741 AM DEBUG SimpleValueBinder:304 - building SimpleValue for email
04-22-2013 09:39:56,741 AM DEBUG PropertyBinder:256 - Building property email
04-22-2013 09:39:56,741 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=fax, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,742 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property fax with lazy=false
04-22-2013 09:39:56,742 AM DEBUG SimpleValueBinder:304 - building SimpleValue for fax
04-22-2013 09:39:56,742 AM DEBUG PropertyBinder:256 - Building property fax
04-22-2013 09:39:56,742 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,742 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property firstname with lazy=false
04-22-2013 09:39:56,742 AM DEBUG SimpleValueBinder:304 - building SimpleValue for firstname
04-22-2013 09:39:56,743 AM DEBUG PropertyBinder:256 - Building property firstname
04-22-2013 09:39:56,743 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,743 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property lastname with lazy=false
04-22-2013 09:39:56,743 AM DEBUG SimpleValueBinder:304 - building SimpleValue for lastname
04-22-2013 09:39:56,743 AM DEBUG PropertyBinder:256 - Building property lastname
04-22-2013 09:39:56,744 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=login, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,744 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property login with lazy=false
04-22-2013 09:39:56,744 AM DEBUG SimpleValueBinder:304 - building SimpleValue for login
04-22-2013 09:39:56,744 AM DEBUG PropertyBinder:256 - Building property login
04-22-2013 09:39:56,744 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=mobile, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,745 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property mobile with lazy=false
04-22-2013 09:39:56,745 AM DEBUG SimpleValueBinder:304 - building SimpleValue for mobile
04-22-2013 09:39:56,745 AM DEBUG PropertyBinder:256 - Building property mobile
04-22-2013 09:39:56,745 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=organisation, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,745 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property organisation with lazy=false
04-22-2013 09:39:56,745 AM DEBUG SimpleValueBinder:304 - building SimpleValue for organisation
04-22-2013 09:39:56,746 AM DEBUG PropertyBinder:256 - Building property organisation
04-22-2013 09:39:56,746 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=partyType, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,746 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property partyType with lazy=false
04-22-2013 09:39:56,746 AM DEBUG SimpleValueBinder:304 - building SimpleValue for partyType
04-22-2013 09:39:56,747 AM DEBUG PropertyBinder:256 - Building property partyType
04-22-2013 09:39:56,747 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=phone, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,747 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property phone with lazy=false
04-22-2013 09:39:56,747 AM DEBUG SimpleValueBinder:304 - building SimpleValue for phone
04-22-2013 09:39:56,747 AM DEBUG PropertyBinder:256 - Building property phone
04-22-2013 09:39:56,748 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,748 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property postcode with lazy=false
04-22-2013 09:39:56,748 AM DEBUG SimpleValueBinder:304 - building SimpleValue for postcode
04-22-2013 09:39:56,748 AM DEBUG PropertyBinder:256 - Building property postcode
04-22-2013 09:39:56,748 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,748 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property state with lazy=false
04-22-2013 09:39:56,749 AM DEBUG SimpleValueBinder:304 - building SimpleValue for state
04-22-2013 09:39:56,749 AM DEBUG PropertyBinder:256 - Building property state
04-22-2013 09:39:56,749 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=status, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,749 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property status with lazy=false
04-22-2013 09:39:56,749 AM DEBUG SimpleValueBinder:304 - building SimpleValue for status
04-22-2013 09:39:56,749 AM DEBUG PropertyBinder:256 - Building property status
04-22-2013 09:39:56,750 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=suburb, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,750 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property suburb with lazy=false
04-22-2013 09:39:56,750 AM DEBUG SimpleValueBinder:304 - building SimpleValue for suburb
04-22-2013 09:39:56,750 AM DEBUG PropertyBinder:256 - Building property suburb
04-22-2013 09:39:56,750 AM DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=type, insertable=true, updatable=true, unique=false}
04-22-2013 09:39:56,751 AM DEBUG PropertyBinder:176 - MetadataSourceProcessor property type with lazy=false
04-22-2013 09:39:56,751 AM DEBUG SimpleValueBinder:304 - building SimpleValue for type
04-22-2013 09:39:56,751 AM DEBUG PropertyBinder:256 - Building property type
04-22-2013 09:39:56,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyId
04-22-2013 09:39:56,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address1
04-22-2013 09:39:56,753 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address2
04-22-2013 09:39:56,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for address3
04-22-2013 09:39:56,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for channel
04-22-2013 09:39:56,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for countryCode
04-22-2013 09:39:56,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for email
04-22-2013 09:39:56,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for fax
04-22-2013 09:39:56,754 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for firstname
04-22-2013 09:39:56,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for lastname
04-22-2013 09:39:56,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for login
04-22-2013 09:39:56,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for mobile
04-22-2013 09:39:56,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for organisation
04-22-2013 09:39:56,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for partyType
04-22-2013 09:39:56,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for phone
04-22-2013 09:39:56,755 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for postcode
04-22-2013 09:39:56,756 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for state
04-22-2013 09:39:56,756 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for status
04-22-2013 09:39:56,756 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for suburb
04-22-2013 09:39:56,756 AM DEBUG SimpleValueBinder:342 - Setting SimpleValue typeName for type
04-22-2013 09:39:56,757 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:39:56,758 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:39:56,758 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:39:56,758 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:39:56,759 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:39:56,759 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:39:56,759 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:39:56,768 AM  INFO DriverManagerConnectionProviderImpl:90 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
04-22-2013 09:39:56,843 AM  INFO DriverManagerConnectionProviderImpl:110 - HHH000115: Hibernate connection pool size: 20
04-22-2013 09:39:56,844 AM  INFO DriverManagerConnectionProviderImpl:113 - HHH000006: Autocommit mode: false
04-22-2013 09:39:56,844 AM  INFO DriverManagerConnectionProviderImpl:127 - HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01]
04-22-2013 09:39:56,844 AM  INFO DriverManagerConnectionProviderImpl:130 - HHH000046: Connection properties: {user=vzwmme, password=v2wmm3, autocommit=false, release_mode=auto}
04-22-2013 09:39:56,859 AM DEBUG DriverManagerConnectionProviderImpl:172 - Opening new JDBC connection
04-22-2013 09:39:59,137 AM DEBUG DriverManagerConnectionProviderImpl:182 - Created connection to: jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, Isolation Level: 2
04-22-2013 09:39:59,138 AM DEBUG JdbcServicesImpl:123 - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
04-22-2013 09:39:59,138 AM DEBUG JdbcServicesImpl:129 - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.3.0
      major : 11
      minor : 2
04-22-2013 09:39:59,138 AM DEBUG JdbcServicesImpl:135 - JDBC version : 11.2
04-22-2013 09:40:00,146 AM  INFO Dialect:121 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
04-22-2013 09:40:00,644 AM DEBUG SettingsFactory:100 - Automatic flush during beforeCompletion(): disabled
04-22-2013 09:40:00,645 AM DEBUG SettingsFactory:106 - Automatic session close at end of transaction: disabled
04-22-2013 09:40:00,645 AM DEBUG SettingsFactory:117 - JDBC batch size: 15
04-22-2013 09:40:00,646 AM DEBUG SettingsFactory:123 - JDBC batch updates for versioned data: disabled
04-22-2013 09:40:00,646 AM DEBUG SettingsFactory:133 - Scrollable result sets: enabled
04-22-2013 09:40:00,646 AM DEBUG SettingsFactory:139 - Wrap result sets: disabled
04-22-2013 09:40:00,647 AM DEBUG SettingsFactory:145 - JDBC3 getGeneratedKeys(): disabled
04-22-2013 09:40:00,647 AM DEBUG SettingsFactory:157 - Connection release mode: auto
04-22-2013 09:40:00,647 AM  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
04-22-2013 09:40:00,651 AM DEBUG SettingsFactory:194 - Default batch fetch size: 1
04-22-2013 09:40:00,651 AM DEBUG SettingsFactory:200 - Generate SQL with comments: disabled
04-22-2013 09:40:00,651 AM DEBUG SettingsFactory:206 - Order SQL updates by primary key: disabled
04-22-2013 09:40:00,651 AM DEBUG SettingsFactory:212 - Order SQL inserts for batching: disabled
04-22-2013 09:40:00,652 AM DEBUG SettingsFactory:443 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
04-22-2013 09:40:00,653 AM  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
04-22-2013 09:40:00,653 AM DEBUG SettingsFactory:222 - Query language substitutions: {}
04-22-2013 09:40:00,653 AM DEBUG SettingsFactory:228 - JPA-QL strict compliance: enabled
04-22-2013 09:40:00,653 AM DEBUG SettingsFactory:236 - Second-level cache: enabled
04-22-2013 09:40:00,654 AM DEBUG SettingsFactory:242 - Query cache: disabled
04-22-2013 09:40:00,654 AM DEBUG SettingsFactory:383 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
04-22-2013 09:40:00,654 AM DEBUG SettingsFactory:393 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
04-22-2013 09:40:00,655 AM DEBUG SettingsFactory:257 - Optimize cache for minimal puts: disabled
04-22-2013 09:40:00,655 AM DEBUG SettingsFactory:272 - Structured second-level cache entries: disabled
04-22-2013 09:40:00,655 AM DEBUG SettingsFactory:281 - Statistics: disabled
04-22-2013 09:40:00,655 AM DEBUG SettingsFactory:287 - Deleted entity synthetic identifier rollback: disabled
04-22-2013 09:40:00,655 AM DEBUG SettingsFactory:311 - Default entity-mode: pojo
04-22-2013 09:40:00,655 AM DEBUG SettingsFactory:317 - Named query checking : enabled
04-22-2013 09:40:00,655 AM DEBUG SettingsFactory:323 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
04-22-2013 09:40:00,656 AM DEBUG SettingsFactory:329 - multi-tenancy strategy : NONE
04-22-2013 09:40:00,662 AM DEBUG SessionFactoryImpl:217 - Building session factory
04-22-2013 09:40:00,668 AM DEBUG SessionFactoryImpl:267 - Session factory constructed with filter configurations : {}
04-22-2013 09:40:00,668 AM DEBUG SessionFactoryImpl:268 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=v2wmm3, sun.boot.library.path=C:\jdk1.6.0_43\jre\bin, java.vm.version=20.14-b01, hibernate.connection.username=vzwmme, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Development\workspace\com-mme-hbmjpa, java.runtime.version=1.6.0_43-b01, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\jdk1.6.0_43\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=false, java.io.tmpdir=C:\Users\Harris\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\jdk1.6.0_43\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\jdk1.6.0_43\bin;C:\Development\maven\apache-maven-3.0.5\bin;C:\Development\wintail;C:\Program Files (x86)\Common Files\Easysoft\Shared\;C:\OracleClient\instantclient_11_2;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Harris, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Development\workspace\com-mme-hbmjpa\target\classes;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-entitymanager\4.0.1.Final\hibernate-entitymanager-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Harris\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Harris\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-core\4.0.1.Final\hibernate-core-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Harris\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Harris\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.CR2\jboss-logging-3.1.0.CR2.jar;C:\Users\Harris\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Harris\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\org\hibernate\hibernate-c3p0\4.0.1.Final\hibernate-c3p0-4.0.1.Final.jar;C:\Users\Harris\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;C:\Users\Harris\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Harris\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar, user.name=Harris, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=C:\jdk1.6.0_43\jre, sun.java.command=com.mme.test.TestContact, hibernate.connection.url=jdbc:oracle:thin:@db.mmeservice.net:1521:VZWDB01, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_43, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\jdk1.6.0_43\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\jdk1.6.0_43\jre\lib\resources.jar;C:\jdk1.6.0_43\jre\lib\rt.jar;C:\jdk1.6.0_43\jre\lib\sunrsasign.jar;C:\jdk1.6.0_43\jre\lib\jsse.jar;C:\jdk1.6.0_43\jre\lib\jce.jar;C:\jdk1.6.0_43\jre\lib\charsets.jar;C:\jdk1.6.0_43\jre\lib\modules\jdk.boot.jar;C:\jdk1.6.0_43\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
04-22-2013 09:40:00,720 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:40:00,781 AM DEBUG AbstractEntityPersister:3373 - Static SQL for entity: com.mme.model.entity.Contact
04-22-2013 09:40:00,781 AM DEBUG AbstractEntityPersister:3375 -  Version select: select partyId from Contact where partyId =?
04-22-2013 09:40:00,781 AM DEBUG AbstractEntityPersister:3376 -  Snapshot select: select contact_.partyId, contact_.address1 as address2_0_, contact_.address2 as address3_0_, contact_.address3 as address4_0_, contact_.channel as channel0_, contact_.countryCode as countryC6_0_, contact_.email as email0_, contact_.fax as fax0_, contact_.firstname as firstname0_, contact_.lastname as lastname0_, contact_.login as login0_, contact_.mobile as mobile0_, contact_.organisation as organis13_0_, contact_.partyType as partyType0_, contact_.phone as phone0_, contact_.postcode as postcode0_, contact_.state as state0_, contact_.status as status0_, contact_.suburb as suburb0_, contact_.type as type0_ from Contact contact_ where contact_.partyId=?
04-22-2013 09:40:00,781 AM DEBUG AbstractEntityPersister:3378 -  Insert 0: insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:40:00,781 AM DEBUG AbstractEntityPersister:3379 -  Update 0: update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:40:00,782 AM DEBUG AbstractEntityPersister:3380 -  Delete 0: delete from Contact where partyId=?
04-22-2013 09:40:00,793 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [NONE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:00,794 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:00,795 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:40:00,795 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [UPGRADE_NOWAIT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:40:00,796 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [FORCE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:40:00,796 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_READ]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:40:00,797 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_WRITE]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update
04-22-2013 09:40:00,798 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=? for update nowait
04-22-2013 09:40:00,798 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:00,799 AM DEBUG Loader:123 - Static select for entity com.mme.model.entity.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:00,803 AM DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:00,804 AM DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.mme.model.entity.Contact: select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:00,806 AM DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5006279d
04-22-2013 09:40:00,807 AM DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: c6aa4620-eb88-4981-b7e2-438242d8d680 (<unnamed>)
04-22-2013 09:40:00,808 AM DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
04-22-2013 09:40:00,808 AM DEBUG SessionFactoryImpl:449 - Instantiated session factory
04-22-2013 09:40:00,811 AM  INFO SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
04-22-2013 09:40:00,812 AM  INFO SchemaUpdate:193 - HHH000102: Fetching database metadata
04-22-2013 09:40:01,421 AM  INFO SchemaUpdate:205 - HHH000396: Updating schema
04-22-2013 09:40:01,421 AM DEBUG Configuration:3366 - Processing hbm.xml files
04-22-2013 09:40:01,421 AM DEBUG Configuration:3396 - Process annotated classes
04-22-2013 09:40:01,421 AM DEBUG Configuration:1400 - Processing fk mappings (*ToOne and JoinedSubclass)
04-22-2013 09:40:01,422 AM DEBUG Configuration:1578 - Processing extends queue
04-22-2013 09:40:01,422 AM DEBUG Configuration:1632 - Processing extends queue
04-22-2013 09:40:01,422 AM DEBUG Configuration:1581 - Processing collection mappings
04-22-2013 09:40:01,422 AM DEBUG Configuration:1591 - Processing native query and ResultSetMapping mappings
04-22-2013 09:40:01,423 AM DEBUG Configuration:1599 - Processing association property references
04-22-2013 09:40:01,423 AM DEBUG Configuration:1621 - Processing foreign key constraints
04-22-2013 09:40:07,256 AM  INFO TableMetadata:65 - HHH000261: Table found: VZWMME.CONTACT
04-22-2013 09:40:07,256 AM  INFO TableMetadata:66 - HHH000037: Columns: [phone, countrycode, fax, status, partytype, organisation, state, lastname, address1, address2, firstname, address3, type, postcode, suburb, email, login, channel, partyid, mobile]
04-22-2013 09:40:07,257 AM  INFO TableMetadata:68 - HHH000108: Foreign keys: []
04-22-2013 09:40:07,257 AM  INFO TableMetadata:69 - HHH000126: Indexes: [contact_pk]
04-22-2013 09:40:07,257 AM DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.Oracle10gDialect]
04-22-2013 09:40:07,258 AM  INFO SchemaUpdate:240 - HHH000232: Schema update complete
04-22-2013 09:40:07,259 AM DEBUG SessionFactoryImpl:963 - Checking 0 named HQL queries
04-22-2013 09:40:07,259 AM DEBUG SessionFactoryImpl:984 - Checking 0 named SQL queries
04-22-2013 09:40:07,265 AM DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
04-22-2013 09:40:07,298 AM DEBUG EntityManagerFactoryRegistry:55 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@69107c05
04-22-2013 09:40:07,298 AM DEBUG EntityManagerFactoryRegistry:65 - Registering EntityManagerFactory: VZWDB01 
04-22-2013 09:40:07,330 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665948073
04-22-2013 09:40:07,332 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 09:40:07,332 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:40:07,332 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:40:07,333 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 09:40:07,337 AM DEBUG AbstractSaveEventListener:133 - Generated identifier: Contact1, using strategy: org.hibernate.id.Assigned
04-22-2013 09:40:07,344 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:40:07,345 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:40:07,346 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
04-22-2013 09:40:07,347 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:40:07,348 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:40:07,348 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=test, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=testLAst, address2=testAdd2, address3=testAdd3, firstname=testFname, type=Business, postcode=4234, suburb=Comp, partyId=Contact1, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:40:07,365 AM DEBUG SQL:104 - insert into Contact (address1, address2, address3, channel, countryCode, email, fax, firstname, lastname, login, mobile, organisation, partyType, phone, postcode, state, status, suburb, type, partyId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
04-22-2013 09:40:07,617 AM DEBUG AbstractTransactionImpl:173 - committing
04-22-2013 09:40:07,617 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:40:07,617 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:40:07,618 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
04-22-2013 09:40:07,618 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:40:07,619 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:40:07,619 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=test, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=testLAst, address2=testAdd2, address3=testAdd3, firstname=testFname, type=Business, postcode=4234, suburb=Comp, partyId=Contact1, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:40:07,847 AM DEBUG JdbcTransaction:113 - committed JDBC Connection
04-22-2013 09:40:07,849 AM DEBUG JdbcCoordinatorImpl:138 - HHH000420: Closing un-released batch
04-22-2013 09:40:07,849 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:40:07,849 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:40:07,850 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:40:07,852 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665948078
04-22-2013 09:40:07,855 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:07,860 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:40:07,861 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:40:07,861 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:08,144 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:40:08,145 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,149 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,150 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,150 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:40:08,150 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:40:08,150 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:40:08,150 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:40:08,150 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:40:08,150 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665948081
04-22-2013 09:40:08,180 AM DEBUG QueryTranslatorImpl:265 - parse() - HQL: SELECT c FROM com.mme.model.entity.Contact c ORDER BY firstname
04-22-2013 09:40:08,186 AM DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'mme'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Contact'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[ORDER] Node: 'ORDER'
       \-[IDENT] Node: 'firstname'

04-22-2013 09:40:08,186 AM DEBUG ErrorCounter:82 - throwQueryException() : no errors
04-22-2013 09:40:08,201 AM DEBUG HqlSqlBaseWalker:109 - select << begin [level=1, statement=select]
04-22-2013 09:40:08,212 AM DEBUG FromElement:157 - FromClause{level=1} : com.mme.model.entity.Contact (c) -> contact0_
04-22-2013 09:40:08,212 AM DEBUG FromReferenceNode:74 - Resolved : c -> contact0_.partyId
04-22-2013 09:40:08,214 AM DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
04-22-2013 09:40:08,215 AM DEBUG DotNode:599 - getDataType() : firstname -> org.hibernate.type.StringType@7f2ad19e
04-22-2013 09:40:08,215 AM DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.firstname -> contact0_.firstname
04-22-2013 09:40:08,216 AM DEBUG HqlSqlBaseWalker:113 - select : finishing up [level=1, statement=select]
04-22-2013 09:40:08,216 AM DEBUG HqlSqlWalker:631 - processQuery() :  ( SELECT ( {select clause} contact0_.partyId ) ( FromClause{level=1} Contact contact0_ ) ( ORDER ( contact0_.firstname {synthetic-alias} firstname ) ) )
04-22-2013 09:40:08,220 AM DEBUG JoinProcessor:175 - Using FROM fragment [Contact contact0_]
04-22-2013 09:40:08,221 AM DEBUG HqlSqlBaseWalker:117 - select >> end [level=1, statement=select]
04-22-2013 09:40:08,221 AM DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Contact)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contact0_.partyId as partyId0_' {alias=c, className=com.mme.model.entity.Contact, tableAlias=contact0_}
    |  \-[SQL_TOKEN] SqlFragment: 'contact0_.address1 as address2_0_, contact0_.address2 as address3_0_, contact0_.address3 as address4_0_, contact0_.channel as channel0_, contact0_.countryCode as countryC6_0_, contact0_.email as email0_, contact0_.fax as fax0_, contact0_.firstname as firstname0_, contact0_.lastname as lastname0_, contact0_.login as login0_, contact0_.mobile as mobile0_, contact0_.organisation as organis13_0_, contact0_.partyType as partyType0_, contact0_.phone as phone0_, contact0_.postcode as postcode0_, contact0_.state as state0_, contact0_.status as status0_, contact0_.suburb as suburb0_, contact0_.type as type0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Contact contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Contact,tableAlias=contact0_,origin=null,columns={,className=com.mme.model.entity.Contact}}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'contact0_.firstname' {propertyName=firstname,dereferenceType=ALL,propertyPath=firstname,path={synthetic-alias}.firstname,tableAlias=contact0_,className=com.mme.model.entity.Contact,classAlias=c}
          +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          \-[IDENT] IdentNode: 'firstname' {originalText=firstname}

04-22-2013 09:40:08,222 AM DEBUG ErrorCounter:82 - throwQueryException() : no errors
04-22-2013 09:40:08,226 AM DEBUG QueryTranslatorImpl:235 - HQL: SELECT c FROM com.mme.model.entity.Contact c ORDER BY firstname
04-22-2013 09:40:08,227 AM DEBUG QueryTranslatorImpl:236 - SQL: select contact0_.partyId as partyId0_, contact0_.address1 as address2_0_, contact0_.address2 as address3_0_, contact0_.address3 as address4_0_, contact0_.channel as channel0_, contact0_.countryCode as countryC6_0_, contact0_.email as email0_, contact0_.fax as fax0_, contact0_.firstname as firstname0_, contact0_.lastname as lastname0_, contact0_.login as login0_, contact0_.mobile as mobile0_, contact0_.organisation as organis13_0_, contact0_.partyType as partyType0_, contact0_.phone as phone0_, contact0_.postcode as postcode0_, contact0_.state as state0_, contact0_.status as status0_, contact0_.suburb as suburb0_, contact0_.type as type0_ from Contact contact0_ order by contact0_.firstname
04-22-2013 09:40:08,227 AM DEBUG ErrorCounter:82 - throwQueryException() : no errors
04-22-2013 09:40:08,232 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:40:08,232 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:40:08,232 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_, contact0_.address1 as address2_0_, contact0_.address2 as address3_0_, contact0_.address3 as address4_0_, contact0_.channel as channel0_, contact0_.countryCode as countryC6_0_, contact0_.email as email0_, contact0_.fax as fax0_, contact0_.firstname as firstname0_, contact0_.lastname as lastname0_, contact0_.login as login0_, contact0_.mobile as mobile0_, contact0_.organisation as organis13_0_, contact0_.partyType as partyType0_, contact0_.phone as phone0_, contact0_.postcode as postcode0_, contact0_.state as state0_, contact0_.status as status0_, contact0_.suburb as suburb0_, contact0_.type as type0_ from Contact contact0_ order by contact0_.firstname
04-22-2013 09:40:08,464 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:40:08,464 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000003]
04-22-2013 09:40:08,465 AM DEBUG Loader:854 - Result set row: 1
04-22-2013 09:40:08,465 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#000005]
04-22-2013 09:40:08,466 AM DEBUG Loader:854 - Result set row: 2
04-22-2013 09:40:08,466 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,467 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000003]
04-22-2013 09:40:08,467 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000003]
04-22-2013 09:40:08,468 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#000005]
04-22-2013 09:40:08,468 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#000005]
04-22-2013 09:40:08,468 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,469 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,469 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:40:08,470 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:40:08,470 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:40:08,470 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:40:08,471 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665948084
04-22-2013 09:40:08,471 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 09:40:08,471 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:40:08,472 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:40:08,472 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 09:40:08,474 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,475 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:08,706 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:40:08,706 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,707 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,708 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:08,708 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:40:08,708 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:40:08,710 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:40:08,710 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:40:08,711 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
04-22-2013 09:40:08,712 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:40:08,712 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:40:08,713 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=test, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=UpdatedLNAME, address2=testAdd2, address3=testAdd3, firstname=UpdatedFNAME, type=Business, postcode=4234, suburb=Comp, partyId=Contact1, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:40:08,713 AM DEBUG SQL:104 - update Contact set address1=?, address2=?, address3=?, channel=?, countryCode=?, email=?, fax=?, firstname=?, lastname=?, login=?, mobile=?, organisation=?, partyType=?, phone=?, postcode=?, state=?, status=?, suburb=?, type=? where partyId=?
04-22-2013 09:40:08,944 AM DEBUG AbstractTransactionImpl:173 - committing
04-22-2013 09:40:08,945 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:40:08,945 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:40:08,945 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
04-22-2013 09:40:08,946 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:40:08,946 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:40:08,946 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=test, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=UpdatedLNAME, address2=testAdd2, address3=testAdd3, firstname=UpdatedFNAME, type=Business, postcode=4234, suburb=Comp, partyId=Contact1, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:40:09,175 AM DEBUG JdbcTransaction:113 - committed JDBC Connection
04-22-2013 09:40:09,175 AM DEBUG JdbcCoordinatorImpl:138 - HHH000420: Closing un-released batch
04-22-2013 09:40:09,175 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:40:09,175 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:40:09,176 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
04-22-2013 09:40:09,176 AM DEBUG SessionImpl:243 - Opened session at timestamp: 13665948091
04-22-2013 09:40:09,176 AM DEBUG AbstractTransactionImpl:158 - begin
04-22-2013 09:40:09,177 AM DEBUG LogicalConnectionImpl:295 - Obtaining JDBC connection
04-22-2013 09:40:09,177 AM DEBUG LogicalConnectionImpl:301 - Obtained JDBC connection
04-22-2013 09:40:09,177 AM DEBUG JdbcTransaction:69 - initial autocommit status: false
04-22-2013 09:40:09,178 AM DEBUG Loader:2046 - Loading entity: [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:09,178 AM DEBUG SQL:104 - select contact0_.partyId as partyId0_0_, contact0_.address1 as address2_0_0_, contact0_.address2 as address3_0_0_, contact0_.address3 as address4_0_0_, contact0_.channel as channel0_0_, contact0_.countryCode as countryC6_0_0_, contact0_.email as email0_0_, contact0_.fax as fax0_0_, contact0_.firstname as firstname0_0_, contact0_.lastname as lastname0_0_, contact0_.login as login0_0_, contact0_.mobile as mobile0_0_, contact0_.organisation as organis13_0_0_, contact0_.partyType as partyType0_0_, contact0_.phone as phone0_0_, contact0_.postcode as postcode0_0_, contact0_.state as state0_0_, contact0_.status as status0_0_, contact0_.suburb as suburb0_0_, contact0_.type as type0_0_ from Contact contact0_ where contact0_.partyId=?
04-22-2013 09:40:09,409 AM DEBUG Loader:854 - Result set row: 0
04-22-2013 09:40:09,410 AM DEBUG Loader:1355 - Result row: EntityKey[com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:09,411 AM DEBUG TwoPhaseLoad:140 - Resolving associations for [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:09,411 AM DEBUG TwoPhaseLoad:271 - Done materializing entity [com.mme.model.entity.Contact#Contact1]
04-22-2013 09:40:09,411 AM DEBUG StatefulPersistenceContext:899 - Initializing non-lazy collections
04-22-2013 09:40:09,411 AM DEBUG Loader:2070 - Done entity load
04-22-2013 09:40:09,414 AM DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
04-22-2013 09:40:09,414 AM DEBUG AbstractFlushingEventListener:183 - Dirty checking collections
04-22-2013 09:40:09,415 AM DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
04-22-2013 09:40:09,415 AM DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
04-22-2013 09:40:09,415 AM DEBUG EntityPrinter:114 - Listing entities:
04-22-2013 09:40:09,416 AM DEBUG EntityPrinter:121 - com.mme.model.entity.Contact{phone=testPhone, partyType=test, fax=testFax, status=ACTIVE, organisation=testORg, state=CA, countryCode=US, address1=testAdd1, lastname=UpdatedLNAME, address2=testAdd2, address3=testAdd3, firstname=UpdatedFNAME, type=Business, postcode=4234, suburb=Comp, partyId=Contact1, email=testEmail, login=MyLoginId, channel=test, mobile=testMobile}
04-22-2013 09:40:09,416 AM DEBUG SQL:104 - delete from Contact where partyId=?
04-22-2013 09:40:09,646 AM DEBUG AbstractTransactionImpl:173 - committing
04-22-2013 09:40:09,874 AM DEBUG JdbcTransaction:113 - committed JDBC Connection
04-22-2013 09:40:09,874 AM DEBUG JdbcCoordinatorImpl:138 - HHH000420: Closing un-released batch
04-22-2013 09:40:09,875 AM DEBUG LogicalConnectionImpl:314 - Releasing JDBC connection
04-22-2013 09:40:09,875 AM DEBUG LogicalConnectionImpl:332 - Released JDBC connection
04-22-2013 09:40:09,875 AM DEBUG ConnectionProxyHandler:219 - HHH000163: Logical connection releasing its physical connection
